{
  "info": {
    "_postman_id": "beb6ba37-3b6e-4110-bda8-e26def0aafec",
    "name": "QTS API Guide",
    "description": "# Overview  \n\nQTS exposes its SDP (Service Delivery Platform) functionality via RESTful APIs.  \n\nThis document is for developers wishing to automate the provisioning and management of their QTS resources, including Roster, Power, Sensor, Asset Manager and Online Ordering. It provides an overall picture of the REST API interface along with details to develop application integration code against it. \n\nTo work with SDP RESTful APIs, you can use any browser or client application that supports HTTP and HTTPS protocols.  This documentation and API collections are in Postman. Each API method includes a description of the functionality as well as an example output.\n\nYou can create new API users for your company using the Roster Tool > Create new User. For any questions please contact QTS Support.  \n\napisupport@qtsdatacenters.com\n\n# API Requests and Version Control\n\nQTS API URLs use the following naming convention which includes the version:   https://api.qtsdatacenters.com/sdp/api/{modulename}/v1/{resourcePath}\n\nFor example, in order to list user's environments, use the following URL: https://api.qtsdatacenters.com/sdp/api/roster/v1/user/envusers  \n\nThe version of the RESTful API is noted in the URL.  \n\nQTS will up-version API based on major changes including:\n* a change in the format of the response\n* a change in the response/data type\n* removing any part of the API\n\nWithin SDP, API privilege user account must have the following roles:\n-  API_CUSTOMER_STANDARD\n-  ROSTER_ADMIN\n\nSDP UI URL:  \nhttps://sdp.qtsdatacenters.com\n\n# Common API Responses\n\nAPIs use standard HTTP status codes to indicate the general result of a request. Every response from the API will have one of the following status codes in the header:\n\nHTTP Code|Reason|Description\n:------------:|---------------:|---------------------------:|\n200 OK\t\t|| Success. Indicates that the request was valid and the transaction executed normally.\n201 Created||Indicates that a new resource was created. 201 Created is not used when a resource is updated.\n400 Bad Request|INVALID_INPUT_DATA|Indicates that the JSON posted with the request contained bad syntax or was missing required fields.\n401 Unauthorized|AUTHORIZATION_FAILURE|Indicates invalid credentials were provided for authentication.\n403 Forbidden|FORBIDDEN|Indicates that the credentials provided for authentication were valid but the user is not permitted to access the resource.\n404 Not Found|RESOURCE_NOT_FOUND|Indicates that there is no resource at the URI specified in the request.\n405 Method Not Allowed||Indicates the URL is valid but operation is not supported or not allowed for the resource.\n408 Request timeout||Indicates the request response  was not received during expected amount of time.\n500 Internal Server Error|UNEXPECTED_ERROR|Indicates that a general error has occurred with the request that is not described by another status code.\n503 Service Unavailable||System is down for scheduled maintenance.This response remains in place for the duration of the scheduled maintenance window.\n400 Bad Request|INVALID_INPUT_DATA|Indicates input data does not correspond to validation rules or mandatory fields were missed.\n\n# Paging, Filtering and Sorting\nPaging is the act of splitting a large list of results into consumable chunks as a means of improving performance and general manageability.\n\n* Paging operators are separated with & symbol\n* Paging operators are case sensitive\n\nThe following operators are supported:\n* pageNumber - specify number of pages\n* pageSize - number of records per page\n\n**Example:** /sdp/ticketing/v1/api/temporary_visitor_reservations?pageNumber=1&pageSize=20\n\n\n## Optional Paging Parameters\n\nParameter|Usage|Example\n---------:|------------------:|-------------------------------:\npageSize|Optional. May only be specified once. Must be a positive integer between 1 and a maximum value documented for each API function.|pageSize=50  Return 50 records per page\npageNumber|Optional. May only be specified once. Must be a positive integer. If the value supplied exceeds the number of pages for the request, the last page will be returned.|pageNumber=3 Returns the 3rd page. If pageSize is 50, then return records 101-through-150.\n\nJSON response elements when using paging parameters:\n\nAttribute Name|Attribute Details|Description\n---------:|------------------:|-------------------------------:\npageCount|Non-negative Integer|The number of result records in this page.\npageNumber|Non-negative Integer|The page number requested by the user or the default page (1) if none supplied.\npageSize|Non-negative Integer|The page size used; either specified in the request or the default for the API function being requested, max value 10000.\ntotalCount|Non-negative Integer|The total number of result records matching request criteria\n\n**Example result:**  \n\t\t{  \n\t    \"pageInfo\": {  \n\t        \"pageSize\": 20,  \n\t        \"totalCount\": 115,  \n\t        \"totalPages\": 6,  \n\t        \"pageNumber\": 1  \n\t    },\n\n\n## Filtering and Sorting\nUse *sorting* to present results in a specified order. \n\n* Sort keyword specifies the parameter results should be sorted.\n* Name of request parameter must be specified to identify how results should be sorted\n* Sorting operators:  \n\t* ASC\n\t* DESC\n* Sorting operator and keywords are case sensitive\n\n**Example:** /sdp/ticketing/v1/api/temporary_visitor_reservations?sort=location.ASC\n\n\nUse *filtering* to reduce size of list by applying request criteria to narrow the matched set of results.\n\nThe following general rules apply across all APIs developed with the paging and filtering approach:\n* Every GET method has its own set of filter parameters documented\n* Parameter names and some parameter values are based on keywords and field names, which will be published in the API documentation\n* Field names are case sensitive\n* The set of field names and filters for a given API function can be enhanced over time with the publication of new values\n* Multiple filtering operators are separated with & symbol\n* Dates are defined in XSD format but can be passed in full (including time) or short (date\nonly) format. For example; \"20180901T00:00:00Z\" and \"2018-09-01\" equate to the same\nvalue and time zone.\n* Both EQUALS (single value) and IN (multiple value) queries are supported\n* The filter component has the following format: `?_s=field==value` where the filter criteria are specified as *field=value* pairs.\n\nLogical Operators|Syntax|Description\n---------:|---------------:|--------:\nAND|;(Semicolon)|All conditions in the filter parameter must be true.               Example:`?_s=firstName==john;lastName==lee` Returns Roster Users with first name as \"john\" AND last name as \"lee\"\nOR|,(Comma)| Any of the conditions specified in the filter parameter must be true. Example: `?_s=firstName==john,lastName==lee` Returns Roster Users with first name as \u2018john\u2019 OR last name as \u2018lee\u2019\n\n\nComparison Operators|Syntax|Description\n---------:|---------------:|-----------------:\nEQUAL|==|The result must be equal to the value specified in the *field=value* pair. Example:  `?_s=username==john.test` Returns only Roster Users that have \u2018john.test\u2019 as username\nNOT EQUAL|!=|The result must not be equal to the value specified in the *field=value* pair.  Example: `?_s=username!=john.test` Returns only Roster Users that do not have \u2018john.test\u2019 as username|\nGREATER THAN|gt|The result must be greater than the value specified in the *field=value* pair.`?_s=dateCreation=gt=2018-09-01`  Returns only records created after 1st of September 1, 2018|\nLESS THAN|lt|The result must be less than the value specified in the *field=value* pair.`?_s=dateCreation=lt=2018-09-01` Returns only records created before 1st of September 1, 2018|\n\nAdditional Operators|Syntax|Description\n---------:|---------------:|-----------------:\nWildcard|*|The \u201c*\u201d wildcard character (asterisks) can be used to match zero or more characters.  Each API supporting wildcard states that it supports wildcard within its own definition.|\nSTARTS WITH|==|Example: `?_s=username==john` Returns only Roster Users that has username starts with \"john\"|\nENDS WITH|==*|Example: `?_s=username==*john`  Returns only Roster Users where username ends with \"john\"\nCONTAINS|==\\*value\\*|Example: `?_s=username==*john*`   Returns only Roster Users that has \"john\" in username|\nORDER BY|orderBy=value|`?orderBy=username`  Results would be sorted by username, ascending order by default|\nPAGING PARAMETERS|pageNumber=value;pageSize=value|`?pageNumber=2;pageSize=10`  Returns only second page, 10 results per page|\n\n## Sample Formatting Requests\n\nRequest|Response\n-----------------------------------------------------------------------------------------|---------------------\n/sdp/api/roster/v1/users|Lists 100 Users that are available for the current requester, sorted by username\n/sdp/api/power/v1/raw_data?site=DFW1&format=json& _s=period==monthly;date==10-01-2018|Generates JSON raw power data report for monthly period October 2018.  Report contains all circuits and poles of DFW1 site including kW readings for poles of specified location circuits\n/sdp/api/power/v1/power_demand?site=DFW1&_s=date==12-01-2018;period==weekly;site=DFW1|Generates .xlsx report for week starting December 1, 2018 for DFW1 site\n/sdp/api/roster/v1/users?pageNumber=2;pageSize=100;orderBy=date|Indicates a page size of 100 and requests the second page of results being page 101 to 200 inclusive, ordered by date of deployment ascending (default)\n\n\n## Paging and Filtering Common API Responses\n\nHTTP Code|Reason|Description\n:------------:|---------------:|---------------------------:|\n400 (Error)|INCORRECT_PAGING_PARAMETER|A supplied value for any paging parameter is outside of accepted value set. A negative or non-numeric pageSize or pageNumber, pageSize too large, an invalid orderBy value or more than one value was supplied for a given paging parameter.\n400 (Error)|INVALID_FILTER_VALUE|A filter was specified with an invalid value. Returned if an invalid comparative operator is used with a filter field.  For example, MIN and MAX will typically not be allowed with String fields.\n400 (Error)|UNSUPPORTED_PARAMETER|Invalid comparative operator|Invalid operator was used, for example sorted with invalid value: ASCENSDING instead of ASC\n400 (Error)|INVALID_INPUT_DATA|Not a comparison expression. Returned in case any filtering or sorting parameter was missed or extra symbols added to the filter line.\n400 (Error)|TOO_MANY_FILTER_PARAMETERS|Exceeded maximum supported number of filter operators. Maximum number of filter operators is 10. Returned if more than 10 values for a filter line were supplied.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "API Authentication",
      "item": [
        {
          "name": "Get Access Token",
          "_postman_id": "773a989b-45d3-484f-8d85-7a32bfad67d2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"username\":\"test_api_user\",\n\"password\":\"yourpasswordgoeshere\",\n\"api_access_key\":\"CM6XY0UPZHASLPWJMIYY\",\n\"api_secret_key\":\"I@AsGlWcSqkDqvybrxPeGX_(}!kYzEZA(E@[nQBn\"\n}"
            },
            "url": "{{url}}/sdp/api/token/access",
            "description": "To execute the QTS API methods, you must include the Authentication Token obtained from this response as part of the Authorization parameter. The Authentication Token must be placed after the Bearer parameter with a space between the Bearer label and your Authentication Token.  Generated token lifetime is returned in the response of this API."
          },
          "response": [
            {
              "id": "c7481806-58a5-44a9-bf40-55d6a276bf1d",
              "name": "Get Access Token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer 2bfe3123-6f5d-46ef-b0d3-ad17af33c928"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\"username\":\"test_api_user\",\n\"password\":\"yourpasswordgoeshere\",\n\"api_access_key\":\"CM6XY0UPZHASLPWJMIYY\",\n\"api_secret_key\":\"I@AsGlWcSqkDqvybrxPeGX_(}!kYzEZA(E@[nQBn\"\n}"
                },
                "url": "https://uatmicroserv.qtsdatacenters.com/sdp/api/token/access"
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "responseTime": null,
              "body": "{\r\n    \"access_token\": \"aaa2133b-bf2d-4f6b-a8ff-b9e72d603315\",\r\n    \"refresh_token\": \"23d518e9-d1e2-459f-9827-bf97d28c3850\",\r\n    \"scope\": \"memberOf nucleus_privileges uid\",\r\n    \"token_type\": \"Bearer\",\r\n    \"expires_in\": 1799\r\n}\r\n"
            }
          ]
        },
        {
          "name": "Get Refresh Token",
          "_postman_id": "f32da527-04f7-4915-b257-e8e1e31a5d78",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/sdp/api/token/refresh",
            "description": "The web server OAuth authentication flow and user-agent flow both provide a refresh token that can be used to obtain a new access token. \r\nRefresh token may be provided during authorization that can be used to get a new access token.\r\nGenerated refresh token lifetime is returned in the response of this API."
          },
          "response": []
        }
      ],
      "_postman_id": "8d11e971-32d5-4dae-9dd8-31447fe4310d",
      "description": "##  Authentication and Authorization \nQTS API methods are implemented with OAuth2.0 authentication protocol support:\n-  Username/Password + Client ID/Secret (aka API access key and secret key) \n-  Cient account should be created for every user \n-  Client's secret key may be regenerated\n-  The generated token and refresh token has a finite lifetime\n-  The lifetime of the tokens will be returned in the response of the POST token request \n\n## Token Request\n\nThe client application obtains an access token by sending a POST request to the token request endpoint with the following request parameters:   \n\n\tEndpoint:  /sdp/api/token/access  \n\tHeader:  Content-Type: application/json  \n\tBody: \n\t{\n\t\"api_access_key\": \u201c%API Access Key%\u201d, \"api_secret_key\": \u201c%API Secret Key%\u201d, \"username\": \u201c%User name%\u201d, \"password\": \u201c%Password%\n\t\"  \n\t}\n\t\n\tRequest Type: HTTP POST  \n\t\n\tResponse details:  \n\t{  \n\t   \"scope\": \"memberOf nucleus_privileges uid\"  \n\t   \"expires_in\": 599  \n\t   \"token_type\": \"Bearer\"  \n\t   \"refresh_token\": \"4c1fa679-5548-4c13-8726-e8be782b7ca0\"  \n\t   \"access_token\": \"33c4b2ff-1111-498e-94e1-ca1ba0ea8ce8\"    \n\t}",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "27d8cabe-34f2-4439-92ee-9c8995d0c2ac",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "dce09676-ada0-407c-a687-9353e4c6a5fc",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "API General  ",
      "item": [
        {
          "name": "Get List of Contracts",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "806b2374-1004-49c1-98ad-bee9f78d7db5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": "{{url}}/sdp/ordering/v1/api/contracts",
            "description": "Returns list of your contracts. \n\nIn other APIs, salesForceContractId and contract location are required parameters to create a new order using /sdp/ordering/v1/api/ccx/orders/"
          },
          "response": [
            {
              "id": "720d3574-215b-4e90-b89e-77dab2bc9f3f",
              "name": "Get list of Contracts",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/contracts"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Mon, 18 Mar 2019 15:39:52 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "[\n    {\n        \"salesForceContractId\": \"800f2000001fnVdAAI\",\n        \"number\": \"00007127\",\n        \"gpNumber\": \"Test.12346.Test\",\n        \"location\": \"CHI1\",\n        \"startDate\": \"05-01-2018\",\n        \"endDate\": \"04-30-2019\"\n    },\n    {\n        \"salesForceContractId\": \"8002F0000003oSIQAY\",\n        \"number\": \"00008058\",\n        \"gpNumber\": \"ATL1.12345.Test\",\n        \"location\": \"ATL1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-28-2021\"\n    },\n    {\n        \"salesForceContractId\": \"8002F0000003oSNQAY\",\n        \"number\": \"00008059\",\n        \"gpNumber\": \"SUW1.12345.Test\",\n        \"location\": \"SUW1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-29-2021\"\n    },\n    {\n        \"salesForceContractId\": \"800f2000001gYOKAA2\",\n        \"number\": \"00008222\",\n        \"gpNumber\": \"ATL.Test12345\",\n        \"location\": \"ATL1\",\n        \"startDate\": \"12-28-2018\",\n        \"endDate\": \"12-28-2019\"\n    },\n    {\n        \"salesForceContractId\": \"800f2000001gZQrAAM\",\n        \"number\": \"00008274\",\n        \"gpNumber\": \"SUW1.Test12345\",\n        \"location\": \"SUW1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-07-2021\"\n    },\n    {\n        \"salesForceContractId\": \"80054000000A01RAAS\",\n        \"number\": \"00008366\",\n        \"gpNumber\": \"RIC1.Test12344\",\n        \"location\": \"RIC1\",\n        \"startDate\": \"02-20-2019\",\n        \"endDate\": \"02-25-2022\"\n    }\n]"
            }
          ]
        },
        {
          "name": "Get List of Data Centers",
          "_postman_id": "123ca813-eadb-4e98-bcd3-6e0252daa22d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": "{{url}}/sdp/api/roster/v1/users/available_locations",
            "description": "Returns a list of data centers (sites/locations) for your Environment. Data center site id (aka location) will be used as a parameter in many of the QTS API requests.  \n\nSupported filters:  \n* environmentName - narrows the results to locations associated with specified Environments only\n* state - returns Locations within the specified geographical state \n* city - returns Locations with specified city\n* locationName - returns Locations with specified Name. Case-sensitive parameter\n\nPaging filters are returned in response.\n\n**Example** to list your data centers in Georgia:  \n/sdp/api/roster/v1/users/available_locations?_s=state==GA"
          },
          "response": [
            {
              "id": "fc679c23-59a6-4aeb-a8a9-c1cd867191b4",
              "name": "Get list of permitted Data Centers",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/api/roster/v1/users/available_locations"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Mon, 18 Mar 2019 15:38:57 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"totalCount\": 9,\n    \"pageNumber\": 1,\n    \"pageSize\": 20,\n    \"pageCount\": 9,\n    \"associatedLocations\": [\n        {\n            \"locationName\": \"ATL1\",\n            \"city\": \"Atlanta\",\n            \"state\": \"GA\"\n        },\n        {\n            \"locationName\": \"CHI1\",\n            \"city\": \"Chicago\",\n            \"state\": \"IL\"\n        },\n        {\n            \"locationName\": \"DFW1\",\n            \"city\": \"Irving\",\n            \"state\": \"TX\"\n        },\n        {\n            \"locationName\": \"EDC4\",\n            \"city\": \"\",\n            \"state\": \"\"\n        },\n        {\n            \"locationName\": \"IAD1\",\n            \"city\": \"Dulles\",\n            \"state\": \"VA\"\n        },\n        {\n            \"locationName\": \"IAD2\",\n            \"city\": \"Sterling\",\n            \"state\": \"VA\"\n        },\n        {\n            \"locationName\": \"SJC1\",\n            \"city\": \"Santa Clara\",\n            \"state\": \"CA\"\n        },\n        {\n            \"locationName\": \"SJC2\",\n            \"city\": \"Santa Clara-2\",\n            \"state\": \"CA\"\n        },\n        {\n            \"locationName\": \"SUW1\",\n            \"city\": \"Suwanee\",\n            \"state\": \"GA\"\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Get Audit Logging Details",
          "_postman_id": "e500921a-fbd6-41cc-82ef-33d9c8523917",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}",
                "type": "text"
              }
            ],
            "url": "{{url}}/sdp/api/roster/v1/audit_records",
            "description": "Retrieves audit logs for permitted environments to check applied actions and troubleshoot request/response details.\r\n\r\nThe following basic information is audited:\r\n\r\n* userId - requester user identifier\r\n* timerequested - ISO 8601 datetime in UTC: yyyy-MM-dd'T'HH:mm:ss'Z'\r\n* resource - basic path request was sent to Example: api/device/, api/roster/user/, etc\r\n* operation - REST operation \"PUT\", \"GET\", \"POST\" or \"DELETE\" standing correspondingly for Create, Read, Update or Delete\r\n* status - HTTP status code. Example: 200 OK, 400 Error, 5xx status codes may not be logged in case when error cause is outside of the application code scope (application container failure or proxy server failure)\r\n* query - HTTP request query: all parameters in the request\r\n* payload - JSON representation of the operation-connected entity provided in HTTP request\r\n\r\nNote: POST requests for authentication token generation are not audited because of security reasons."
          },
          "response": [
            {
              "id": "827974ba-c198-4dac-be62-a8721e95c1ed",
              "name": "Get Audit Logging Details",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}",
                    "type": "text"
                  }
                ],
                "url": "{{url}}/sdp/api/roster/v1/audit_records"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Mon, 25 Mar 2019 14:25:56 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"totalCount\": 16420,\n    \"pageNumber\": 1,\n    \"pageSize\": 20,\n    \"pageCount\": 20,\n    \"auditRecords\": [\n        {\n            \"username\": \"portal.demo\",\n            \"timeRequested\": \"2016-11-18 12:30:21.593 +0000\",\n            \"resource\": \"/sdp/ui/roster/users/test/customer\",\n            \"operation\": \"PUT\",\n            \"status\": \"200\",\n            \"query\": \"\",\n            \"payload\": \"{\\\"username\\\":\\\"test\\\",\\\"firstName\\\":\\\"Test\\\",\\\"middleName\\\":\\\"updated1\\\",\\\"lastName\\\":\\\"Tester-updated\\\",\\\"title\\\":\\\"updated title\\\",\\\"passphrase\\\":\\\"123456789\\\",\\\"userStatus\\\":\\\"Active\\\",\\\"businessPhone\\\":\\\"9999999999\\\",\\\"email\\\":\\\"test@gmail.com\\\",\\\"notifications\\\":false,\\\"ticketRequester\\\":false}\"\n        },\n        {\n            \"username\": \"portal.demo\",\n            \"timeRequested\": \"2016-11-18 12:33:32.623 +0000\",\n            \"resource\": \"/sdp/ui/roster/users/customer\",\n            \"operation\": \"POST\",\n            \"status\": \"200\",\n            \"query\": \"\",\n            \"payload\": \"{\\\"firstName\\\":\\\"Test\\\",\\\"linkedEnvironments\\\":[\\\"qts-sales-sam-ent\\\"],\\\"associatedRoles\\\":[\\\"Roster User\\\"],\\\"userStatus\\\":\\\"Active\\\",\\\"ticketRequester\\\":false,\\\"userSiteAttributes\\\":[],\\\"userType\\\":\\\"CUSTOMER_STANDARD\\\",\\\"authType\\\":null,\\\"username\\\":\\\"testuser\\\",\\\"lastName\\\":\\\"Test\\\",\\\"businessPhone\\\":\\\"9999999999\\\",\\\"mobilePhone\\\":\\\"9999999999\\\",\\\"homePhone\\\":\\\"999999999\\\",\\\"email\\\":\\\"test@gmail.com\\\"}\"\n        },\n        {\n            \"username\": \"portal.demo\",\n            \"timeRequested\": \"2016-11-18 12:51:24.611 +0000\",\n            \"resource\": \"/sdp/ui/roster/users/testuser/site_attributes\",\n            \"operation\": \"PUT\",\n            \"status\": \"200\",\n            \"query\": \"\",\n            \"payload\": \"[{\\\"siteAttributeID\\\":null,\\\"locationName\\\":\\\"ATL1\\\",\\\"officeAccess\\\":true,\\\"equipmentRemoval\\\":true,\\\"requestVisitorAccess\\\":false,\\\"routine\\\":true,\\\"comprehensive\\\":true,\\\"emergency\\\":false,\\\"floorAccess\\\":\\\"Escorted by Customer\\\",\\\"accessStartTimestamp\\\":1479488400000}]\"\n        },\n        {\n            \"username\": \"portal.demo\",\n            \"timeRequested\": \"2016-11-18 12:51:38.366 +0000\",\n            \"resource\": \"/sdp/ui/roster/users/testuser/site_attributes\",\n            \"operation\": \"PUT\",\n            \"status\": \"200\",\n            \"query\": \"\",\n            \"payload\": \"[]\"\n        },\n        \n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Roster WADL",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "5adebfac-fe94-4657-abee-cbe94f1a08fb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/roster/v1?_wadl",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "roster",
                "v1"
              ],
              "query": [
                {
                  "key": "_wadl",
                  "value": null
                }
              ]
            },
            "description": "Returns WADL content for User Management"
          },
          "response": [
            {
              "id": "e9026a9d-fa2e-4b06-b6da-d4545be86dbf",
              "name": "Roster WADL",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/v1?_wadl",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "v1"
                  ],
                  "query": [
                    {
                      "key": "_wadl",
                      "value": null
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "xml",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/xml"
                },
                {
                  "key": "Date",
                  "value": "Mon, 08 Apr 2019 20:43:40 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "<application xmlns=\"http://wadl.dev.java.net/2009/02\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n    <grammars></grammars>\n    <resources base=\"https://uatmicroservices.qtsdatacenters.com/sdp/api/roster/v1\">\n        <resource path=\"/users\">\n            <method name=\"GET\">\n                <request>\n                    <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                </request>\n                <response>\n                    <representation mediaType=\"application/json\"/>\n                </response>\n            </method>\n            <method name=\"POST\">\n                <request>\n                    <representation mediaType=\"application/json\"/>\n                </request>\n                <response>\n                    <representation mediaType=\"application/json\"/>\n                </response>\n            </method>\n            <resource path=\"/available_locations\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/environments/attributes\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/export\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"format\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                        <representation mediaType=\"application/excel\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/site_attributes\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"PUT\">\n                    <request>\n                        <representation mediaType=\"application/json\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/environment_roles\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/environments\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"POST\">\n                    <request>\n                        <representation mediaType=\"application/json\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/environments/{environment_name}\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <param name=\"environment_name\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"DELETE\">\n                    <request></request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/roles\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"POST\">\n                    <request>\n                        <representation mediaType=\"application/json\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/roles/{role_name}\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <param name=\"role_name\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"DELETE\">\n                    <request></request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/site_attributes\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"POST\">\n                    <request>\n                        <representation mediaType=\"application/json\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n                <method name=\"PUT\">\n                    <request>\n                        <representation mediaType=\"application/json\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/site_attributes/{site_attribute_id}\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <param name=\"site_attribute_id\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"DELETE\">\n                    <request></request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/unlock\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"PUT\">\n                    <request></request>\n                    <response>\n                        <representation mediaType=\"*/*\"/>\n                    </response>\n                </method>\n            </resource>\n        </resource>\n        <resource path=\"/employee/users\">\n            <method name=\"GET\">\n                <request>\n                    <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                </request>\n                <response>\n                    <representation mediaType=\"application/json\"/>\n                </response>\n            </method>\n            <method name=\"POST\">\n                <request>\n                    <representation mediaType=\"application/json\"/>\n                </request>\n                <response>\n                    <representation mediaType=\"application/json\"/>\n                </response>\n            </method>\n            <resource path=\"/{username}/site_attributes\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"POST\">\n                    <request>\n                        <representation mediaType=\"application/json\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"/{username}/unlock\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"PUT\">\n                    <request></request>\n                    <response>\n                        <representation mediaType=\"*/*\"/>\n                    </response>\n                </method>\n            </resource>\n        </resource>\n        <resource path=\"/audit_records\">\n            <method name=\"GET\">\n                <request>\n                    <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                </request>\n                <response>\n                    <representation mediaType=\"application/json\"/>\n                </response>\n            </method>\n        </resource>\n        <resource path=\"/users\">\n            <resource path=\"/{username}/request_badge_access\">\n                <param name=\"username\" style=\"template\" type=\"xs:string\"/>\n                <method name=\"POST\">\n                    <request>\n                        <representation mediaType=\"application/json\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                    </response>\n                </method>\n            </resource>\n        </resource>\n    </resources>\n</application>"
            }
          ]
        },
        {
          "name": "Power WADL ",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "1bb9b005-8b26-4ae2-9eee-8a8aaeefc7fe",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/power/v1?_wadl",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "power",
                "v1"
              ],
              "query": [
                {
                  "key": "_wadl",
                  "value": null
                }
              ]
            },
            "description": "Returns WADL content for Power APIs"
          },
          "response": [
            {
              "id": "d204c08b-a6b0-4bac-8e42-d2f06a43d8f9",
              "name": "Power WADL ",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/power/v1?_wadl",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "power",
                    "v1"
                  ],
                  "query": [
                    {
                      "key": "_wadl",
                      "value": null
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "xml",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/xml"
                },
                {
                  "key": "Date",
                  "value": "Tue, 09 Apr 2019 20:56:32 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "<application xmlns=\"http://wadl.dev.java.net/2009/02\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n    <grammars></grammars>\n    <resources base=\"https://uatmicroservices.qtsdatacenters.com/sdp/api/power/v1\">\n        <resource path=\"/\">\n            <resource path=\"power_demand\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                        <param name=\"site\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"power_overage_daily\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"date\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"*/*\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"power_report\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                        <param name=\"site\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"raw_data/circuits\">\n                <method name=\"GET\">\n                    <request></request>\n                    <response>\n                        <representation mediaType=\"*/*\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"raw_data/poles\">\n                <method name=\"GET\">\n                    <request></request>\n                    <response>\n                        <representation mediaType=\"*/*\"/>\n                    </response>\n                </method>\n            </resource>\n            <resource path=\"raw_device_data\">\n                <method name=\"GET\">\n                    <request>\n                        <param name=\"_s\" style=\"query\" type=\"xs:string\"/>\n                        <param name=\"orderBy\" style=\"query\" type=\"xs:string\"/>\n                        <param name=\"format\" style=\"query\" default=\"json\" type=\"xs:string\"/>\n                        <param name=\"site\" style=\"query\" type=\"xs:string\"/>\n                    </request>\n                    <response>\n                        <representation mediaType=\"application/json\"/>\n                        <representation mediaType=\"text/csv\"/>\n                    </response>\n                </method>\n            </resource>\n        </resource>\n    </resources>\n</application>"
            }
          ]
        }
      ],
      "_postman_id": "9ac7caf9-c91e-43d5-bbd1-2c82931937c2",
      "description": "These API responses are necessary to obtain values to be used as required inputs for specific API calls.  \n\nFor example, the SalesForce contract id is a required field for a crossConnect order.  \n\nThis section also contains WADL for Roster and Power.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "c3bc7a3e-aded-4451-acea-0a42a1d057e4",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "0ed5b9d1-e797-4877-ac7b-67904451b939",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Service Desk Request",
      "item": [
        {
          "name": "Get List of Incidents",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "5438bd00-ebcb-43f9-bed2-4e24da8faa81",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/ticketing/v1/api/incidents?state=Active&location=All Sites",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "ticketing",
                "v1",
                "api",
                "incidents"
              ],
              "query": [
                {
                  "key": "state",
                  "value": "Active"
                },
                {
                  "key": "location",
                  "value": "All Sites"
                }
              ]
            },
            "description": "Lists Service Desk incidents.  \n\nSupported filters:  \n* **incidentNumber**\n* **location**\n* **caller**\n* **shortDescription**\n* **description**\n* **priority**\n* **state**\n\t* New\n\t* Active\n\t* Awaiting Evidence\n\t* Awaiting Maintenance\n\t* Awaiting Problem\n\t* Awaiting User Infor\n\t* Resolved\n* **impact**\n\t* Minor/Localized\n\t* Moderate/Limited\n\t* Significant/Large\n\t* Extensive/Wide Spread\n* **urgency**\n\t* Low\n\t* Medium\n\t* High\n\t* Critical\n* **intervalStartDate** (MM-DD-YYYY format)\n* **intervalEndDate** (MM-DD-YYYY format)  \n\nNotes: \n* Fileter values are case insensitive and use 'contains' comparison operator\n* Filters return incidents that have dateOpened no later then intervalEndDate and dateClosed not earlier then intervalStartDate\n* Paging filters are used in API results; ensure that your paging size is correct."
          },
          "response": [
            {
              "id": "c1eaee9e-e1f3-460e-bbaa-99a8c8b9d1ab",
              "name": "Get List of Incidents",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/ticketing/v1/api/incidents?state=Active&location=All Sites",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "ticketing",
                    "v1",
                    "api",
                    "incidents"
                  ],
                  "query": [
                    {
                      "key": "state",
                      "value": "Active"
                    },
                    {
                      "key": "location",
                      "value": "All Sites"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Tue, 09 Apr 2019 20:04:45 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 20,\n        \"totalCount\": 1,\n        \"totalPages\": 1,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"caller\": \"Test User\",\n            \"dateOpened\": \"2018-10-22 17:08:00.000+0000\",\n            \"environment\": \"\",\n            \"location\": \"All Sites\",\n            \"shortDescription\": \"Delete \\\"QTS Product Training Company\\\" orders in Salesforce \",\n            \"description\": \"Request to delete internal SDP Portal generated orders used by the Product Development team to test systems flow through processes.  These orders are opened within the SDP Portal with the company name \\\"QTS Product Training Company\\\" and are not needed after the tests are completed.  \\r\\n\\r\\n\\r\\n\\r\\n\",\n            \"priority\": \"Low\",\n            \"state\": \"Active\",\n            \"impact\": \"Minor/Localized\",\n            \"urgency\": \"Low\",\n            \"comments\": [\n                {\n                    \"timestamp\": \"2018-10-22 05:47:50.000+0000\",\n                    \"author\": \"Test User\",\n                    \"comment\": \"Assigned to Applications-Portal for review.\"\n                },\n                {\n                    \"timestamp\": \"2018-10-22 06:09:29.000+0000\",\n                    \"author\": \"Test User\",\n                    \"comment\": \"This should be referred to the SalesForce team.\"\n                }\n            ],\n            \"incidentNumber\": \"INC0520199\"\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Get List of Requested Items",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "06cb0e01-2a0b-4b55-ab63-d67a3cc9dfb1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/ticketing/v1/api/requested_items?intervalStartDate=04-02-2019",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "ticketing",
                "v1",
                "api",
                "requested_items"
              ],
              "query": [
                {
                  "key": "intervalStartDate",
                  "value": "04-02-2019"
                }
              ]
            },
            "description": "Lists Service Desk requested items.\n\nSupported filters:    \n* location (exact match, case insensitive search)\n* requestedItemNumber (contains, case insensitive search)\n* state (contains, case insensitive search)\n* stage (contains, case insensitive search)\n* intervalStartDate (MM-DD-YYYY format)\n* intervalEndDate (MM-DD-YYYY format)\n\nNotes: \n* Filters return incidents that have dateOpened no later then intervalEndDate and dateClosed not earlier then intervalStartDate\n* Paging filters are used in API results; ensure that your paging size is correct"
          },
          "response": [
            {
              "id": "54aa8a2e-93dc-4a15-9c69-25f186a4e1f3",
              "name": "Get List of Requested Items",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/ticketing/v1/api/requested_items?intervalStartDate=04-02-2019",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "ticketing",
                    "v1",
                    "api",
                    "requested_items"
                  ],
                  "query": [
                    {
                      "key": "intervalStartDate",
                      "value": "04-02-2019"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Tue, 09 Apr 2019 20:11:00 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 20,\n        \"totalCount\": 5,\n        \"totalPages\": 1,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"requestedItemNumber\": \"RITMXXXXXXX\",\n            \"dateOpened\": \"2019-04-02 14:38:00.000+0000\",\n            \"dateClosed\": \"2019-04-02 14:39:00.000+0000\",\n            \"shortDescription\": \"Request or Cancel a Visitor Reservation\",\n            \"description\": \"\",\n            \"approval\": \"Requested\",\n            \"state\": \"Closed\",\n            \"stage\": \"Completed\",\n            \"comments\": []\n        },\n        {\n            \"requestedItemNumber\": \"RITMYYYYYYY\",\n            \"dateOpened\": \"2019-04-02 14:36:00.000+0000\",\n            \"dateClosed\": \"2019-04-02 14:37:00.000+0000\",\n            \"shortDescription\": \"Request or Cancel a Visitor Reservation\",\n            \"description\": \"\",\n            \"approval\": \"Requested\",\n            \"state\": \"Closed\",\n            \"stage\": \"Completed\",\n            \"comments\": []\n        },\n        {\n            \"requestedItemNumber\": \"RITMZZZZZZZ\",\n            \"dateOpened\": \"2019-04-02 14:34:00.000+0000\",\n            \"dateClosed\": \"2019-04-02 14:34:00.000+0000\",\n            \"shortDescription\": \"Request or Cancel a Visitor Reservation\",\n            \"description\": \"\",\n            \"approval\": \"Requested\",\n            \"state\": \"Closed\",\n            \"stage\": \"Completed\",\n            \"comments\": []\n        },\n    }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Get List of Temporary Reservations",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "453e93a5-9cc5-4eb5-b2c4-34bafed81d43",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": "{{url}}/sdp/ticketing/v1/api/temporary_visitor_reservations",
            "description": "Lists temporary Reservations\n\nSupported filters: \n* reservationNumber (ASCII printable, max 100 symbols, contains character search, case insensitive)\n* intervalStartDate (MM-DD-YYYY format)\n* intervalEndDate (MM-DD-YYYY format)\n* location (ASCII printable, max 40 symbols, data center code, exact match search, case insensitive)\n* firstName (ASCII printable, max 40 symbols, contains character search, case insensitive)\n* lastName (ASCII printable, max 40 symbols, contains character search, case insensitive)\n* company (ASCII printable, max 40 symbols, contains character search, case insensitive)\n\n\nBy default all temporary reservations are returned\n\nExample filters:   \n* pageNumber=1\n* pageSize=20\n* intervalStartDate=05-01-2018\n* intervalEndDate=05-30-2018\n* sort=location%3ADESC\n* location=MIA1\n* firstName=John\n* lastName=Smith\n* company=demo\n\n?pageNumber=1&pageSize=20&intervalStartDate=05-01-2018&intervalEndDate=05-30-2018&sort=location%3ADESC&location=mia1&firstName=John&lastName=Smith&company=demo"
          },
          "response": [
            {
              "id": "c0435832-a0e4-4ab5-8680-f518929a53a6",
              "name": "Get List of Temporary Reservations",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ticketing/v1/api/temporary_visitor_reservations"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Tue, 09 Apr 2019 20:31:53 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 20,\n        \"totalCount\": 42,\n        \"totalPages\": 3,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"reservationNumber\": \"RES0049242\",\n            \"location\": \"SUW1\",\n            \"visitorInformation\": {\n                \"company\": \"\",\n                \"email\": \"\",\n                \"firstName\": \"Demo\",\n                \"lastName\": \"Disregard\",\n                \"middleName\": \"\",\n                \"homePhone\": \"\",\n                \"mobilePhone\": \"\",\n                \"workPhone\": \"\"\n            },\n            \"startDate\": \"10-03-2016\",\n            \"endDate\": \"10-05-2016\",\n            \"reasonForVisit\": \"demo\",\n            \"requestedBy\": \"test user\",\n            \"requestedItem\": \"RITM0137966\",\n            \"cancelledDate\": null,\n            \"monday\": false,\n            \"tuesday\": true,\n            \"wednesday\": true,\n            \"thursday\": false,\n            \"friday\": false,\n            \"saturday\": false,\n            \"sunday\": false,\n            \"timeRangeStart\": \"17:00\",\n            \"timeRangeEnd\": \"23:59\"\n        },\n        \n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Create New Incident",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7af7124a-b5b8-4443-ad41-62e52ce9574c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"onBehalfOf\":\"portal.demo.api\",\r\n\"impact\":\"Minor/Localized\",\r\n\"urgency\":\"Low\",\r\n\"shortDescription\":\"short description for incident created through API\"\r\n}"
            },
            "url": "{{url}}/sdp/ticketing/v1/api/incidents",
            "description": "Create a new incident or request.  \n\nSupported parameters:\n* **onBehalfOf** (username of the user who would be set as caller, related to the same Company)\n* **impact** \n\t* Minor/Localized\n\t* Moderate/Limited\n\t* Significant/Large\n\t* Extensive/Wide Spread\n* **urgency**\n\t* Low\n\t* Medium\n\t* High\n\t* Critical\n* **shortDescription** (required, max 160 symbols)\n* **longDescription** (max 4000 symbols)\n* **previousIncident** (true / false)\n* **previousIncidentNumber** (required in case previousIncident set to true)"
          },
          "response": [
            {
              "id": "62b61a15-aff4-4900-8e0e-ddd7d079ae4f",
              "name": "Create New Incident",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"onBehalfOf\":\"portal.demo.api\",\r\n\"impact\":\"Minor/Localized\",\r\n\"urgency\":\"Low\",\r\n\"shortDescription\":\"short description for incident created through API\"\r\n}"
                },
                "url": "{{url}}/sdp/ticketing/v1/api/incidents"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Thu, 25 Apr 2019 18:21:04 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"caller\": \"DemoAPI\",\n    \"dateOpened\": \"2019-04-25 18:20:00.000+0000\",\n    \"environment\": \"\",\n    \"location\": \"\",\n    \"shortDescription\": \"short description for incident created through API\",\n    \"description\": \"\",\n    \"priority\": \"Low\",\n    \"state\": \"New\",\n    \"impact\": \"Minor/Localized\",\n    \"urgency\": \"Low\",\n    \"incidentNumber\": \"INC0547772\"\n}"
            }
          ]
        },
        {
          "name": "Request Temporary Access",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "d34fd1ce-536a-4817-b436-54541d90bfaa",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"reasonForVisit\":\"Visit reason explanation\",\r\n\"firstName\":\"John\",\r\n\"lastName\":\"Smith\",\r\n\"middleName\":\"\",\r\n\"company\":\"demo\",\r\n\"workPhone\":\"8888888\",\r\n\"mobilePhone\":\"8888888\",\r\n\"homePhone\":\"8888888\",\r\n\"email\":\"example@example.com\",\r\n\"location\":\"CHI1\",\r\n\"startDate\": \"05-28-2018\",\r\n\"endDate\": \"05-29-2018\",\r\n\"timeRangeStart\": \"00:00\",\r\n\"timeRangeEnd\": \"23:59\"\r\n}"
            },
            "url": "{{url}}/sdp/ticketing/v1/api/temporary_visitor_reservations/request",
            "description": "Request temporary access to QTS Data Centers for someone who is not an SDP user (not set up in Roster).  \nReturns temporary reservation number that can be verified by physical secuirity team.  \nParameter value must contain information about the person and details of the requested access.\n\nExample:  \n\n/sdp/ticketing/v1/api/temporary_visitor_reservations?intervalStartDate=05-30-2018&intervalEndDate=05-30-2018&sort=location.DESC&location=mia1&firstName=John&lastName=Smith&company=demo"
          },
          "response": [
            {
              "id": "aecd5c43-b24f-41e4-aa3c-802c5386925c",
              "name": "Request Temporary Access",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"reasonForVisit\":\"Visit reason explanation\",\r\n\"firstName\":\"John\",\r\n\"lastName\":\"Smith\",\r\n\"middleName\":\"\",\r\n\"company\":\"demo\",\r\n\"workPhone\":\"8888888\",\r\n\"mobilePhone\":\"8888888\",\r\n\"homePhone\":\"8888888\",\r\n\"email\":\"example@example.com\",\r\n\"location\":\"DFW1\",\r\n\"startDate\": \"05-28-2018\",\r\n\"endDate\": \"05-29-2018\",\r\n\"timeRangeStart\": \"00:00\",\r\n\"timeRangeEnd\": \"23:59\"\r\n}"
                },
                "url": "{{url}}/sdp/ticketing/v1/api/temporary_visitor_reservations/request"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Tue, 23 Apr 2019 17:12:26 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"message\": \"New reservation was successfully created. Reservation Number: RES0121117\",\n    \"code\": \"CREATED\"\n}"
            }
          ]
        },
        {
          "name": "Request Cancellation of Temporary Access",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0d3f80aa-f4e9-444b-8037-08f6f224c24d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/sdp/ticketing/v1/api/temporary_visitor_reservations/RES0001671/cancel",
            "description": "Creates request to cancel temporary reservation. Reservation number (RES#######) must be specified in URL parameter."
          },
          "response": []
        },
        {
          "name": "Request Badge Access",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e309c60d-b5c8-4882-9c1a-17b4cbbf92a6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": {
                "accessToken": "access_token",
                "addTokenTo": "header"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"locationName\": \"AM1\",\r\n\"reuseBadgeSiteAttributeId\": \"1234567\",\r\n\"description\": \"please request new badge for this user\"\r\n}"
            },
            "url": "{{url}}/sdp/api/roster/v1/users/<target username>/request_badge_access",
            "description": "Requests new badge access or reuse the same badge number for an additional location.  The badge user must have access to the data center.  \n* Target Username \u2013 the username for whom the badge is being requested must be specified in the URL. \n* Description field should be filled with comments to specify date, time and additional details for the badge assignment. \n* To reuse badge from other site \u2013 the site attribute ID must be specified as \u201creuseBadgeSiteAttributeId\u201d."
          },
          "response": []
        },
        {
          "name": "Update Incident",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ecad329e-4ca8-43b6-baa6-9a830417bd64",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a0f7f337-91b0-40f9-bb92-676f3c06ac02",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"caller\": \"demouser\",\r\n    \"dateOpened\": \"2019-02-20 13:44:00.000+0000\",\r\n    \"environment\": \"\",\r\n    \"location\": \"\",\r\n    \"shortDescription\": \"short description for incident created through API_updated\",\r\n    \"description\": \"\",\r\n    \"priority\": \"Critical\",\r\n    \"state\": \"New\",\r\n    \"impact\": \"Moderate/Limited\",\r\n    \"urgency\": \"Critical\",\r\n    \"incidentNumber\": \"INC0482524\"\r\n}"
            },
            "url": "{{url}}/sdp/ticketing/v1/api/incidents/INC0547767",
            "description": "Update an existing incident. Incident number (INC#######) must be specified as request URL parameter.  Only list the parameters that you want to update in the body.\n\nSupported parameters:\n* **onBehalfOf** (username of the user who would be set as caller, must be related to the same Company)\n* **impact**\n\t* Minor/Localized\n\t* Moderate/Limited\n\t* Significant/Large\n\t* Extensive/Wide Spread\n* **urgency**\n\t* Low\n\t* Medium\n\t* High\n\t* Critical\n* **shortDescription** (required, maximum 160 characters)\n* **longDescription** (maximum 4000 characters)\n* **previousIncident** (true / false)\n* **previousIncidentNumber** (required if previousIncident set to true)"
          },
          "response": [
            {
              "id": "2266d166-ce38-4057-9e8f-a9a3ae4e7a49",
              "name": "Update Incident",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n   \n    \"impact\": \"Moderate/Limited\"\n   \n}"
                },
                "url": "{{url}}/sdp/ticketing/v1/api/incidents/INC0547767"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Tue, 23 Apr 2019 18:43:35 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"caller\": \"Portal DemoAPI\",\n    \"dateOpened\": \"2019-04-23 16:49:00.000+0000\",\n    \"environment\": \"\",\n    \"location\": \"\",\n    \"shortDescription\": \"short description for incident created through API\",\n    \"description\": \"\",\n    \"priority\": \"Low\",\n    \"state\": \"Active\",\n    \"impact\": \"Moderate/Limited\",\n    \"urgency\": \"Low\",\n    \"comments\": [],\n    \"incidentNumber\": \"INC0547767\"\n}"
            }
          ]
        }
      ],
      "_postman_id": "6b857dbb-f2bd-4293-8bb7-ccf05ce95c4d",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "401d3846-667f-4fce-ac5b-730faef9fe26",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "b504ec6b-6240-4e17-a93d-ac3e566521cd",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Power",
      "item": [
        {
          "name": "Get Raw Power Data (pole level)",
          "_postman_id": "9aa09034-8d06-4189-987a-95e69f28de31",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/power/v1/raw_data/poles?site=SUW1",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "power",
                "v1",
                "raw_data",
                "poles"
              ],
              "query": [
                {
                  "key": "site",
                  "value": "SUW1"
                }
              ]
            },
            "description": "Retrieves actual kW and amp readings on pole level for a specified location.  \r\n\r\nReport periods:\r\n* Daily: raw readings for every 15 minutes on pole level\r\n* Weekly: calculated average for every 1 hour on pole level\r\n* Monthly: calculated average for every 1 day on pole level  \r\n\r\nSupported filters:\r\n* **site**\r\n\t* Required parameter\r\n\t* Can be specified only once\r\n\t* Specified as query parameter: ?site=%siteName%\r\n\t* If no filters from the list ( spaceType, spaceName, circuit, pole) are specified, then the raw data for the whole site will be extracted\r\n\t* Raw data for deployed poles that belong to the specified site and Customer Company checked for an exact match\r\n\r\n* **date**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Report will contains data for the specified date only\r\n\t* If not specified - report contains data for current date only\r\n\t* Date format: YYYY-MM-DD format\r\n\r\n* **period**\r\n\t* Optional parameter\r\n\t* Can be specified once\r\n\t* Supported values\r\n\t\t* daily - default value\r\n\t\t\t* For poles: 15 minutes raw data\r\n\t\t\t* For circuits/spaces: 15 minutes raw data for each pole that belong to the selected circuit or space presented in the report\r\n\t\t* weekly\r\n\t\t\t* For poles: 1 hour averages \r\n\t\t\t* For circuits/spaces:  1 hour averages for each pole that belongs to the selected circuit or space presented in the report\r\n\t\t* monthly\r\n\t\t\t* For poles: 1 day averages. \r\n\t\t\t* For circuits/spaces:  1 day averages for each pole that belongs to the selected circuit or space presented in the report\r\n\r\n* **pole**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Number is expected\r\n\t* Data for specified pole is presented in report\r\n\t* If pole is specified, the circuit must be specified too\r\n\t* Checked for an exact match\r\n\r\n* **circuit**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Must be specified if pole is specified\r\n\t* String format\r\n\t* If circuit is specified, report will contain readings for specified circuit only\r\n\t* If circuit and pole are specified, report will contain readings for specified pole only\r\n\t* If not specified, report will contain readings for all circuits\r\n\t* Checked for an exact match\r\n\r\n* **spaceType**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Supported values:\r\n\t\t* suite\r\n\t\t* cage\r\n\t\t* enclosure\r\n\t\r\n* **spaceName**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Text sting is expected\r\n\t* Report will contain circuit/poles data that is related to specified space\r\n\t* Checked for an exact match\r\n\r\n* **readingType**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Supported parameters:\r\n\t\t* kW - default\r\n\t\t* amps\r\n\t* Specifies the type or readings should be provided in the report\r\n\r\n* **format**\r\n\t* Optional parameter\r\n\t* Specified as query parameter: ?format=%formattype%\r\n\t* Supported values:\r\n\t\t* json - default format\r\n\t\t* csv"
          },
          "response": []
        },
        {
          "name": "Get Raw Power Data (circuit level)",
          "_postman_id": "040e9ff7-d8c5-4dcc-9171-3c0aac2810f0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/power/v1/raw_data/circuits?site=DFW1",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "power",
                "v1",
                "raw_data",
                "circuits"
              ],
              "query": [
                {
                  "key": "site",
                  "value": "DFW1"
                }
              ]
            },
            "description": "Retrieves actual kW and amp readings on circuit level for specified location.\r\n\r\nReport periods:\r\n* Weekly: calculated average for every 1 hour on circuit level\r\n* Monthly: calculated average for every 1 day on circuit level  \r\n\r\nSupported filters:\r\n* **site**\r\n\t* Required parameter\r\n\t* Can be specified only once\r\n\t* Specified as query parameter: ?site=%siteName%\r\n\t* If no filters are specified, then the circuit metrics for the whole site will be extracted\r\n\t* Checked for an exact match\r\n\r\n* **date**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Report will contains data for the specified date only\r\n\t* If not specified - report contains data for current date only\r\n\t* Date format: YYYY-MM-DD format\r\n\r\n* **period**\r\n\t* Optional parameter\r\n\t* Can be specified once\r\n\t* Supported values\r\n\t\t* weekly - default value: 1 hour averages for each selected circuit or space presented in the report\r\n\t\t* monthly: 1 day averages for each selected circuit or space presented in the report\r\n\r\n* **circuit**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* String format\r\n\t* If circuit is specified, report will contain readings for specified circuit only\r\n\t* If not specified, report will contain readings for all circuits\r\n\t* Checked for an exact match\r\n\r\n* **spaceType**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Supported values:\r\n\t\t* suite\r\n\t\t* cage\r\n\t\t* enclosure\r\n\t\r\n* **spaceName**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Text sting is expected\r\n\t* Report will contain circuit/poles data that is related to specified space\r\n\t* Checked for an exact match\r\n\r\n* **readingType**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Supported parameters:\r\n\t\t* kW - default\r\n\t\t* amps\r\n\t* Specifies the type or readings should be provided in the report\r\n\r\n* **format**\r\n\t* Optional parameter\r\n\t* Specified as query parameter: ?format=%formattype%\r\n\t* Supported values:\r\n\t\t* json - default format\r\n\t\t* csv"
          },
          "response": [
            {
              "id": "fa429a3d-be4f-4faf-9721-4d83730f601b",
              "name": "Get Raw Power Data (circuit level)",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/power/v1/raw_data/circuits?site=DFW1&date=2019-04-09&spaceType=enclosure&spaceName=ENC-DFW1-DC1-2-DH10-CL57/18",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "power",
                    "v1",
                    "raw_data",
                    "circuits"
                  ],
                  "query": [
                    {
                      "key": "site",
                      "value": "DFW1"
                    },
                    {
                      "key": "date",
                      "value": "2019-04-09"
                    },
                    {
                      "key": "spaceType",
                      "value": "enclosure"
                    },
                    {
                      "key": "spaceName",
                      "value": "ENC-DFW1-DC1-2-DH10-CL57/18"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Wed, 10 Apr 2019 14:34:40 GMT"
                },
                {
                  "key": "Content-Length",
                  "value": "9284"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"sitename\": \"DFW1\",\n    \"data\": [\n        {\n            \"date\": \"2019-04-08\",\n            \"datetime\": \"2019-04-08T00:00:00-05:00\",\n            \"circuit\": \"CKT-DFW1-10M1-001-A-13,15,17-CL-57\",\n            \"circuitType\": \"Primary\",\n            \"relatedCircuit\": \"N/A\",\n            \"enclosure\": \"ENC-DFW1-DC1-2-DH10-CL57/18\",\n            \"parentSpace\": \"STE-DFW1-DC1-2-DH10-CW48\",\n            \"avgkW\": 0.2,\n            \"maxkW\": 0.2,\n            \"panel\": \"PNL-DFW1-10M1-001-A\",\n            \"pdu\": \"PDU-DFW1-10M1-001\",\n            \"ups\": \"UPS-DFW1-UPS-M/N-UPS-M1N1\"\n        },\n        {\n            \"date\": \"2019-04-08\",\n            \"datetime\": \"2019-04-08T00:00:00-05:00\",\n            \"circuit\": \"CKT-DFW1-10N1-001-A-13,15,17-CL-57\",\n            \"circuitType\": \"Primary\",\n            \"relatedCircuit\": \"N/A\",\n            \"enclosure\": \"ENC-DFW1-DC1-2-DH10-CL57/18\",\n            \"parentSpace\": \"STE-DFW1-DC1-2-DH10-CW48\",\n            \"avgkW\": 0.161,\n            \"maxkW\": 0.2,\n            \"panel\": \"PNL-DFW1-10N1-001-A\",\n            \"pdu\": \"PDU-DFW1-10N1-001\",\n            \"ups\": \"UPS-DFW1-UPS-M/N-UPS-M1N1\"\n        },\n  \n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Get Power Demand Report",
          "_postman_id": "026f94a6-134a-4412-b3d3-e4f2c7c5c3a0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/power/v1/power_demand?site=DFW1",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "power",
                "v1",
                "power_demand"
              ],
              "query": [
                {
                  "key": "site",
                  "value": "DFW1"
                }
              ]
            },
            "description": "Returns aggregated power details in xlsx format containing three tabs (in Postman use Send and Download):\n*\tSummary\n*\tReadings\n*\tDefinitions\n\nReport contents:\n* Avg kw power consumption per period\n* Max kW consumption per period\n* % Capacity Max\n* % Capacity Average at the following levels: \n\t* site\n\t* parent spaces\n\t* enclosure\n\t* circuit\n\t* pole\n\nSupported filters:\n* **site**\n\t* Required parameter\n\t* Can be specified only once\n\t* Specified as query parameter: ?site=%siteName%\n\n* **date**\n\t* Optional parameter\n\t* Can be specified only once\n\t* Report will contains data for the specified date only\n\t* If not specified - report contains data for current date only\n\t* Date format: YYYY-MM-DD format\n\n* **period**\n\t* Optional parameter\n\t* Can be specified once\n\t* Supported values\n\t\t* daily - default value\n\t\t\t* For poles: 15 minutes raw data\n\t\t\t* For circuits/spaces: 15 minutes raw data for each pole that belongs to the selected circuit or space presented in the report\n\t\t* weekly\n\t\t\t* For poles: 1 hour averages \n\t\t\t* For circuits/spaces:  1 hour averages for each  pole that belongs to the selected circuit or space presented in the report\n\t\t* monthly\n\t\t\t* For poles: 1 day averages. \n\t\t\t* For circuits/spaces:  1 day averages for each pole that belongs to the selected circuit or space presented in the report"
          },
          "response": []
        },
        {
          "name": "Get Raw Device Data",
          "_postman_id": "fc8d96cf-4e66-4bde-b05e-f3b4f68638a0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/power/v1/raw_device_data?site=DFW1&date=2018-10-01&period=weekly",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "power",
                "v1",
                "raw_device_data"
              ],
              "query": [
                {
                  "key": "site",
                  "value": "DFW1"
                },
                {
                  "key": "date",
                  "value": "2018-10-01"
                },
                {
                  "key": "period",
                  "value": "weekly"
                }
              ]
            },
            "description": "Reports actual kW and amp readings for the specified power device dedicated to the API User environment or all power devices in specific site.\r\n\r\nReadings of power metrics are every 15 minutes for the below supported report periods:\r\n\r\n* Daily\r\n* Weekly\r\n* Monthly\r\n\r\nSupported filters:\r\n\r\n* **site**\r\n\t* Required parameter\r\n\t* Can be specified only once\r\n\t* Specified as query parameter: ?site=%siteName%\r\n\t* If no filters from the list (deviceName, deviceType) are specified, then the raw data for the whole site will be extracted\r\n\t* All data from power devices that belong to the specified site will be reported.\r\n\t* No circuit/pole data will be reported. \r\n\t* Checked for an exact match\r\n\r\n* **date**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Report will contains data for the specified date only\r\n\t* If not specified - report contains data for current date only\r\n\t* Date format: YYYY-MM-DD format\r\n\r\n* **period**\r\n\t* Optional parameter\r\n\t* Can be specified once\r\n\t* Supported values\r\n\t\t* daily - default value\r\n\t\t* weekly\r\n\t\t* monthly\r\n\r\n* **deviceType**\r\n\t* Optional parameter\r\n\t* Can be specified once\r\n\t* Supported values:\r\n\t\t*\tUPS\r\n\t\t*\tPDU\r\n\t\t*\tPNL\r\n\r\n* **deviceName**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* Text sting is expected\r\n\t* Report contains device raw data\r\n\t\r\n* **readingType**\r\n\t* Optional parameter\r\n\t* Can be specified only once\r\n\t* supported parameters: \r\n\t\t* kW - default\r\n\t\t* amps\r\n\r\n* **format**\r\n\t* Optional parameter\r\n\t* Specified as query parameter: ?format=%formattype%\r\n\t* Supported values:\r\n\t\t* json - default format\r\n\t\t* csv\r\n\r\n\r\n\r\n**Example:** /sdp/api/power/v1/raw_device_data?site=DFW1&format=csv"
          },
          "response": [
            {
              "id": "b330d5b8-a1f4-4652-b983-7adfbc559795",
              "name": "Get Raw Device Data",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/power/v1/raw_device_data?site=DFW1&date=2019-04-01&deviceType=PDU&deviceName=PDU-DFW1-10M1-001",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "power",
                    "v1",
                    "raw_device_data"
                  ],
                  "query": [
                    {
                      "key": "site",
                      "value": "DFW1"
                    },
                    {
                      "key": "date",
                      "value": "2019-04-01"
                    },
                    {
                      "key": "deviceType",
                      "value": "PDU"
                    },
                    {
                      "key": "deviceName",
                      "value": "PDU-DFW1-10M1-001"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Wed, 10 Apr 2019 14:39:13 GMT"
                },
                {
                  "key": "Content-Length",
                  "value": "35471"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"sitename\": \"DFW1\",\n    \"data\": [\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-10M1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-10M2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-10N1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-10N2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5D1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5D2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5E1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5E2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5F1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5F2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5G1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-5G2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6H1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6H2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6J1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6J2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6K1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6K2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6L1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-6L2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8P1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8P1-002\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8P2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8P2-002\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8Q1-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8Q1-002\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8Q2-001\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-8Q2-002\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PDU\",\n            \"deviceName\": \"PDU-DFW1-COD-N-001-DELETE ME\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PNL\",\n            \"deviceName\": \"PNL-DFW1-10M1-001-A\",\n            \"avgkw\": 0\n        },\n        {\n            \"timestamp\": 1554908400000,\n            \"date\": \"2019-04-10\",\n            \"deviceType\": \"PNL\",\n            \"deviceName\": \"PNL-DFW1-10M1-001-B\",\n            \"avgkw\": 0\n        }\n\n        \n    ]\n}"
            }
          ]
        },
        {
          "name": "Get Power Report",
          "_postman_id": "b0be8ac4-e53f-445e-ac67-a03642d78ce4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/power/v1/power_report?site=DFW1&date=2018-09-01&period=daily",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "power",
                "v1",
                "power_report"
              ],
              "query": [
                {
                  "key": "site",
                  "value": "DFW1"
                },
                {
                  "key": "date",
                  "value": "2018-09-01"
                },
                {
                  "key": "period",
                  "value": "daily"
                }
              ]
            },
            "description": "Returns aggregated power details for all power devices within your site in xlsx format (in Postman use Send and Download): \n* Avg kw power consumption per period\n* Max kW consumption per period\n* % Capacity Max\n* Current (amps) for the following: \n\t* UPS\n\t* PDU\n\t* PNL\n\t* Individual PDUs\n\t* Panels\n\nSupported filters:\n\n* **site**\n\t* Required parameter\n\t* Can be specified only once\n\t* Specified as query parameter: ?site=%siteName%\n\n* **date**\n\t* Optional parameter\n\t* Can be specified only once\n\t* Report will contains data for the specified date only\n\t* If not specified - report contains data for current date only\n\t* Date format: YYYY-MM-DD format\n\n* **period**\n\t* Optional parameter\n\t* Can be specified once\n\t* Supported values\n\t\t* daily - default value\n\t\t* weekly\n\t\t* monthly\n\t\t* For daily and weekly, days from Monday to Sunday will be used in calculation\n\t\t* For monthly, days from 1 to last day of month will be used in calculation\n\t\t* For example: Today's date is October 30, period=monthly, report will contains records from October 1 - 31"
          },
          "response": []
        },
        {
          "name": "Get Power Overage Daily Report (circuit pair)",
          "_postman_id": "88a05950-671d-4b94-ad48-fd0de5280d84",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{url}}/sdp/api/power/v1/power_overage_daily?site=DFW1&date=2018-09-01&period=daily",
              "host": [
                "{{url}}"
              ],
              "path": [
                "sdp",
                "api",
                "power",
                "v1",
                "power_overage_daily"
              ],
              "query": [
                {
                  "key": "site",
                  "value": "DFW1"
                },
                {
                  "key": "date",
                  "value": "2018-09-01"
                },
                {
                  "key": "period",
                  "value": "daily"
                }
              ]
            },
            "description": "Provides power overage information on circuit pair level observed during specified period. Circuit pair is included in the report in case it breaks the rule: sum of peak load exceeds Power Analytics#AmpsBasedPowerCapacityThreshold (low value of 80%) of the capacity of the primary circuit.\n\nSupported parameters:\n* **site**\n\t* required query parameter, specified as ?site=%sitename%\n\t* report contains records for specified site only\n\n* **date**\n\t* optional parameter\n\t* if not defined, defaults to current date\n\t* YYYY-MM-DD format is expected\n\t* can be specified once\n\n* **period**\n\t* optional parameter\n\t* supported values: daily, weekly, monthly\n\t* if not defined, daily is default\n\t* for weekly period - days from Mon to Sun would be used in calculation\n\t* for monthly period - days from 1 to 30(31) day of the specified month would be used in calculation (ex: date=30 Nov, period=monthly, report contains records for period November 1-31)\n\t* can be specified once"
          },
          "response": [
            {
              "id": "f23499ce-b449-4351-9824-cb57b6574a08",
              "name": "Get Power Overage Daily Report (circuit pair)",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/power/v1/power_overage_daily?site=DFW1&date=2018-09-01&period=daily",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "power",
                    "v1",
                    "power_overage_daily"
                  ],
                  "query": [
                    {
                      "key": "site",
                      "value": "DFW1"
                    },
                    {
                      "key": "date",
                      "value": "2018-09-01"
                    },
                    {
                      "key": "period",
                      "value": "daily"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Date",
                  "value": "Wed, 10 Apr 2019 14:17:26 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Server",
                  "value": "Jetty(9.2.14.v20151106)"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "[\n    {\n        \"cpy\": \"CPY000000005589\",\n        \"site\": \"DFW1\",\n        \"enclosureName\": \"ENC-DFW1-DC1-2-DH5-DY125/1\",\n        \"primaryCircuitName\": \"CKT-DFW1-5D2-001-A-31,33,35-DY-125\",\n        \"redundantCircuitName\": \"CKT-DFW1-5E1-001-A-31,33,35-DY-125\",\n        \"primaryAmpsRating\": 30,\n        \"redundantAmpsRating\": 30,\n        \"redundantMaxAmps\": 12.1357,\n        \"redundantAvgAmps\": 7.482018,\n        \"primaryMaxAmps\": 12.5171,\n        \"primaryAvgAmps\": 8.740417,\n        \"peakCurrent\": 24.652802,\n        \"peakLoadPercent\": 82.17601,\n        \"samplesExceedingThresholdPercent\": 29.166666,\n        \"peakLoadDate\": \"2018-09-01T17:15:00.000 +0000\"\n    },\n    {\n        \"cpy\": \"CPY000000005589\",\n        \"site\": \"SJC1\",\n        \"enclosureName\": \"ENC-SJC1-DC1-1-DH100-AX-80\",\n        \"primaryCircuitName\": \"CKT-SJC1-0AB-013-B-82,84-AX-80\",\n        \"redundantCircuitName\": \"CKT-SJC1-0BC-024-B-61,63-AX-80\",\n        \"primaryAmpsRating\": 30,\n        \"redundantAmpsRating\": 30,\n        \"redundantMaxAmps\": 13.533,\n        \"redundantAvgAmps\": 11.444411,\n        \"primaryMaxAmps\": 13.4807,\n        \"primaryAvgAmps\": 11.40534,\n        \"peakCurrent\": 27.013699,\n        \"peakLoadPercent\": 90.04566,\n        \"samplesExceedingThresholdPercent\": 50,\n        \"peakLoadDate\": \"2018-09-01T20:15:00.000 +0000\"\n    },\n    {\n        \"cpy\": \"CPY000000005589\",\n        \"site\": \"SJC1\",\n        \"enclosureName\": \"ENC-SJC1-DC1-1-DH100-AZ80\",\n        \"primaryCircuitName\": \"CKT-SJC1-0BC-024-A-32,34-AZ-80\",\n        \"redundantCircuitName\": \"CKT-SJC1-0CA-012-B-82,84-AZ-80\",\n        \"primaryAmpsRating\": 30,\n        \"redundantAmpsRating\": 30,\n        \"redundantMaxAmps\": 14.7213,\n        \"redundantAvgAmps\": 12.039235,\n        \"primaryMaxAmps\": 14.2217,\n        \"primaryAvgAmps\": 12.610514,\n        \"peakCurrent\": 28.943,\n        \"peakLoadPercent\": 96.47667,\n        \"samplesExceedingThresholdPercent\": 79.166664,\n        \"peakLoadDate\": \"2018-09-02T01:30:00.000 +0000\"\n    },\n    {\n        \"cpy\": \"CPY000000005589\",\n        \"site\": \"SJC1\",\n        \"enclosureName\": \"ENC-SJC1-DC1-1-DH100-BB-80\",\n        \"primaryCircuitName\": \"CKT-SJC1-0CA-012-B-78,80-BB-80\",\n        \"redundantCircuitName\": \"CKT-SJC1-0AB-013-B-81,83-BB-80\",\n        \"primaryAmpsRating\": 30,\n        \"redundantAmpsRating\": 30,\n        \"redundantMaxAmps\": 12.9033,\n        \"redundantAvgAmps\": 11.23378,\n        \"primaryMaxAmps\": 12.6588,\n        \"primaryAvgAmps\": 11.14037,\n        \"peakCurrent\": 25.5621,\n        \"peakLoadPercent\": 85.207,\n        \"samplesExceedingThresholdPercent\": 41.666668,\n        \"peakLoadDate\": \"2018-09-02T01:30:00.000 +0000\"\n    },\n    {\n        \"cpy\": \"CPY000000005589\",\n        \"site\": \"SJC1\",\n        \"enclosureName\": \"ENC-SJC1-DC1-1-DH100-AY80\",\n        \"primaryCircuitName\": \"CKT-SJC1-0CA-012-C-111,113-AY-80\",\n        \"redundantCircuitName\": \"CKT-SJC1-0AB-013-B-78,80-AY-80\",\n        \"primaryAmpsRating\": 30,\n        \"redundantAmpsRating\": 30,\n        \"redundantMaxAmps\": 14.3872,\n        \"redundantAvgAmps\": 12.693483,\n        \"primaryMaxAmps\": 13.7375,\n        \"primaryAvgAmps\": 12.319784,\n        \"peakCurrent\": 28.1247,\n        \"peakLoadPercent\": 93.749,\n        \"samplesExceedingThresholdPercent\": 79.166664,\n        \"peakLoadDate\": \"2018-09-02T01:30:00.000 +0000\"\n    }\n]"
            }
          ]
        }
      ],
      "_postman_id": "890f8f2b-647b-4119-95bf-5ee123d7140c"
    },
    {
      "name": "Asset Manager",
      "item": [
        {
          "name": "Get Equipment Data Dictionary",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "80d4b6fd-2391-493b-8e23-17aeda83f14a",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9fa748cb-dc86-4425-b582-cbe2e2b1c0e0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              }
            ],
            "url": "{{url}}/assetmanager/api/assetmanager/v1/dictionaries",
            "description": "Get list of field names and values to be used in API requests for Asset Manager items."
          },
          "response": [
            {
              "id": "f06a6070-66c9-42f6-b7d0-5779333cb738",
              "name": "Get Equipment Data Dictionary",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/assetmanager/api/assetmanager/v1/dictionaries"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Set-Cookie",
                  "value": "JSESSIONID=8CD3FDEF6EF6EEF0DEA32C0AE6EEBAF0; Path=/assetmanager; HttpOnly"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "Cache-Control",
                  "value": "no-cache, no-store, max-age=0, must-revalidate"
                },
                {
                  "key": "Pragma",
                  "value": "no-cache"
                },
                {
                  "key": "Expires",
                  "value": "0"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "key": "Content-Length",
                  "value": "3251"
                },
                {
                  "key": "Date",
                  "value": "Wed, 10 Apr 2019 18:13:12 GMT"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"applicationTypes\": [\n        {\n            \"key\": \"5\",\n            \"value\": \"Antivirus\"\n        },\n        {\n            \"key\": \"1\",\n            \"value\": \"Apache HTTP\"\n        },\n        {\n            \"key\": \"4\",\n            \"value\": \"Database\"\n        },\n        {\n            \"key\": \"12\",\n            \"value\": \"Domain Controller\"\n        },\n        {\n            \"key\": \"10\",\n            \"value\": \"FTP\"\n        },\n        {\n            \"key\": \"11\",\n            \"value\": \"Other\"\n        },\n        {\n            \"key\": \"2\",\n            \"value\": \"PHP\"\n        },\n        {\n            \"key\": \"9\",\n            \"value\": \"SMTP\"\n        },\n        {\n            \"key\": \"7\",\n            \"value\": \"Syslog-NG\"\n        },\n        {\n            \"key\": \"3\",\n            \"value\": \"Tomcat\"\n        },\n        {\n            \"key\": \"6\",\n            \"value\": \"Tripwire\"\n        },\n        {\n            \"key\": \"8\",\n            \"value\": \"vCenter\"\n        }\n    ],\n    \"driveTypes\": [\n        {\n            \"key\": \"2\",\n            \"value\": \"SATA 3Gbps 3.5in\"\n        },\n        {\n            \"key\": \"3\",\n            \"value\": \"Near-Line SAS 6Gbps 3.5in\"\n        },\n        {\n            \"key\": \"4\",\n            \"value\": \"Near-Line SAS 6Gbps\"\n        },\n        {\n            \"key\": \"5\",\n            \"value\": \"SAS 6Gbps\"\n        },\n        {\n            \"key\": \"6\",\n            \"value\": \"SD Card\"\n        },\n        {\n            \"key\": \"7\",\n            \"value\": \"SSD\"\n        }\n    ],\n    \"functions\": [\n        {\n            \"key\": \"8\",\n            \"value\": \"Active Directory\"\n        },\n        {\n            \"key\": \"5\",\n            \"value\": \"Database Server\"\n        },\n        {\n            \"key\": \"4\",\n            \"value\": \"DNS Server\"\n        },\n        {\n            \"key\": \"6\",\n            \"value\": \"Log Server\"\n        },\n        {\n            \"key\": \"2\",\n            \"value\": \"Mail Server\"\n        },\n        {\n            \"key\": \"3\",\n            \"value\": \"NTP Server\"\n        },\n        {\n            \"key\": \"7\",\n            \"value\": \"VM Server\"\n        },\n        {\n            \"key\": \"1\",\n            \"value\": \"Web Server\"\n        }\n    ],\n    \"operatingSystems\": [\n        \"FreeBSD\",\n        \"HyperV 2008\",\n        \"HyperV 2008 ENT\",\n        \"HyperV 2008R2\",\n        \"HyperV 2012\",\n        \"Junos\",\n        \"Linux\",\n        \"Linux KVM\",\n        \"Netscaler VPX\",\n        \"OpenBSD\",\n        \"OS X\",\n        \"Proprietary\",\n        \"Solaris\",\n        \"VMWare\",\n        \"Win2003\",\n        \"Win2k\",\n        \"Windows 2008\",\n        \"Windows 2008R2\",\n        \"Windows 2012\",\n        \"Windows 2012 R2\",\n        \"Windows 2016\",\n        \"Windows 7\",\n        \"Windows 8\",\n        \"Windows XP Pro\",\n        \"XenServer\"\n    ],\n    \"equipmentTypes\": [\n        {\n            \"name\": \"Appliance\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Black Box\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Component\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"KVM\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Monitor\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Network Gear\",\n            \"physical\": true,\n            \"isForQuickSearch\": true,\n            \"subtypes\": [\n                \"Switch\",\n                \"Load Balancer\",\n                \"SSL VPN\",\n                \"Router\",\n                \"Firewall\",\n                \"IDP\"\n            ]\n        },\n        {\n            \"name\": \"Notebook\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Other\",\n            \"physical\": true,\n            \"isForQuickSearch\": true,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Phone\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Power\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Power Strip\",\n            \"physical\": true,\n            \"isForQuickSearch\": null,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Printer\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Rack Infrastructure\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Reserved Space\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Security Device\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Serial Console\",\n            \"physical\": true,\n            \"isForQuickSearch\": true,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Server\",\n            \"physical\": true,\n            \"isForQuickSearch\": true,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Software\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Storage\",\n            \"physical\": true,\n            \"isForQuickSearch\": true,\n            \"subtypes\": [\n                \"SAN Switch\",\n                \"Storage Shelf\",\n                \"Recovery Point\",\n                \"SAN\"\n            ]\n        },\n        {\n            \"name\": \"VM\",\n            \"physical\": false,\n            \"isForQuickSearch\": true,\n            \"subtypes\": [\n                \"Network\"\n            ]\n        },\n        {\n            \"name\": \"VM-Network\",\n            \"physical\": false,\n            \"isForQuickSearch\": true,\n            \"subtypes\": []\n        },\n        {\n            \"name\": \"Workstation\",\n            \"physical\": true,\n            \"isForQuickSearch\": false,\n            \"subtypes\": []\n        }\n    ],\n    \"equipmentStatuses\": [\n        \"Available\",\n        \"Decommissioning\",\n        \"Inventory\",\n        \"Junk\",\n        \"On Loan\",\n        \"Other\",\n        \"Production\",\n        \"Provisioning\",\n        \"Returned to Customer\",\n        \"Returned to Vendor\",\n        \"RMA\",\n        \"Spare\",\n        \"Write Off - Disposed\"\n    ]\n}"
            }
          ]
        },
        {
          "name": "Equipment Search",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c4f0ac2c-79ab-4168-b9ff-db578f5ceca9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"environmentName\": \"demo_environment\",\r\n \"type\": \"Server\",\r\n \"status\": null,\r\n \"serial\": null,\r\n \"customerHostName\": null,\r\n \"manufacturer\": null,\r\n \"model\": null,\r\n \"location\": \"DFW1\",\r\n \"selectNestedLocations\": true\r\n}"
            },
            "url": "{{url}}/assetmanager/api/inventoryequipment/basicsearch",
            "description": "Returns list of equipment records. By default method returns all equipment records for your environments and locations.  \n\nLocation and environment must be specified in body."
          },
          "response": [
            {
              "id": "cc336caa-ab74-4758-9b25-b4a19da93051",
              "name": "Equipment Search",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n \"location\": \"DFW1\"\r\n\r\n}"
                },
                "url": "{{url}}/assetmanager/api/inventoryequipment/basicsearch"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "Cache-Control",
                  "value": "no-cache, no-store, max-age=0, must-revalidate"
                },
                {
                  "key": "Pragma",
                  "value": "no-cache"
                },
                {
                  "key": "Expires",
                  "value": "0"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "key": "Content-Length",
                  "value": "16987"
                },
                {
                  "key": "Date",
                  "value": "Tue, 23 Apr 2019 18:55:36 GMT"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"items\": [\n        {\n            \"id\": 1342309,\n            \"version\": 1,\n            \"backupSystem\": null,\n            \"cpu\": \"\",\n            \"customerAssetTag\": null,\n            \"depth\": \"full\",\n            \"drives\": [],\n            \"environmentName\": \"qts-sales-sam-comp\",\n            \"customerHostName\": \"steve_m_10\",\n            \"location\": \"DFW1\",\n            \"elevation\": null,\n            \"manufacturer\": \"Cisco\",\n            \"model\": \"ZX234\",\n            \"os\": null,\n            \"osVer\": null,\n            \"partNumber\": \"\",\n            \"manufacturerPart\": \"zx293fje\",\n            \"powerDraw\": null,\n            \"powerSupplies\": 2,\n            \"rackUnits\": 1,\n            \"ram\": null,\n            \"ramSizeUnit\": null,\n            \"serial\": null,\n            \"serviceLevel\": null,\n            \"status\": \"Provisioning\",\n            \"subType\": null,\n            \"type\": \"Appliance\",\n            \"width\": \"full\",\n            \"locationInfo\": \"DFW1\",\n            \"smartrackDevice\": false,\n            \"serviceOrderRenewalTerm\": null,\n            \"serviceOrderRenewalType\": null,\n            \"serviceOrderExpirationDate\": null,\n            \"serviceOrderNumber\": null,\n            \"functions\": [],\n            \"usedInWorkbookActiveImpl\": false,\n            \"inRack\": false\n        \n        \n        }\n    ],\n    \"total\": 23\n}"
            }
          ]
        },
        {
          "name": "Manparts Search",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "9313a424-fde5-4065-bace-6d1c9e3a8efb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"partNumber\":\"\",\n\"manufacturer\":\"\",\n\"equipmentType\":\"\",\n\"model\":\"\",\n\"isCustomer\":false\n}"
            },
            "url": "{{url}}/assetmanager/api/inventoryequipment/searchmanparts",
            "description": "Returns list of manufacturer parts to be used for new physical device creation.  For use on non-QTS managed environments only."
          },
          "response": [
            {
              "id": "f17537a0-e743-4767-8fbf-3fdb202b087b",
              "name": "Manparts Search",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\"partNumber\":\"\",\n\"manufacturer\":\"\",\n\"equipmentType\":\"\",\n\"model\":\"\",\n\"isCustomer\":false\n}"
                },
                "url": "{{url}}/assetmanager/api/inventoryequipment/searchmanparts"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "Cache-Control",
                  "value": "no-cache, no-store, max-age=0, must-revalidate"
                },
                {
                  "key": "Pragma",
                  "value": "no-cache"
                },
                {
                  "key": "Expires",
                  "value": "0"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "key": "Content-Length",
                  "value": "165896"
                },
                {
                  "key": "Date",
                  "value": "Tue, 23 Apr 2019 19:14:08 GMT"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"items\": [\n        {\n            \"id\": 1014,\n            \"partNumber\": \"3PAR 7200 controller\",\n            \"manufacturer\": \"3PAR\",\n            \"equipmentType\": \"Storage\",\n            \"model\": \"3PAR 7200 controller\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 2\n        },\n        {\n            \"id\": 1015,\n            \"partNumber\": \"7200 Service Process\",\n            \"manufacturer\": \"3PAR\",\n            \"equipmentType\": \"Storage\",\n            \"model\": \"7200 Service Process\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 2\n        },\n        {\n            \"id\": 1044,\n            \"partNumber\": \"12345\",\n            \"manufacturer\": \"3PAR\",\n            \"equipmentType\": \"Appliance\",\n            \"model\": \"FirstQTSEmp\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 2\n        },\n        {\n            \"id\": 510,\n            \"partNumber\": \"M6710 Driveshelf\",\n            \"manufacturer\": \"3PAR\",\n            \"equipmentType\": \"Server\",\n            \"model\": \"M6710 Driveshelf\",\n            \"rackUnits\": 2,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 1\n        },\n        {\n            \"id\": 511,\n            \"partNumber\": \"StorServ 7400\",\n            \"manufacturer\": \"3PAR\",\n            \"equipmentType\": \"Storage\",\n            \"model\": \"StorServ 7400\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 1\n        },\n        {\n            \"id\": 1041,\n            \"partNumber\": \"STORSERV 8440\",\n            \"manufacturer\": \"3PAR\",\n            \"equipmentType\": \"Storage\",\n            \"model\": \"STORSERV 8440\",\n            \"rackUnits\": 2,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 1\n        },\n        {\n            \"id\": 68,\n            \"partNumber\": \"5010\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"5010\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 69,\n            \"partNumber\": \"5024\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"5024\",\n            \"rackUnits\": 2,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 70,\n            \"partNumber\": \"Gate 7500\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"Gate 7500\",\n            \"rackUnits\": 14,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 71,\n            \"partNumber\": \"OC-5010\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"OC-5010\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 72,\n            \"partNumber\": \"OC-6850 48\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"OC-6850 48\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 73,\n            \"partNumber\": \"OS-5024\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"OS-5024\",\n            \"rackUnits\": 2,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 74,\n            \"partNumber\": \"OS-R\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"OS-R\",\n            \"rackUnits\": 7,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 75,\n            \"partNumber\": \"OS-R5\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"OS-R5\",\n            \"rackUnits\": 7,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 76,\n            \"partNumber\": \"OS-R9\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"OS-R9\",\n            \"rackUnits\": 14,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 77,\n            \"partNumber\": \"OSR-PS5-375\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"OSR-PS5-375\",\n            \"rackUnits\": 7,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 78,\n            \"partNumber\": \"PowerRail 1000\",\n            \"manufacturer\": \"Alcatel\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"PowerRail 1000\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": null\n        },\n        {\n            \"id\": 878,\n            \"partNumber\": \"AP7721\",\n            \"manufacturer\": \"APC\",\n            \"equipmentType\": \"Power\",\n            \"model\": \"AP7721\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 1\n        },\n        \n        {\n            \"id\": 936,\n            \"partNumber\": \"NSMXPRESS II\",\n            \"manufacturer\": \"Juniper\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"NSMXPRESS II\",\n            \"rackUnits\": 2,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 1\n        },\n        {\n            \"id\": 602,\n            \"partNumber\": \"NS-SA-1005A\",\n            \"manufacturer\": \"Juniper\",\n            \"equipmentType\": \"Network Gear\",\n            \"model\": \"NS-SA-1005A\",\n            \"rackUnits\": 1,\n            \"deviceDepth\": \"full\",\n            \"deviceWidth\": \"full\",\n            \"powerSupplies\": 1\n      \n    ],\n    \"total\": 895\n}"
            }
          ]
        },
        {
          "name": "Create New Physical Equipment",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "e4a49a90-c357-4410-8c74-8bb582e4e6a6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"status\": \"Provisioning\",\r\n \"quantity\": 1,\r\n \"startingNumber\": 1,\r\n \"environmentName\": \"qts-demo\",\r\n \"powerSupplies\": 3,\r\n \"serial\": \"api_test\",\r\n \"customerAssetTag\": \"api_test_1\",\r\n \"customerHostName\": \"api_test_1\",\r\n \"comments\": \"w54\",\r\n \"manufacturerPartId\": {\r\n \"value\": 78\r\n }\r\n}"
            },
            "url": "{{url}}/assetmanager/api/inventoryequipment/equipments/physical",
            "description": "Create new physical equipment record.   \n\n**Required parameters:**   \n* **status**\n\t* Available\n\t* Decommissioning\n\t* Leased\n\t* Production\n\t* Provisioning\n\t* RMA\n\t* Spare\n\t* Stock\n\t* Test/Training\n* **quantity**\n\t* numeric, max 3 symbols allowed\n\t* default is 1\n\t* creates as many devices, as it is stated\n* **environmentName**\n* **powerSupplies**\n\t* text Integer 100 max\n* **manufacturerPartId**\n\nUse /assetmanager/api/inventoryequipment/searchmanparts to find manufacturerPartID (only for non-QTS manageged environments)\n\n**Optional parameters:**\n* startingNumber in case 'quantity' is 1\t\n* serial, text max length 60\n* customerAssetTag, text max length 40\n* customerHostname\n\t* must be unique across equipment of same environment\n\t* lowercase \n\t* only alpha-numeric characters, underscores and hyphens\n\t* Max length is 50 characters\n\t* Validation message: \"Host names must be all lowercase, and can only contain alpha-numeric characters, underscores and hyphens\"\n\t* Symbol # should be specified to set hostname counter but only in case the hostname is not empty \n* comments, text max 255 characters\t\n* racking\t\n\t* id, text identifier for the location\t\n\t* elevation\tnumeric\tnumber of elevation\t\n\t* deviceAlignment (ignored if placed in non-rack container)\n\t\t* front\n\t\t* rear\n* racked"
          },
          "response": [
            {
              "id": "30ea346c-2e69-4f85-b84c-bbdef7fc4e81",
              "name": "Create New Physical Equipment",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n \"status\": \"Provisioning\",\r\n \"quantity\": 1,\r\n \"startingNumber\": 1,\r\n \"environmentName\": \"qts-sales-sam-smartrack\",\r\n \"powerSupplies\": 3,\r\n \"serial\": \"api_test\",\r\n \"customerAssetTag\": \"api_test_1\",\r\n \"customerHostName\": \"api_test_1\",\r\n \"comments\": \"w54\",\r\n \"manufacturerPartId\": {\r\n \"value\": 78\r\n }\r\n}"
                },
                "url": "{{url}}/assetmanager/api/inventoryequipment/equipments/physical"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Set-Cookie",
                  "value": "JSESSIONID=D7D24DF493C95FE4C54B7BF663C010C0; Path=/assetmanager; HttpOnly"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "Cache-Control",
                  "value": "no-cache, no-store, max-age=0, must-revalidate"
                },
                {
                  "key": "Pragma",
                  "value": "no-cache"
                },
                {
                  "key": "Expires",
                  "value": "0"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "key": "Content-Length",
                  "value": "9"
                },
                {
                  "key": "Date",
                  "value": "Tue, 23 Apr 2019 19:19:55 GMT"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "[\n    1345273\n]"
            }
          ]
        },
        {
          "name": "Create New VM Equipment",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "3800b010-173f-4a8f-a48c-ab16d65aa89a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"environmentName\": \"demo_environment\",\r\n  \"ram\": 10,\r\n  \"ramSizeUnit\": \"GB\",\r\n  \"cpuQuantity\": 3,\r\n  \"totalStorage\": 10,\r\n  \"totalStorageSizeUnit\": \"GB\",\r\n  \"customerHostName\": \"test_vm_postman_1\",\r\n  \"os\": \"FreeBSD\",\r\n  \"osVer\": \"1\",\r\n  \"fileSystems\": [\r\n    {\r\n      \"name\": \"first filesystem\",\r\n      \"size\": 10,\r\n      \"sizeUnit\": \"GB\",\r\n      \"type\": {\r\n        \"key\": \"1\",\r\n        \"value\": \"NTFS\"\r\n      },\r\n      \"blockSize\": 4096\r\n    },\r\n    {\r\n      \"name\": \"second filesystem\",\r\n      \"size\": 11,\r\n      \"sizeUnit\": \"GB\",\r\n      \"type\": {\r\n        \"key\": \"7\",\r\n        \"value\": \"swap\"\r\n      },\r\n      \"blockSize\": 8192\r\n    }\r\n  ],\r\n  \"applications\": [\r\n    {\r\n      \"type\": {\r\n        \"key\": \"5\",\r\n        \"value\": \"Antivirus\"\r\n      },\r\n      \"comment\": \"test comment\"\r\n    },\r\n    {\r\n      \"type\": {\r\n        \"key\": \"4\",\r\n        \"value\": \"Database\"\r\n      },\r\n      \"comment\": null\r\n    }\r\n  ],\r\n  \"functions\": [\r\n    \"3\",\r\n    \"1\",\r\n    \"5\",\r\n    \"4\",\r\n    \"6\",\r\n    \"2\"\r\n  ],\r\n  \"notes\": \"test notes\",\r\n  \"status\": \"Available\",\r\n  \"quantity\": 1,\r\n  \"startingNumber\": 1\r\n}"
            },
            "url": "{{url}}/assetmanager/api/inventoryequipment/equipments/vm",
            "description": "Creates new Virtual Machine (VM) device.  \n\nSupported parameters must be specified in body.  \n\nUse /assetmanager/api/assetmanager/v1/dictionaries to identify key values."
          },
          "response": []
        },
        {
          "name": "Update VM Equipment",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0070a01b-0da7-4252-a4d2-8a430570594c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": 754568,\r\n  \"backupSystem\": \"NetBackup\",\r\n  \"environmentName\": \"kim_demo_environment\",\r\n  \"status\": \"Available\",\r\n  \"customerHostName\": \"test_vm_portman_2\",\r\n  \"os\": \"FreeBSD\",\r\n  \"osVer\": \"12\",\r\n  \"cpu\": {\r\n    \"id\": 33041,\r\n    \"type\": {\r\n      \"key\": \"1\",\r\n      \"value\": \"Virtual CPU\"\r\n    },\r\n    \"quantity\": 3\r\n  },\r\n  \"ram\": 1,\r\n  \"ramSizeUnit\": \"TB\",\r\n  \"serviceLevel\": null,\r\n  \"serviceOrderRenewalTerm\": null,\r\n  \"serviceOrderRenewalType\": null,\r\n  \"serviceOrderNumber\": \"123_test_service_order\",\r\n  \"version\": 1,\r\n  \"totalStorage\": 10,\r\n  \"totalStorageSizeUnit\": \"GB\"\r\n}"
            },
            "url": "{{url}}/assetmanager/api/inventoryequipment/equipments/vm/754568",
            "description": "Edits virtual machine properties.  \n\nFull equipment properties must be specified in the request body.  EquipmentID is required.  \n\nSupported parameters:\n* **customerHostname**  \n\t* Must be unique (server validation with dialog) across equipment of same environment\n\t* Lowercase, only alpha-numeric characters, underscores and hyphens\n\t* Maximum character length is 50\n\t* Symbol # should be specified to set hostname counter when hostname is not empty"
          },
          "response": []
        },
        {
          "name": "Update Physical Equipment",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "bac70630-7c40-4e66-aa33-681842ef38c0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"id\":754569,\r\n\"assetTag\":null,\r\n\"auditDate\":null,\r\n\"authType\":null,\r\n\"backupSystem\":null,\r\n\"comments\":\"serial12345\",\r\n\"complianceType\":null,\r\n\"em7DeviceId\":null,\r\n\"environmentName\":\"kim_demo_environment\",\r\n\"status\":\"Available\",\r\n\"hostName\":null,\r\n\"customerHostName\":\"serial12345678\",\r\n\"domainName\":null,\r\n\"os\":null,\r\n\"osVer\":null,\r\n\"platformInternal\":null,\r\n\"cpu\":null,\"ram\":null,\r\n\"ramSizeUnit\":\"GB\",\r\n\"serviceLevel\":null,\r\n\"maintBeginDate\":null,\r\n\"maintEndDate\":null,\r\n\"maintContractNumber\":null,\r\n\"masterMaintContractNumber\":null,\r\n\"serviceOrderRenewalTerm\":null,\r\n\"serviceOrderRenewalType\":null,\r\n\"serviceOrderExpirationDate\":null,\"serviceOrderNumber\":null,\r\n\"maintSupportLevel\":null,\r\n\"version\":1,\"awol\":null,\r\n\"customerAssetTag\":\"serial12345678\",\r\n\"dateReceived\":null,\r\n\"leaseBeginDate\":null,\r\n\"leaseEndDate\":null,\r\n\"leaseNumber\":null,\r\n\"leasingCompany\":null,\r\n\"poNumber\":null,\r\n\"powerDraw\":null,\r\n\"powerSupplies\":4,\r\n\"drives\":[],\r\n\"vendor\":null,\r\n\"console\":null,\r\n\"supportAgreement\":null,\r\n\"disposalDate\":null,\r\n\"manufacturerPartId\":{\"value\":1182}}"
            },
            "url": "{{url}}/assetmanager/api/inventoryequipment/equipments/physical/754569",
            "description": "Updates new physical equipment. \n\nAll equipment properties must be specified in the request body.  EquipmentID is required.\n\nSupported parameters:  \n* **customerHostname**  \n\t* Must be unique (server validation with dialog) across equipment of same environment\n\t* Lowercase, only alpha-numeric characters, underscores and hyphens\n\t* Maximum character length is 50\n\t* Symbol # should be specified to set hostname counter when hostname is not empty"
          },
          "response": []
        },
        {
          "name": "Update Equipment Notes",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "0c4dea91-f3ed-4320-93c5-f2a4e94903ea",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\"notes\":\"testtest\"\r\n}"
            },
            "url": "{{url}}/assetmanager/api/inventoryequipment/equipments/37717104/buildNotes",
            "description": "Edits 'Notes' block for existing device.  \nEquipmmentID is required."
          },
          "response": []
        },
        {
          "name": "Delete Equipment",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7ef0985b-326c-4600-8829-06df52b980a2",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "373614c5-8ad5-4f43-8655-01f347bf18de",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}/assetmanager/api/inventoryequipment/equipments?ids=754569",
              "host": [
                "{{url}}"
              ],
              "path": [
                "assetmanager",
                "api",
                "inventoryequipment",
                "equipments"
              ],
              "query": [
                {
                  "key": "ids",
                  "value": "754569"
                }
              ]
            },
            "description": "Deletes equipment for non-QTS managed environments only.\n\nSeveral equipment records can be deleted at a time by specifying multiple IDs in the request URL:  \n/assetmanager/api/inventoryequipment/equipments?ids=754052,754056"
          },
          "response": []
        }
      ],
      "_postman_id": "52a0918d-0cd1-45ee-8aa3-f5835e6e4cbb"
    },
    {
      "name": "Online Ordering",
      "item": [
        {
          "name": "Online Ordering General",
          "item": [
            {
              "name": "Get List of Contracts",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_id": "28e39041-7d63-459c-9ec1-90fa135ac04a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/contracts",
                "description": "Returns list of contracts.\nPlease note salesForceContractId must be specified for new orders and contract location should match the specified order location."
              },
              "response": [
                {
                  "id": "5598422a-05ed-4817-9e08-5c75b3812e31",
                  "name": "Get list of Contracts",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/contracts"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 16 Apr 2019 16:33:12 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"salesForceContractId\": \"800f2000001fnVdAAI\",\n        \"number\": \"00007127\",\n        \"gpNumber\": \"Test.12346.Test\",\n        \"location\": \"CHI1\",\n        \"startDate\": \"05-01-2018\",\n        \"endDate\": \"04-30-2019\"\n    },\n    {\n        \"salesForceContractId\": \"8002F0000003oSIQAY\",\n        \"number\": \"00008058\",\n        \"gpNumber\": \"ATL1.12345.Test\",\n        \"location\": \"ATL1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-28-2021\"\n    },\n    {\n        \"salesForceContractId\": \"8002F0000003oSNQAY\",\n        \"number\": \"00008059\",\n        \"gpNumber\": \"SUW1.12345.Test\",\n        \"location\": \"SUW1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-29-2021\"\n    },\n    {\n        \"salesForceContractId\": \"800f2000001gYOKAA2\",\n        \"number\": \"00008222\",\n        \"gpNumber\": \"ATL.Test12345\",\n        \"location\": \"ATL1\",\n        \"startDate\": \"12-28-2018\",\n        \"endDate\": \"12-28-2019\"\n    },\n    {\n        \"salesForceContractId\": \"800f2000001gZQrAAM\",\n        \"number\": \"00008274\",\n        \"gpNumber\": \"SUW1.Test12345\",\n        \"location\": \"SUW1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-07-2021\"\n    },\n    {\n        \"salesForceContractId\": \"80054000000A01RAAS\",\n        \"number\": \"00008366\",\n        \"gpNumber\": \"RIC1.Test12344\",\n        \"location\": \"RIC1\",\n        \"startDate\": \"02-20-2019\",\n        \"endDate\": \"02-25-2022\"\n    }\n]"
                }
              ]
            },
            {
              "name": "Get List of Carrier Hotel Locations",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "05da0bef-fda8-49a8-ab51-cc14ac70ad28",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/sp/carrier_hotel_locations",
                "description": "Returns list of supported Carrier Hotel Locations available for Swithboard port order."
              },
              "response": [
                {
                  "id": "4ceb032f-56fb-4467-ab9a-708bc5e14d58",
                  "name": "Get List of Carrier Hotel Locations",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/sp/carrier_hotel_locations"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 16 Apr 2019 16:34:28 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": 2,\n        \"shortAddress\": \"111 8th Ave\"\n    },\n    {\n        \"id\": 7,\n        \"shortAddress\": \"56 Marietta\"\n    },\n    {\n        \"id\": 5,\n        \"shortAddress\": \"350 Cermak\"\n    },\n    {\n        \"id\": 1,\n        \"shortAddress\": \"11 Great Oaks\"\n    },\n    {\n        \"id\": 3,\n        \"shortAddress\": \"1950 Stemmons\"\n    },\n    {\n        \"id\": 4,\n        \"shortAddress\": \"21715 Filigree\"\n    }\n]"
                }
              ]
            },
            {
              "name": "Get List of Contracts for a Specific Carrier Hotel",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a43ad468-05f7-4724-9120-8c017c099089",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/ordering/v1/api/sp/contracts?carrier_hotel_location=<carrier hotel id>",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "ordering",
                    "v1",
                    "api",
                    "sp",
                    "contracts"
                  ],
                  "query": [
                    {
                      "key": "carrier_hotel_location",
                      "value": "<carrier hotel id>"
                    }
                  ]
                },
                "description": "Lists contracts that can be used to order Switchboard port to a specific Carrier Hotel location.  \n\nCarrier Hotel ID must be specified as url parameter.\n\nCarrier Hotel ID can be obtained using:  \n/sdp/ordering/v1/api/sp/carrier_hotel_locations"
              },
              "response": [
                {
                  "id": "eced588d-db36-467c-bf2e-b103703a9cd1",
                  "name": "Get List of Contracts for a Specific Carrier Hotel",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/sp/contracts?carrier_hotel_location=5",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "sp",
                        "contracts"
                      ],
                      "query": [
                        {
                          "key": "carrier_hotel_location",
                          "value": "5"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 16 Apr 2019 16:38:10 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"salesForceContractId\": \"800f2000001fnVdAAI\",\n        \"number\": \"00007127\",\n        \"gpNumber\": \"Test.12346.Test\",\n        \"location\": \"CHI1\",\n        \"startDate\": \"05-01-2018\",\n        \"endDate\": \"04-30-2019\"\n    }\n]"
                }
              ]
            }
          ],
          "_postman_id": "502904e6-1118-4045-b904-6ff884f377ed",
          "description": "These APIs are common to online ordering APIs.",
          "_postman_isSubFolder": true
        },
        {
          "name": "crossConnect",
          "item": [
            {
              "name": "Get List of  crossConnect Orders",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e3951416-5b1b-40ba-9db6-8300fc15e7c8",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_id": "c2fcf45a-6b15-4ce0-b897-98d6376ff663",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders",
                "description": "Returns list of existing crossConnect orders."
              },
              "response": [
                {
                  "id": "41638567-67fc-4ff5-9c6c-cd38840c499d",
                  "name": "Get crossConnect order list",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/ccx/orders"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Mar 2019 17:08:34 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 20,\n        \"totalCount\": 26,\n        \"totalPages\": 2,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 205,\n            \"number\": \"CCX-000000069\",\n            \"created\": \"2018-10-31T15:25:05.819 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 207,\n            \"number\": \"CCX-000000070\",\n            \"created\": \"2018-10-31T16:40:22.505 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"customerReferenceName\": \"JJ TorrentTest\",\n            \"setupCharge\": 500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 208,\n            \"number\": \"CCX-000000071\",\n            \"created\": \"2018-10-31T17:30:43.999 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"customerReferenceName\": \"JJTorrent Test\",\n            \"setupCharge\": 500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 209,\n            \"number\": \"CCX-000000072\",\n            \"created\": \"2018-11-01T16:32:08.059 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1000,\n            \"monthlyPrice\": 300,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 210,\n            \"number\": \"CCX-000000073\",\n            \"created\": \"2018-11-01T21:44:03.794 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1000,\n            \"monthlyPrice\": 300,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 211,\n            \"number\": \"CCX-000000074\",\n            \"created\": \"2018-11-06T15:40:41.341 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 212,\n            \"number\": \"CCX-000000075\",\n            \"created\": \"2018-11-08T15:50:54.178 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"customerReferenceName\": \"Test1\",\n            \"setupCharge\": 500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 213,\n            \"number\": \"CCX-000000076\",\n            \"created\": \"2018-11-08T16:40:37.153 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 214,\n            \"number\": \"CCX-000000077\",\n            \"created\": \"2018-11-08T20:47:47.182 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 215,\n            \"number\": \"CCX-000000078\",\n            \"created\": \"2018-11-08T20:59:06.848 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 2000,\n            \"monthlyPrice\": 300,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 216,\n            \"number\": \"CCX-000000079\",\n            \"created\": \"2018-11-08T21:20:38.966 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 221,\n            \"number\": \"CCX-000000080\",\n            \"created\": \"2018-11-26T15:39:59.264 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"customerReferenceName\": \"test 1 from Torrent\",\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 222,\n            \"number\": \"CCX-000000081\",\n            \"created\": \"2018-11-26T15:55:28.890 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"customerReferenceName\": \"test 2 from Torrent\",\n            \"setupCharge\": 2000,\n            \"monthlyPrice\": 300,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 223,\n            \"number\": \"CCX-000000082\",\n            \"created\": \"2018-11-26T20:05:52.987 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"customerReferenceName\": \"test 3 from Torrent\",\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 224,\n            \"number\": \"CCX-000000083\",\n            \"created\": \"2018-11-26T20:32:02.515 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"customerReferenceName\": \"Test 4 for Torrent\",\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"IMPLEMENTATION_IN_PROGRESS\",\n                \"label\": \"Implementation in Progress\"\n            }\n        },\n        {\n            \"id\": 228,\n            \"number\": \"CCX-000000084\",\n            \"created\": \"2018-12-04T13:27:24.086 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1000,\n            \"monthlyPrice\": 300,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 255,\n            \"number\": \"CCX-000000085\",\n            \"created\": \"2018-12-14T16:14:19.844 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1000,\n            \"monthlyPrice\": 300,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 256,\n            \"number\": \"CCX-000000086\",\n            \"created\": \"2018-12-14T16:59:48.245 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 2000,\n            \"monthlyPrice\": 300,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"AWAITING_INTERNAL_REVIEW\",\n                \"label\": \"Awaiting Internal Review\"\n            }\n        },\n        {\n            \"id\": 280,\n            \"number\": \"CCX-000000087\",\n            \"created\": \"2018-12-20T21:11:29.827 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        },\n        {\n            \"id\": 283,\n            \"number\": \"CCX-000000088\",\n            \"created\": \"2018-12-21T15:37:18.188 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"setupCharge\": 1500,\n            \"monthlyPrice\": 150,\n            \"company\": \"QTS Product Training Company\",\n            \"status\": {\n                \"value\": \"PENDING\",\n                \"label\": \"Pending\"\n            }\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get List of Data Centers",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_id": "0707abb4-cc0c-42fa-a998-7b428b10e453",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/ccx/locations",
                "description": "Returns list of your locations (data centers) where crossConnect is available.  \n\nResponse parameter \"name\" is the data center site ID/location required to submit crossConnect orders."
              },
              "response": [
                {
                  "id": "e67f5d3c-a88e-42ba-a92a-11f7ec8eb580",
                  "name": "Get list of supported Data Centers for CCX services",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/ccx/locations"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Mar 2019 17:28:28 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": 12639,\n        \"name\": \"IAD1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66483,\n        \"name\": \"CHI1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66484,\n        \"name\": \"DFW1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 41898,\n        \"name\": \"IAD2\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66482,\n        \"name\": \"ATL1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66491,\n        \"name\": \"SJC1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66492,\n        \"name\": \"SUW1\",\n        \"city\": null,\n        \"state\": null\n    }\n]"
                }
              ]
            },
            {
              "name": "Get List of Racks",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e3951416-5b1b-40ba-9db6-8300fc15e7c8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "415f2700-48f6-468f-973e-b5503b07cec5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/ordering/v1/api/sp/racks?location=MIA1",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "ordering",
                    "v1",
                    "api",
                    "sp",
                    "racks"
                  ],
                  "query": [
                    {
                      "key": "location",
                      "value": "MIA1"
                    }
                  ]
                },
                "description": "Returns list of racks that can be used for crossConnect orders.\n\nRequired parameter:\n* location: data center site ID"
              },
              "response": [
                {
                  "id": "b5a9ff7c-b602-433c-8c25-4346ca03df60",
                  "name": "Get list of racks",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/ccx/racks/?location=CHI1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "ccx",
                        "racks",
                        ""
                      ],
                      "query": [
                        {
                          "key": "location",
                          "value": "CHI1"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Mar 2019 17:25:58 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"rackId\": \"327da219dba213080caef3a31d96195b\",\n        \"name\": \"ENC-CHI1-DC1-1-DH1-?-?\",\n        \"locationName\": \"CHI1\",\n        \"parentSpaceName\": \"DC1\",\n        \"buildingName\": \"DC1\",\n        \"spaceStatus\": \"Reserved\"\n    },\n    {\n        \"rackId\": \"693e6a99dba213080caef3a31d9619aa\",\n        \"name\": \"ENC-CHI1-DC1-1-DH1-?-?\",\n        \"locationName\": \"CHI1\",\n        \"parentSpaceName\": \"DC1\",\n        \"buildingName\": \"DC1\",\n        \"spaceStatus\": \"Assigned\"\n    }\n]"
                }
              ]
            },
            {
              "name": "crossConnect Data Dictionary",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "413675f2-909d-42e0-913d-8fc17ed8f125",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/ccx/circuit_connectivity_information",
                "description": "Returns available values and ids for cable types and connection types that can be used to create or update crossConnect orders."
              },
              "response": [
                {
                  "id": "6571b9d5-5121-4395-b8c6-5244fb83ea41",
                  "name": "crossConnect dictionary data",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/ccx/circuit_connectivity_information"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 18 Mar 2019 18:57:54 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"crossConnectTypeId\": \"GIG_E_1\",\n        \"crossConnectTypeName\": \"1 Gig-E\",\n        \"cableTypes\": [\n            {\n                \"id\": \"COPPER_CAT6\",\n                \"name\": \"Copper-cat6\",\n                \"connectors\": [\n                    {\n                        \"id\": \"RJ45\",\n                        \"name\": \"RJ45\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM1\",\n                \"name\": \"MMF OM1\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM3\",\n                \"name\": \"MMF OM3\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"SMF\",\n                \"name\": \"SMF\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"crossConnectTypeId\": \"GIG_E_10\",\n        \"crossConnectTypeName\": \"10 Gig-E\",\n        \"cableTypes\": [\n            {\n                \"id\": \"COPPER_CAT6\",\n                \"name\": \"Copper-cat6\",\n                \"connectors\": [\n                    {\n                        \"id\": \"RJ45\",\n                        \"name\": \"RJ45\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM1\",\n                \"name\": \"MMF OM1\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM3\",\n                \"name\": \"MMF OM3\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"SMF\",\n                \"name\": \"SMF\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"crossConnectTypeId\": \"GIG_E_25\",\n        \"crossConnectTypeName\": \"25 Gig-E\",\n        \"cableTypes\": [\n            {\n                \"id\": \"COPPER_CAT6\",\n                \"name\": \"Copper-cat6\",\n                \"connectors\": [\n                    {\n                        \"id\": \"RJ45\",\n                        \"name\": \"RJ45\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM1\",\n                \"name\": \"MMF OM1\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM3\",\n                \"name\": \"MMF OM3\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"SMF\",\n                \"name\": \"SMF\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"crossConnectTypeId\": \"GIG_E_50\",\n        \"crossConnectTypeName\": \"50 Gig-E\",\n        \"cableTypes\": [\n            {\n                \"id\": \"COPPER_CAT6\",\n                \"name\": \"Copper-cat6\",\n                \"connectors\": [\n                    {\n                        \"id\": \"RJ45\",\n                        \"name\": \"RJ45\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM1\",\n                \"name\": \"MMF OM1\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM3\",\n                \"name\": \"MMF OM3\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"SMF\",\n                \"name\": \"SMF\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"crossConnectTypeId\": \"GIG_E_100\",\n        \"crossConnectTypeName\": \"100 Gig-E\",\n        \"cableTypes\": [\n            {\n                \"id\": \"COPPER_CAT6\",\n                \"name\": \"Copper-cat6\",\n                \"connectors\": [\n                    {\n                        \"id\": \"RJ45\",\n                        \"name\": \"RJ45\",\n                        \"preferred\": true\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM1\",\n                \"name\": \"MMF OM1\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM3\",\n                \"name\": \"MMF OM3\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"SMF\",\n                \"name\": \"SMF\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"crossConnectTypeId\": \"DARK_FIBER\",\n        \"crossConnectTypeName\": \"Dark Fiber\",\n        \"cableTypes\": [\n            {\n                \"id\": \"MMF_OM1\",\n                \"name\": \"MMF OM1\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"MMF_OM3\",\n                \"name\": \"MMF OM3\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            },\n            {\n                \"id\": \"SMF\",\n                \"name\": \"SMF\",\n                \"connectors\": [\n                    {\n                        \"id\": \"FC\",\n                        \"name\": \"FC\",\n                        \"preferred\": false\n                    },\n                    {\n                        \"id\": \"LC\",\n                        \"name\": \"LC\",\n                        \"preferred\": true\n                    },\n                    {\n                        \"id\": \"SC\",\n                        \"name\": \"SC\",\n                        \"preferred\": false\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"crossConnectTypeId\": \"POTS\",\n        \"crossConnectTypeName\": \"POTS\",\n        \"cableTypes\": [\n            {\n                \"id\": \"COPPER_CAT6\",\n                \"name\": \"Copper-cat6\",\n                \"connectors\": [\n                    {\n                        \"id\": \"RJ45\",\n                        \"name\": \"RJ45\",\n                        \"preferred\": true\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"crossConnectTypeId\": \"DS1\",\n        \"crossConnectTypeName\": \"DS1\",\n        \"cableTypes\": [\n            {\n                \"id\": \"COPPER_CAT6\",\n                \"name\": \"Copper-cat6\",\n                \"connectors\": [\n                    {\n                        \"id\": \"RJ45\",\n                        \"name\": \"RJ45\",\n                        \"preferred\": true\n                    }\n                ]\n            }\n        ]\n    }\n]"
                }
              ]
            },
            {
              "name": "Get crossConnect Order Price",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1bd43c71-4434-4c53-a297-b3e961658667",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{url}}/ccx/orders/{orderID}/get_price",
                "description": "Returns monthly price and set up charge for existing crossConnect order. Price is estimated price when order has not been approved by QTS.\n\n**orderID** is required parameter."
              },
              "response": [
                {
                  "id": "d6cbc5a7-72d1-446c-ba74-978d1516e600",
                  "name": "Get CrossConnect order price",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{url}}/ccx/orders/{OrderID}/get_price"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Cache-Control",
                      "value": "no-cache"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n\t\"monthlyPrice\"; 150,\n\t\"setupCharge\"; 1500\n}"
                }
              ]
            },
            {
              "name": "Create Draft 'Connect to My Cage' crossConnect Order",
              "_postman_id": "f7ba0c98-2ebe-47f7-af2a-ee355891b1e5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "order",
                      "type": "file",
                      "value": null
                    },
                    {
                      "key": "MY_CAGE_LETTER_OF_AUTHORIZATION",
                      "type": "file",
                      "value": null
                    },
                    {
                      "key": "GENERIC_ATTACHMENT",
                      "type": "file",
                      "value": null
                    }
                  ]
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/",
                "description": "Creates new 'Connect to My Cage' draft crossConnect order.  This endpoint consumes multipart/form-data which consists of JSON part and attachment part.  It may be helpful to use the SDP UI as a guide when developing your first API request.  A Letter of Authorization (LOA) is not required for a 'Connect to My Cage' crossConnect order.  \n\nRequired parameters:\n* **location id** (data center)\n* **destinationType** (CONNECT_TO_MY_CAGE)\n* **ccxTypeId** (GIG_E_1, GIG_E_10, GIG_E_25, GIG_E_50, GIG_E_100, DARK_FIBER, POTS, DS1)\n* **cableTypeId** (COPPER_CAT6, MMF_OM1, MMF_OM3, SMF)\n* **salesforceContract id**\n\n* sideA\n\t* **rackId**\n\t* **endpointType** (PATCH_PANEL, TERMINATE_TO_RACK)\n\t* **connectorTypeId** (FC, LC, SC)\n\t* **panelShelf** (if endpointType is PATCH_PANEL)\n\t* **patchPanel** (if endpointType is PATCH_PANEL)\n\t* **portBlock** (if endpointType is PATCH_PANEL)\n\t\n* sideZ\n\t* **rackId**\n\t* **endpointType** (PATCH_PANEL, TERMINATE_TO_RACK)\n\t* **connectorTypeId** (FC, LC, SC)\n\t* **panelShelf** (if endpointType is PATCH_PANEL)\n\t* **patchPanel** (if endpointType is PATCH_PANEL)\n\t* **portBlock** (if endpointType is PATCH_PANEL)\n\n\nOptional parameters:  \n* dataCircuitName\n* customerReferenceName  \n* expeditedOrder\n* comment\n* rackName\n* port\n* GENERIC_ATTACHMENT (file/attachment)\n\nMultipart Request:\n* Body content disposition must be form-data\n* Filename must be \"order\" content type: application/JSON\n* Attachment\n\t* Attachment part has name \"MY_CAGE_LETTER_OF_AUTHORIZATION\", \"GENERIC_ATTACHMENT\"\n\t* Maximum file size is 6 MB\n\t* Content type must match document type (or set to auto)\n\t* Allowed document types:\n\t\t* pdf (content type: application/pdf)\n\t\t* txt \n\t\t* doc, docx\n\t\t* xls, xlsx\n\t\t\t\n\n\nThe required parameters can be obtained using the followihg requests:  \n* /sdp/ordering/v1/api/contracts\n* /sdp/ordering/v1/api/ccx/racks/?location={location}\n* /sdp/ordering/v1/api/ccx/circuit_connectivity_information\n\n\nSubmit Draft crossConnect orders using:\nPOST /sdp/ordering/v1/api/ccx/orders/{orderid}/submit\n\nExample request:  \n\n{\n\n\"cableTypeDescription\":\"Copper-cat6\",\n\"cableTypeId\":\"COPPER_CAT6\",\n\"ccxTypeDescription\":\"1 Gig-E\",\n\"ccxTypeId\":\"GIG_E_1\",\n\"customerReferenceName\":\"testib070504\",\n\"dataCircuitName\":\"testib070504\",\n\"destinationType\":\"CONNECT_TO_MY_CAGE\",\n\"expeditedOrder\":false,\n\"requestedDueDate\":\"2019-04-16\",\n\n\"location\":{\"id\": 66483, \"name\": \"CHI1\"},\n\n\"sideA\":{\n\t\"connectorTypeId\": \"RJ45\", \n\t\"destinationType\": \"CONNECT_TO_MY_CAGE\", \n\t\"endpointType\":\"PATCH_PANEL\", \n\t\"panelShelf\": \"1\", \n\t\"patchPanel\":\"1\", \n\t\"port\":\"1\",\n\t\"portBlock\": \"1\",\n\t\"rackId\" : \"327da219dba213080caef3a31d96195b\"\n\t\n},\n\n\"sideZ\":{\n\t\"comment\":\"2\",\n\t\"connectorTypeId\":\"RJ45\",\n\t\"destinationType\":\"CONNECT_TO_MY_CAGE\",\n\t\"endpointType\":\"PATCH_PANEL\",\n\t\"panelShelf\":\"2\",\n\t\"patchPanel\":\"2\", \n\t\"port\":\"2\",\n\t\"portBlock\":\"2\",\n\t\"rackId\":\"693e6a99dba213080caef3a31d9619aa\"\n\n},\n\n\"salesforceContract\":{\n\t\"location\":\"CHI1\",\n\t\"salesForceContractId\":\"800f2000001fnVdAAI\"\n\n}\n\n}"
              },
              "response": [
                {
                  "id": "2865fb09-a18f-4277-913e-7ff957ab94bd",
                  "name": "Create Draft 'Connect to My Cage' crossConnect Order",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n\r\n\"cableTypeDescription\":\"Copper-cat6\",\r\n\"cableTypeId\":\"COPPER_CAT6\",\r\n\"ccxTypeDescription\":\"1 Gig-E\",\r\n\"ccxTypeId\":\"GIG_E_1\",\r\n\"customerReferenceName\":\"testib070504\",\r\n\"dataCircuitName\":\"testib070504\",\r\n\"destinationType\":\"CONNECT_TO_MY_CAGE\",\r\n\"expeditedOrder\":false,\r\n\"requestedDueDate\":\"2019-04-16\",\r\n\r\n\"location\":{\"id\": 66483, \"name\": \"CHI1\"},\r\n\r\n\"sideA\":{\r\n\t\"connectorTypeId\": \"RJ45\", \r\n\t\"destinationType\": \"CONNECT_TO_MY_CAGE\", \r\n\t\"endpointType\":\"PATCH_PANEL\", \r\n\t\"panelShelf\": \"1\", \r\n\t\"patchPanel\":\"1\", \r\n\t\"port\":\"1\",\r\n\t\"portBlock\": \"1\",\r\n\t\"rackId\" : \"327da219dba213080caef3a31d96195b\"\r\n\t\r\n},\r\n\r\n\"sideZ\":{\r\n\t\"comment\":\"2\",\r\n\t\"connectorTypeId\":\"RJ45\",\r\n\t\"destinationType\":\"CONNECT_TO_MY_CAGE\",\r\n\t\"endpointType\":\"PATCH_PANEL\",\r\n\t\"panelShelf\":\"2\",\r\n\t\"patchPanel\":\"2\", \r\n\t\"port\":\"2\",\r\n\t\"portBlock\":\"2\",\r\n\t\"rackId\":\"693e6a99dba213080caef3a31d9619aa\"\r\n\r\n},\r\n\r\n\"salesforceContract\":{\r\n\t\r\n\t\"location\":\"CHI1\",\r\n\t\r\n\t\"salesForceContractId\":\"800f2000001fnVdAAI\"\r\n\t\r\n}\r\n\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 16 Apr 2019 19:52:10 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": 609,\n    \"number\": \"CCX-000000133\",\n    \"created\": \"2019-04-16T19:52:09.136 +0000\",\n    \"location\": {\n        \"id\": 66483,\n        \"name\": \"CHI1\",\n        \"city\": \"Chicago\",\n        \"state\": \"IL\"\n    },\n    \"createdByEmployee\": false,\n    \"cpy\": \"CPY000000005589\",\n    \"dataCircuitName\": \"testib070504\",\n    \"ccxTypeId\": \"GIG_E_1\",\n    \"ccxTypeDescription\": \"1 Gig-E\",\n    \"cableTypeId\": \"COPPER_CAT6\",\n    \"cableTypeDescription\": \"Copper-cat6\",\n    \"expeditedOrder\": false,\n    \"sideA\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"RJ45\",\n        \"panelShelf\": \"1\",\n        \"portBlock\": \"1\",\n        \"rackId\": \"327da219dba213080caef3a31d96195b\",\n        \"rackName\": \"ENC-CHI1-DC1-1-DH1-?-?\",\n        \"endpointType\": \"PATCH_PANEL\",\n        \"patchPanel\": \"1\",\n        \"port\": \"1\"\n    },\n    \"sideZ\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"RJ45\",\n        \"panelShelf\": \"2\",\n        \"portBlock\": \"2\",\n        \"rackId\": \"693e6a99dba213080caef3a31d9619aa\",\n        \"rackName\": \"ENC-CHI1-DC1-1-DH1-?-?\",\n        \"endpointType\": \"PATCH_PANEL\",\n        \"patchPanel\": \"2\",\n        \"port\": \"2\",\n        \"comment\": \"2\"\n    },\n    \"customerReferenceName\": \"testib070504\",\n    \"salesforceContract\": {\n        \"salesForceContractId\": \"800f2000001fnVdAAI\",\n        \"number\": \"00007127\",\n        \"gpNumber\": \"Test.12346.Test\",\n        \"location\": \"CHI1\",\n        \"startDate\": \"05-01-2018\",\n        \"endDate\": \"04-30-2019\"\n    },\n    \"attachedFiles\": [],\n    \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n    \"orderActionHistory\": [],\n    \"status\": {\n        \"value\": \"DRAFT\",\n        \"label\": \"Draft\"\n    }\n}"
                }
              ]
            },
            {
              "name": "Create  Draft 'Connect to Carrier' crossConnect Order",
              "_postman_id": "ae12e4c7-e620-49a6-b042-8b0aea47fe28",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "file",
                  "file": {
                    "src": "{\r\n\r\n\"cableTypeDescription\":\"Copper-cat6\",\r\n\"cableTypeId\":\"COPPER_CAT6\",\r\n\"ccxTypeDescription\":\"1 Gig-E\",\r\n\"ccxTypeId\":\"GIG_E_1\",\r\n\"customerReferenceName\":\"testib070504\",\r\n\"dataCircuitName\":\"testib070504\",\r\n\"destinationType\":\"CONNECT_TO_MY_CAGE\",\r\n\"expeditedOrder\":false,\r\n\"requestedDueDate\":\"2019-04-16\",\r\n\r\n\"location\":{\"id\": 66483, \"name\": \"CHI1\"},\r\n\r\n\"sideA\":{\r\n\t\"connectorTypeId\": \"RJ45\", \r\n\t\"destinationType\": \"CONNECT_TO_MY_CAGE\", \r\n\t\"endpointType\":\"PATCH_PANEL\", \r\n\t\"panelShelf\": \"1\", \r\n\t\"patchPanel\":\"1\", \r\n\t\"port\":\"1\",\r\n\t\"portBlock\": \"1\",\r\n\t\"rackId\" : \"327da219dba213080caef3a31d96195b\"\r\n\t\r\n},\r\n\r\n\"sideZ\":{\r\n\t\"comment\":\"2\",\r\n\t\"connectorTypeId\":\"RJ45\",\r\n\t\"destinationType\":\"CONNECT_TO_MY_CAGE\",\r\n\t\"endpointType\":\"PATCH_PANEL\",\r\n\t\"panelShelf\":\"2\",\r\n\t\"patchPanel\":\"2\", \r\n\t\"port\":\"2\",\r\n\t\"portBlock\":\"2\",\r\n\t\"rackId\":\"693e6a99dba213080caef3a31d9619aa\"\r\n\r\n},\r\n\r\n\"salesforceContract\":{\r\n\t\r\n\t\"location\":\"CHI1\",\r\n\t\r\n\t\"salesForceContractId\":\"800f2000001fnVdAAI\"\r\n\t\r\n}\r\n\r\n}"
                  }
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/",
                "description": "Creates new 'Connect to Carrier' draft crossConnect order.  This endpoint consumes multipart/form-data which consists of JSON part and attachment part.  It may be helpful to use the SDP UI as a guide when developing your first API request.  CARRIER_LETTER_OF_AUTHORIZATION is required.\n\nRequired parameters:\n* **location id** (data center)\n* **destinationType** (CONNECT_TO_CARRIER)\n* **ccxTypeId** (GIG_E_1, GIG_E_10, GIG_E_25, GIG_E_50, GIG_E_100, DARK_FIBER, POTS, DS1)\n* **cableTypeId** (COPPER_CAT6, MMF_OM1, MMF_OM3, SMF)\n* **salesforceContract id**\n\n* sideA\n\t* **CARRIER_LETTER_OF_AUTHORIZATION**\n\n* sideZ\n\t* **rackId**\n\t* **endpointType** (PATCH_PANEL, TERMINATE_TO_RACK)\n\t* **panelShelf** (if endpointType is PATCH_PANEL)\n\t* **patchPanel** (if endpointType is PATCH_PANEL)\n\t* **portBlock** (if endpointType is PATCH_PANEL)\n\nOptional parameters:\n* dataCircuitName\n* customerReferenceName\n* expeditedOrder\n* comment\n* rackName\n* port\n* CARRIER_FACILITY_AGREEMENT (file/attachment)\n* GENERIC_ATTACHMENT (file/attachment)\n\nMultipart Request:\n* Body content disposition must be form-data\n* Filename must be \"order\" content type: application/JSON\n* Attachment\n\t* Attachment part has name \"CARRIRER_LETTER_OF_AUTHORIZATION\", \"CARRIER_FACILITY_AGREEMENT\", \"GENERIC_ATTACHMENT\"\n\t* Maximum file size is 6 MB\n\t* Content type must match document type (or set to auto)\n\t* Allowed document types:\n\t\t* pdf (content type: application/pdf)\n\t\t* txt\n\t\t* doc, docx\n\t\t* xls, xlsx  \n\t\t\nThe required parameters can be obtained using the followihg requests:  \n\n/sdp/ordering/v1/api/contracts  \n/sdp/ordering/v1/api/ccx/racks/?location={location}  \n/sdp/ordering/v1/api/ccx/circuit_connectivity_information   \n\nSubmit Draft crossConnect orders using: POST /sdp/ordering/v1/api/ccx/orders/{orderid}/submit"
              },
              "response": [
                {
                  "id": "ec88dfe8-acb7-49aa-8127-3d217e63eccb",
                  "name": "Create  Draft 'Connect to Carrier' crossConnect Order",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n\r\n\"cableTypeDescription\":\"Copper-cat6\",\r\n\"cableTypeId\":\"COPPER_CAT6\",\r\n\"ccxTypeDescription\":\"1 Gig-E\",\r\n\"ccxTypeId\":\"GIG_E_1\",\r\n\"customerReferenceName\":\"testib070504\",\r\n\"dataCircuitName\":\"testib070504\",\r\n\"destinationType\":\"CONNECT_TO_MY_CAGE\",\r\n\"expeditedOrder\":false,\r\n\"requestedDueDate\":\"2019-04-16\",\r\n\r\n\"location\":{\"id\": 66483, \"name\": \"CHI1\"},\r\n\r\n\"sideA\":{\r\n\t\"connectorTypeId\": \"RJ45\", \r\n\t\"destinationType\": \"CONNECT_TO_MY_CAGE\", \r\n\t\"endpointType\":\"PATCH_PANEL\", \r\n\t\"panelShelf\": \"1\", \r\n\t\"patchPanel\":\"1\", \r\n\t\"port\":\"1\",\r\n\t\"portBlock\": \"1\",\r\n\t\"rackId\" : \"327da219dba213080caef3a31d96195b\"\r\n\t\r\n},\r\n\r\n\"sideZ\":{\r\n\t\"comment\":\"2\",\r\n\t\"connectorTypeId\":\"RJ45\",\r\n\t\"destinationType\":\"CONNECT_TO_MY_CAGE\",\r\n\t\"endpointType\":\"PATCH_PANEL\",\r\n\t\"panelShelf\":\"2\",\r\n\t\"patchPanel\":\"2\", \r\n\t\"port\":\"2\",\r\n\t\"portBlock\":\"2\",\r\n\t\"rackId\":\"693e6a99dba213080caef3a31d9619aa\"\r\n\r\n},\r\n\r\n\"salesforceContract\":{\r\n\t\r\n\t\"location\":\"CHI1\",\r\n\t\r\n\t\"salesForceContractId\":\"800f2000001fnVdAAI\"\r\n\t\r\n}\r\n\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 16 Apr 2019 20:09:52 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": 610,\n    \"number\": \"CCX-000000134\",\n    \"created\": \"2019-04-16T20:09:50.651 +0000\",\n    \"location\": {\n        \"id\": 66483,\n        \"name\": \"CHI1\",\n        \"city\": \"Chicago\",\n        \"state\": \"IL\"\n    },\n    \"createdByEmployee\": false,\n    \"cpy\": \"CPY000000005589\",\n    \"dataCircuitName\": \"testib070504\",\n    \"ccxTypeId\": \"GIG_E_1\",\n    \"ccxTypeDescription\": \"1 Gig-E\",\n    \"cableTypeId\": \"COPPER_CAT6\",\n    \"cableTypeDescription\": \"Copper-cat6\",\n    \"expeditedOrder\": false,\n  \n    \"sideZ\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"RJ45\",\n        \"panelShelf\": \"2\",\n        \"portBlock\": \"2\",\n        \"rackId\": \"693e6a99dba213080caef3a31d9619aa\",\n        \"rackName\": \"ENC-CHI1-DC1-1-DH1-?-?\",\n        \"endpointType\": \"PATCH_PANEL\",\n        \"patchPanel\": \"2\",\n        \"port\": \"2\",\n        \"comment\": \"2\"\n    },\n    \"customerReferenceName\": \"testib070504\",\n    \"salesforceContract\": {\n        \"salesForceContractId\": \"800f2000001fnVdAAI\",\n        \"number\": \"00007127\",\n        \"gpNumber\": \"Test.12346.Test\",\n        \"location\": \"CHI1\",\n        \"startDate\": \"05-01-2018\",\n        \"endDate\": \"04-30-2019\"\n    },\n    \"attachedFiles\": [],\n    \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n    \"orderActionHistory\": [],\n    \"status\": {\n        \"value\": \"DRAFT\",\n        \"label\": \"Draft\"\n    }\n}"
                }
              ]
            },
            {
              "name": "Submit crossConnect Order",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "53e55c6f-11cf-4a97-aaec-8e3274d94b01",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "052b5fb8-983a-4f1c-bdfd-4069888d42f6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/609/submit",
                "description": "Submits a draft order. \n\nRequired parameter:\n* **orderid**"
              },
              "response": []
            },
            {
              "name": "Resubmit crossConnect Order",
              "_postman_id": "e977daa6-a9a7-4970-aee5-7d34205231c1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "order",
                      "type": "file",
                      "value": null
                    }
                  ]
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/resubmit",
                "description": "Resubmit your crossConnect order that is currently in 'Need More Information' status so DCO can get updated details of the order and your comments.\n\nThis endpoint consumes multipart/form-data which consists of JSON part and attachment part.\n\nJSON name = \"order\"\n* location id\n* ccxTypeId\n\t* GIG_E_1\n\t* GIG_E_10\n* ccxTypeDescription\n* cableTypeId: SMF\n* cableTypeDescription\n* expeditedOrder: true, false\n* sideA destinationType: CONNECT_TO_MY_CAGE, PATCH_PANEL\n* connectorTypeId: LC\n* rackId\n* rackName\n* endpointType: PATCH_PANEL\n* sideZ destinationType: CONNECT_TO_MY_CAGE,\n* connectorTypeId: LC\n* endpointType: PATCH_PANEL\n* salesForceContractId\n* destinationType: CONNECT_TO_MY_CAGE, CONNECT_TO_CARRIER\n\n\nAttachment\n* Attachment part has name \"CARRIER_LETTER_OF_AUTHORIZATION\"\n* Maximum file size is 6 MB\n* Allowed document types:\n\t* pdf\n\t* txt\n\t* doc, docx\n\t* xls, xlsx"
              },
              "response": []
            },
            {
              "name": "Cancel crossConnect Order",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "cd924c4f-6e1f-4ffe-aad9-974af5585368",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\"orderId\":10449,\n\"cancelUserComment\":\"Cancelled VP order as part of acceptance process\"\n}"
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/cancel",
                "description": "Cancels existing crossConnect order.  \n\nRequired parameters:\n* OrderId \n* CancelUserComment   \n\nOnly crossConnect orders with 'Awaiting Internal Review' and 'Need More Information' statuses can be cancelled."
              },
              "response": []
            },
            {
              "name": "Update crossConnect Order",
              "_postman_id": "ac53b0e3-d829-48d6-94ec-cb83a4e0e030",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "order",
                      "value": "{\n    \"location\": {\n        \"id\": 3289737\n    },\n    \"ccxTypeId\": \"GIG_E_1\",\n    \"ccxTypeDescription\": \"1 Gig-E\",\n    \"cableTypeId\": \"SMF\",\n    \"cableTypeDescription\": \"SMF\",\n    \"expeditedOrder\": false,\n    \"sideA\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"LC\",\n        \"rackId\": \"84b0b8596fe215400247af512e3ee47c\",\n        \"rackName\": \"ENC-MIA1-DC1-1-POD2-208-05-Rack QVI03\",\n        \"endpointType\": \"PATCH_PANEL\"\n    },\n    \"sideZ\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"LC\",\n        \"endpointType\": \"PATCH_PANEL\"\n    },\n    \"salesforceContract\": {\n        \"salesForceContractId\": \"800q0000000MRgyAAG\"\n    },\n    \"destinationType\": \"CONNECT_TO_MY_CAGE\"\n    }",
                      "type": "text"
                    },
                    {
                      "key": "LETTER_OF_AUTHORIZATION",
                      "type": "file",
                      "value": null
                    }
                  ]
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/10449",
                "description": "Update a crossConnect order that is not yet submitted.  \n\nFull order details must be specified in the request body.  \n\nOrder ID must be specified in the URL.\n\nThis endpoint consumes multipart/form-data which consists of JSON part and attachment part.  \n\nJSON part has name \"order\"  \n* location id\n* ccxTypeId\n\t* GIG_E_1\n\t* GIG_E_10\n* ccxTypeDescription\n* cableTypeId: SMF\n* cableTypeDescription\n* expeditedOrder: true, false\n* sideA destinationType: CONNECT_TO_MY_CAGE, PATCH_PANEL\n\t* connectorTypeId: LC\n\t* rackId\n\t* rackName\n\t* endpointType: PATCH_PANEL\n* sideZ destinationType: CONNECT_TO_MY_CAGE,\n\t* connectorTypeId: LC\n\t* endpointType: PATCH_PANEL\n* salesForceContractId\n* destinationType: CONNECT_TO_MY_CAGE, CONNECT_TO_CARRIER\n\n\nAllowed attachment files:  \n* CARRIER_LETTER_OF_AUTHORIZATION (for 'Connect to Carrier' type)  \n* CARRIER_FACILITY_AGREEMENT (for 'Connect to Carrier' type)  \n* MY_CAGE_LETTER_OF_AUTHORIZATION (for 'Connect to My cage type')  \n* GENERIC_ATTACHMENT  \n\nAllowed attachment document types:  \n* pdf  \n* txt  \n* doc, docx  \n* xls, xlsx  \n\nMaximum attachment file size is 6 MB"
              },
              "response": []
            },
            {
              "name": "Create & Submit New crossConnect Order",
              "_postman_id": "f8550efd-2208-4082-9c59-48e5196e0aa6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer 72ffff0c-fa16-405d-8168-4dd3f9054960"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"id\":null,\"location\":{\"id\":3289815,\"name\":\"CHI1\",\"city\":null,\"state\":null},\"ccxTypeId\":\"GIG_E_25\",\"cableTypeId\":\"MMF_OM3\",\"expeditedOrder\":false,\"customerReferenceName\":\"Customer Reference Name\",\"salesforceContract\":{\"salesForceContractId\":\"800q0000000MwM0AAK\",\"number\":\"00006414\",\"gpNumber\":\"gp_for CHI1\",\"location\":\"CHI1\",\"startDate\":\"08-01-2018\",\"endDate\":\"12-31-2018\"},\"sideA\":{\"destinationType\":\"CONNECT_TO_CARRIER\",\"carrierName\":\"Carrier\",\"carrierOrderNumber\":\"Carrier Order Number\",\"carrierFocDate\":\"2018-12-07\",\"carrierCircuitId\":null,\"localLoopProvider\":null,\"lecCircuitId\":null,\"connectorTypeId\":\"FC\",\"panelShelf\":null,\"portBlock\":null},\"sideZ\":{\"destinationType\":\"CONNECT_TO_MY_CAGE\",\"rackId\":\"8b33a348db124300a571ff851d9619e6\",\"rackName\":\"ENC-CHI1-DC1-1-DH1-KG16\",\"endpointType\":\"PATCH_PANEL\",\"patchPanel\":\"Patch Panel name\",\"port\":null,\"comment\":null,\"connectorTypeId\":\"LC\",\"panelShelf\":\"test panel/shelf\",\"portBlock\":\"Port block\"},\"dataCircuitName\":\"Circuit Name\",\"destinationType\":\"CONNECT_TO_CARRIER\"}\r\n"
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/submit",
                "description": "Create and submit new crossConnect order.\n\nThis endpoint consumes multipart/form-data which consists of JSON part and attachment part.  \n\nJSON part has name \"order\"  \n\nAllowed attachment types:  \n* CARRIER_LETTER_OF_AUTHORIZATION (for 'Connect to Carrier' type)  \n* CARRIER_FACILITY_AGREEMENT (for 'Connect to Carrier' type)  \n* MY_CAGE_LETTER_OF_AUTHORIZATION (for 'Connect to My Cage type')  \n* GENERIC_ATTACHMENT  \n\nAllowed attachment document types:  \n- pdf  \n- txt  \n- doc, docx  \n- xls, xlsx  \n\nMaximum attachment file size is 6 MB"
              },
              "response": []
            },
            {
              "name": "Delete Draft crossConnect Order",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e3951416-5b1b-40ba-9db6-8300fc15e7c8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "cf122e37-ba16-4829-a3d1-b8458efbeaa9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{url}}/sdp/ordering/v1/api/ccx/orders/<order id>",
                "description": "Delete draft crossConnect.  \n\nOrder ID must be specified in URL."
              },
              "response": []
            }
          ],
          "_postman_id": "8fd60f45-06f4-45f5-85d9-102248340324",
          "_postman_isSubFolder": true
        },
        {
          "name": "Switchboard",
          "item": [
            {
              "name": "Switchboard Port",
              "item": [
                {
                  "name": "Get List of Switchboard Port  Orders",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "73431922-47c9-4543-b9e8-4ae07b5a9448",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders",
                    "description": "Lists Switchboard Port orders.\n\nPage filters are supported.\n\nExample:  \n\n/sdp/ordering/v1/api/sp/orders?pageNumber=1&pagSize=10"
                  },
                  "response": [
                    {
                      "id": "e1276df1-b611-4ecc-9886-b6c73325e970",
                      "name": "Get Switchboard Port  Order List",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": {
                          "raw": "{{url}}/sdp/ordering/v1/api/sp/orders?location=ATL1",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "sdp",
                            "ordering",
                            "v1",
                            "api",
                            "sp",
                            "orders"
                          ],
                          "query": [
                            {
                              "key": "location",
                              "value": "ATL1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Tue, 16 Apr 2019 17:38:51 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 20,\n        \"totalCount\": 34,\n        \"totalPages\": 2,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 606,\n            \"number\": \"SP-000000213\",\n            \"created\": \"2019-04-16T17:23:58.326 +0000\",\n            \"location\": {\n                \"id\": 66482,\n                \"name\": \"ATL1\",\n                \"city\": \"Atlanta\",\n                \"state\": \"GA\"\n            },\n            \"createdByEmployee\": false,\n            \"portProvider\": \"QTS\",\n            \"spTypeId\": \"GIG_E_1\",\n            \"spTypeDescription\": \"1 Gig-E\",\n            \"exchangeVisibility\": false,\n            \"endDate\": \"12-28-2019\",\n            \"vcOrders\": [],\n            \"status\": {\n                \"value\": \"DRAFT\",\n                \"label\": \"Draft\"\n            }\n        },\n        {\n            \"id\": 605,\n            \"number\": \"SP-000000212\",\n            \"created\": \"2019-04-12T16:34:30.580 +0000\",\n            \"location\": {\n                \"id\": 66482,\n                \"name\": \"ATL1\",\n                \"city\": \"Atlanta\",\n                \"state\": \"GA\"\n            },\n            \"createdByEmployee\": false,\n            \"portProvider\": \"CARRIER_HOTEL\",\n            \"spTypeId\": \"GIG_E_10\",\n            \"spTypeDescription\": \"10 Gig-E\",\n            \"portState\": \"DOWN\",\n            \"exchangeVisibility\": false,\n            \"carrierHotelLocation\": {\n                \"id\": 7,\n                \"shortAddress\": \"56 Marietta\"\n            },\n            \"startDate\": \"04-17-2019\",\n            \"endDate\": \"01-28-2021\",\n            \"vcOrders\": [],\n            \"status\": {\n                \"value\": \"FULFILLED\",\n                \"label\": \"Fulfilled\"\n            }\n       \n        \n           \n        }\n    ]\n}"
                    }
                  ]
                },
                {
                  "name": "Get Switchboard Order Status & History",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "149747d8-b192-4e44-abe7-2f1fc92dbbd5",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d89b2a55-c122-436d-bbce-5df564c92a2e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/657/action_history",
                    "description": "Returns status and history of applied actions for a specific Switchboard Port order.  \nSwitchboard order ID must be specified in URL.\n\nThe Switchboard order ID can be obtained using:  \n/sdp/ordering/v1/api/sp/orders"
                  },
                  "response": [
                    {
                      "id": "3e0ea8fe-689e-43a0-b6b5-39c2883ad57f",
                      "name": "Get Switchboard Order Status & History",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders/602/action_history"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Tue, 16 Apr 2019 17:40:49 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"orderActionHistory\": [\n        {\n            \"comment\": \"\",\n            \"author\": \"QTS Employee\",\n            \"operationDate\": \"2019-04-12T14:26:03.876+0000\",\n            \"action\": \"SUBMITTED\"\n        },\n        {\n            \"comment\": \"\",\n            \"author\": \"QTS Employee\",\n            \"operationDate\": \"2019-04-12T14:26:03.698+0000\",\n            \"action\": \"CREATED\"\n        }\n    ],\n    \"status\": {\n        \"value\": \"PENDING_REVIEW\",\n        \"label\": \"Pending\"\n    }\n}"
                    }
                  ]
                },
                {
                  "name": "Get List of Racks",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e3951416-5b1b-40ba-9db6-8300fc15e7c8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "29a43270-30dc-452d-87b9-7fbeb30d60d2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/sp/racks?location=MIA1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "sp",
                        "racks"
                      ],
                      "query": [
                        {
                          "key": "location",
                          "value": "MIA1"
                        }
                      ]
                    },
                    "description": "Returns list of racks that can be used for Switchboard Port orders. \n\nRequired parameter:\n * **location**: data center site ID"
                  },
                  "response": [
                    {
                      "id": "df0600e8-206c-4513-b7f2-8e34e75f9987",
                      "name": "Get List of Racks",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": {
                          "raw": "{{url}}/sdp/ordering/v1/api/ccx/racks?location=SUW1",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "sdp",
                            "ordering",
                            "v1",
                            "api",
                            "ccx",
                            "racks"
                          ],
                          "query": [
                            {
                              "key": "location",
                              "value": "SUW1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Tue, 02 Apr 2019 17:11:43 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"rackId\": \"fbb01eab6fa2d1800247af512e3ee4fd\",\n        \"name\": \"ENC-SUW1-DC1-1-DHNorth-200-01\",\n        \"locationName\": \"SUW1\",\n        \"parentSpaceName\": \"DC1\",\n        \"buildingName\": \"DC1\",\n        \"spaceStatus\": \"Occupied\"\n    },\n    {\n        \"rackId\": \"644038196fe215400247af512e3ee45e\",\n        \"name\": \"ENC-SUW1-DC1-1-DHNorth-210-01\",\n        \"locationName\": \"SUW1\",\n        \"parentSpaceName\": \"DC1\",\n        \"buildingName\": \"DC1\",\n        \"spaceStatus\": \"Occupied\"\n    },\n    {\n        \"rackId\": \"244038196fe215400247af512e3ee474\",\n        \"name\": \"ENC-SUW1-DC1-1-DHNorth-210-02\",\n        \"locationName\": \"SUW1\",\n        \"parentSpaceName\": \"DC1\",\n        \"buildingName\": \"DC1\",\n        \"spaceStatus\": \"Occupied\"\n    },\n    {\n        \"rackId\": \"b44038196fe215400247af512e3ee47d\",\n        \"name\": \"ENC-SUW1-DC1-1-DHNorth-210-03\",\n        \"locationName\": \"SUW1\",\n        \"parentSpaceName\": \"DC1\",\n        \"buildingName\": \"DC1\",\n        \"spaceStatus\": \"Occupied\"\n    },\n    {\n        \"rackId\": \"776030596fe215400247af512e3ee4a9\",\n        \"name\": \"ENC-SUW1-DC1-1-DHNorth-210-04\",\n        \"locationName\": \"SUW1\",\n        \"parentSpaceName\": \"DC1\",\n        \"buildingName\": \"DC1\",\n        \"spaceStatus\": \"Occupied\"\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Get Switchboard Port Order Estimated Price",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d08bb507-68da-4d9b-8c14-e3ae2aa5e7ef",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/sp/estimate_price?orderProvider=QTS&location=MIA1&portType=GIG_E_1&expeditedOrder=false",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "sp",
                        "estimate_price"
                      ],
                      "query": [
                        {
                          "key": "orderProvider",
                          "value": "QTS"
                        },
                        {
                          "key": "location",
                          "value": "MIA1"
                        },
                        {
                          "key": "portType",
                          "value": "GIG_E_1"
                        },
                        {
                          "key": "expeditedOrder",
                          "value": "false"
                        }
                      ]
                    },
                    "description": "Returns estimated price for monthly payments and setup charge based on location, port type. Expedited orders have different prices.  \n\nExample filters:  \n* ?orderProvider=QTS&location=MIA1&portType=GIG_E_1&expeditedOrder=false\n* ?orderProvider=CARRIER_HOTEL&location=ATL1&portType=GIG_E_10&expeditedOrder=false"
                  },
                  "response": [
                    {
                      "id": "fd77df11-6fb9-4adc-9657-82d9b0616fb1",
                      "name": "Get Switchboard Port Order Estimated Price",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": {
                          "raw": "{{url}}/sdp/ordering/v1/api/sp/estimate_price?orderProvider=QTS&location=MIA1&portType=GIG_E_1&expeditedOrder=false",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "sdp",
                            "ordering",
                            "v1",
                            "api",
                            "sp",
                            "estimate_price"
                          ],
                          "query": [
                            {
                              "key": "orderProvider",
                              "value": "QTS"
                            },
                            {
                              "key": "location",
                              "value": "MIA1"
                            },
                            {
                              "key": "portType",
                              "value": "GIG_E_1"
                            },
                            {
                              "key": "expeditedOrder",
                              "value": "false"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Tue, 16 Apr 2019 17:04:53 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"monthlyPrice\": 150,\n    \"setupCharge\": 250\n}"
                    }
                  ]
                },
                {
                  "name": "Get List of Data Centers",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a217265d-4f56-4e8d-b5a1-dece8dcf4b0c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/sp/locations",
                    "description": "Returns list of locations (data centers)."
                  },
                  "response": [
                    {
                      "id": "61b47b5f-e886-4441-aebf-6182907e48aa",
                      "name": "Get List of Data Centers",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/sp/locations"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Tue, 16 Apr 2019 17:42:37 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": 66483,\n        \"name\": \"CHI1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66484,\n        \"name\": \"DFW1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 41898,\n        \"name\": \"IAD2\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66482,\n        \"name\": \"ATL1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66491,\n        \"name\": \"SJC1\",\n        \"city\": null,\n        \"state\": null\n    },\n    {\n        \"id\": 66492,\n        \"name\": \"SUW1\",\n        \"city\": null,\n        \"state\": null\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Get List of Data Centers for Switchboard Port Service",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5bde797e-cf2b-42b2-90e0-5b8b858c67a1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/sp/supported_locations",
                    "description": "Returns list of your locations (data centers) that support Switchboard services. \n\nUse the below API to idenfity all your locations (data centers):  \n/sdp/ordering/v1/api/sp/locations"
                  },
                  "response": [
                    {
                      "id": "e2978f41-d03e-4be9-ac26-a9b921971371",
                      "name": "Get List of Data Centers for Switchboard Port Service",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/sp/supported_locations"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Tue, 16 Apr 2019 17:43:18 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": 66482,\n        \"name\": \"ATL1\",\n        \"city\": \"Atlanta\",\n        \"state\": \"GA\"\n    },\n    {\n        \"id\": 66483,\n        \"name\": \"CHI1\",\n        \"city\": \"Chicago\",\n        \"state\": \"IL\"\n    },\n    {\n        \"id\": 66484,\n        \"name\": \"DFW1\",\n        \"city\": \"Irving\",\n        \"state\": \"TX\"\n    },\n    {\n        \"id\": 41898,\n        \"name\": \"IAD2\",\n        \"city\": \"Sterling\",\n        \"state\": \"VA\"\n    },\n    {\n        \"id\": 66486,\n        \"name\": \"MIA1\",\n        \"city\": \"Miami\",\n        \"state\": \"FL\"\n    },\n    {\n        \"id\": 66587,\n        \"name\": \"PNJ1\",\n        \"city\": \"Piscataway\",\n        \"state\": \"NJ\"\n    },\n    {\n        \"id\": 66489,\n        \"name\": \"RIC1\",\n        \"city\": \"Sandston\",\n        \"state\": \"Virginia\"\n    },\n    {\n        \"id\": 66491,\n        \"name\": \"SJC1\",\n        \"city\": \"Santa Clara\",\n        \"state\": \"CA\"\n    },\n    {\n        \"id\": 66492,\n        \"name\": \"SUW1\",\n        \"city\": \"Suwanee\",\n        \"state\": \"GA\"\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Create Draft 'Terminate to Rack'  Switchboard Port Order",
                  "_postman_id": "1b547c9a-83e9-4e98-a097-ad81cf5fdaae",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"location\": {\n    \"id\": 66482,\n    \"name\": \"ATL1\"\n  },\n  \"expeditedOrder\": false,\n  \"physicalPort\": {\n    \"spTypeId\": \"GIG_E_1\",\n    \"cableTypeId\": \"SMF\",\n    \"exchangeVisibility\": true,\n    \"customerSide\": {\n      \"connectorTypeId\": \"LC\",\n      \"rackId\": \"f962d958db2f2340d655fd33399619fa\",\n      \"endpointType\": \"TERMINATE_TO_RACK\"\n    }\n  },\n  \"portProvider\": \"QTS\",\n  \"salesforceContract\": {\n    \"salesForceContractId\": \"8002F0000003oSIQAY\"\n  },\n  \"diverseFrom\": {\n    \"id\": 620,\n    \"number\": \"SP-000000226\"\n  }\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders",
                    "description": "Creates new 'Terminate to Rack' Switchboard port order. It may be helpful to use the SDP UI as a guide when developing your first API request.   \n\n\n\nRequired parameters for successful order submission (portProvider is the only required parameter for creation of draft order):\n* **portProvider** (QTS)\n* **location id**\n* **salesforceContractID**\n* **expeditedOrder** (true, false)\n* **virtualPortTypeId** (GIG_E_1, GIG_E_10)\n* **cableTypeId** (SMF)\n* **exchangeVisibility** (true = public; false = private)\n* **connectorTypeId** (LC, SC)\n* **rackId**\n* **endpointType**: \"TERMINATE_TO_RACK\"\n\n\nOptional parameters for successful order submission (portProvider is the only required parameter for creation of draft order):\n* location name\n* description\n* customerReferenceName\n* comment\n* rackName\n* diverseFrom id (must be a valid Switchboard port order not in draft mode)\n* diverseFrom number (must be a valid Switchboard port order not in draft mode)\n\nThe required parameters can be obtained using the following requests:  \n* /sdp/ordering/v1/api/sp/locations\n* /sdp/ordering/v1/api/contracts  \n* /sdp/ordering/v1/api/sp/racks?location={datacenter site ID, ex. MIA1} \n\n\nSubmit Draft Switchboard orders using:  \n* /sdp/ordering/v1/api/sp/orders/{order id}/submit"
                  },
                  "response": [
                    {
                      "id": "d810f975-5790-4bbe-836c-317df39a9c6f",
                      "name": "Create Draft 'Terminate to Rack'  Switchboard Port Order",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"location\": {\n    \"id\": 66482,\n    \"name\": \"ATL1\"\n  },\n  \"expeditedOrder\": false,\n  \"physicalPort\": {\n    \"spTypeId\": \"GIG_E_1\",\n    \"cableTypeId\": \"SMF\",\n    \"exchangeVisibility\": true,\n    \"customerSide\": {\n      \"connectorTypeId\": \"LC\",\n      \"rackId\": \"f962d958db2f2340d655fd33399619fa\",\n      \"endpointType\": \"TERMINATE_TO_RACK\"\n    }\n  },\n  \"portProvider\": \"QTS\",\n  \"salesforceContract\": {\n    \"salesForceContractId\": \"8002F0000003oSIQAY\"\n  },\n  \"diverseFrom\": {\n    \"id\": 620,\n    \"number\": \"SP-000000226\"\n  }\n}"
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders"
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Wed, 24 Apr 2019 17:36:47 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": 621,\n    \"number\": \"SP-000000227\",\n    \"created\": \"2019-04-24T17:36:46.041 +0000\",\n    \"location\": {\n        \"id\": 66482,\n        \"name\": \"ATL1\",\n        \"city\": \"Atlanta\",\n        \"state\": \"GA\"\n    },\n    \"createdByEmployee\": false,\n    \"cpy\": \"CPY000000005589\",\n    \"ccxTypeId\": \"GIG_E_1\",\n    \"ccxTypeDescription\": \"1 Gig-E\",\n    \"cableTypeId\": \"SMF\",\n    \"cableTypeDescription\": \"SMF\",\n    \"expeditedOrder\": false,\n    \"sideA\": {\n        \"destinationType\": \"CONNECT_TO_CARRIER\",\n        \"connectorTypeId\": \"LC\"\n    },\n    \"sideZ\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"LC\",\n        \"rackId\": \"f962d958db2f2340d655fd33399619fa\",\n        \"rackName\": \"ENC-ATL1-DC1-0-5W-?-?\",\n        \"endpointType\": \"TERMINATE_TO_RACK\"\n    },\n    \"salesforceContract\": {\n        \"salesForceContractId\": \"8002F0000003oSIQAY\",\n        \"number\": \"00008058\",\n        \"gpNumber\": \"ATL1.12345.Test\",\n        \"location\": \"ATL1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-28-2021\"\n    },\n    \"attachedFiles\": [],\n    \"destinationType\": \"CONNECT_TO_QTS_EXCHANGE_ROUTER\",\n    \"orderActionHistory\": [],\n    \"portProvider\": \"QTS\",\n    \"exchangeVisibility\": true,\n    \"status\": {\n        \"value\": \"DRAFT\",\n        \"label\": \"Draft\"\n    }\n}"
                    }
                  ]
                },
                {
                  "name": "Create Draft 'Connect to Patch Panel' Switchboard Port Order",
                  "_postman_id": "58296c25-9d62-4db1-9313-12b17664412d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"location\": {\r\n    \"id\": 66492,\r\n    \"name\": \"SUW1\"\r\n   \r\n  },\r\n  \"expeditedOrder\": false,\r\n  \"physicalPort\": {\r\n    \"spTypeId\": \"GIG_E_1\",\r\n    \"cableTypeId\": \"SMF\",\r\n    \"exchangeVisibility\": false,\r\n    \"customerSide\": {\r\n      \"connectorTypeId\": \"LC\",\r\n      \"rackId\": \"fbb01eab6fa2d1800247af512e3ee4fd\",\r\n      \"endpointType\": \"PATCH_PANEL\",\r\n      \"patchPanel\": \"Patch Panel\",\r\n      \"port\": \"Port Number\",\r\n      \"panelShelf\": \"Panel/Shelf\",\r\n      \"portBlock\": \"Port/Block\"\r\n    }\r\n  },\r\n  \"portProvider\": \"QTS\",\r\n  \"salesforceContract\": {\r\n    \"salesForceContractId\": \"800f2000001gZQrAAM\"\r\n}\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders",
                    "description": "Creates draft 'Connect to Patch Panel' Switchboard Port order.  \n\nRequired parameters for successful order submission (portProvider is the only required parameter for creation of draft order):\n* **portProvider** (QTS)\n* **location id**\n* **salesforceContractID**\n* **expeditedOrder** (true, false)\n* **virtualPortTypeId** (GIG_E_1, GIG_E_10)\n* **cableTypeId** (SMF)\n* **exchangeVisibility** (true = public; false = private)\n* **connectorTypeId** (LC, SC)\n* **rackId**\n* **endpointType**: \"PATCH_PANEL\"\n* **patchPanel**\n* **port**\n* **panelShelf**\n* **portBlock**\n\nOptional parameters for successful order submission (portProvider is the only required parameter for creation of draft order):\n* location id name\n* customerReferenceName\n* description\n* diverseFrom id (must be a valid Switchboard port order not in draft mode)\n* diverseFrom number (must be a valid Switchboard port order not in draft mode)\n* comment\n\nThe required parameters can be obtained using the following requests:  \n* /sdp/ordering/v1/api/sp/locations\n* /sdp/ordering/v1/api/contracts  \n* /sdp/ordering/v1/api/sp/racks?location=MIA1  \n\n\n\nSubmit Draft Switchboard orders using:  \n* /sdp/ordering/v1/api/sp/orders/{order id}/submit"
                  },
                  "response": [
                    {
                      "id": "68b716bc-60ca-4317-8c2b-b5efbcc86a15",
                      "name": "Create Draft 'Connect to Patch Panel' Switchboard Port Order",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"location\": {\r\n    \"id\": 66492,\r\n    \"name\": \"SUW1\"\r\n   \r\n  },\r\n  \"expeditedOrder\": false,\r\n  \"physicalPort\": {\r\n    \"spTypeId\": \"GIG_E_1\",\r\n    \"cableTypeId\": \"SMF\",\r\n    \"exchangeVisibility\": false,\r\n    \"customerSide\": {\r\n      \"connectorTypeId\": \"LC\",\r\n      \"rackId\": \"fbb01eab6fa2d1800247af512e3ee4fd\",\r\n      \"endpointType\": \"PATCH_PANEL\",\r\n      \"patchPanel\": \"Patch Panel\",\r\n      \"port\": \"Port Number\",\r\n      \"panelShelf\": \"Panel/Shelf\",\r\n      \"portBlock\": \"Port/Block\"\r\n    }\r\n  },\r\n  \"portProvider\": \"QTS\",\r\n  \"salesforceContract\": {\r\n    \"salesForceContractId\": \"800f2000001gZQrAAM\"\r\n}\r\n}"
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders"
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 25 Apr 2019 20:40:26 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": 628,\n    \"number\": \"SP-000000232\",\n    \"created\": \"2019-04-25T20:40:25.438 +0000\",\n    \"location\": {\n        \"id\": 66492,\n        \"name\": \"SUW1\",\n        \"city\": \"Suwanee\",\n        \"state\": \"GA\"\n    },\n    \"createdByEmployee\": false,\n    \"cpy\": \"CPY000000005589\",\n    \"ccxTypeId\": \"GIG_E_1\",\n    \"ccxTypeDescription\": \"1 Gig-E\",\n    \"cableTypeId\": \"SMF\",\n    \"cableTypeDescription\": \"SMF\",\n    \"expeditedOrder\": false,\n    \"sideA\": {\n        \"destinationType\": \"CONNECT_TO_CARRIER\",\n        \"connectorTypeId\": \"LC\"\n    },\n    \"sideZ\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"LC\",\n        \"panelShelf\": \"Panel/Shelf\",\n        \"portBlock\": \"Port/Block\",\n        \"rackId\": \"fbb01eab6fa2d1800247af512e3ee4fd\",\n        \"rackName\": \"ENC-SUW1-DC1-1-DHNorth-200-01\",\n        \"endpointType\": \"PATCH_PANEL\",\n        \"patchPanel\": \"Patch Panel\",\n        \"port\": \"Port Number\"\n    },\n    \"salesforceContract\": {\n        \"salesForceContractId\": \"800f2000001gZQrAAM\",\n        \"number\": \"00008274\",\n        \"gpNumber\": \"SUW1.Test12345\",\n        \"location\": \"SUW1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-07-2021\"\n    },\n    \"attachedFiles\": [],\n    \"destinationType\": \"CONNECT_TO_QTS_EXCHANGE_ROUTER\",\n    \"orderActionHistory\": [],\n    \"portProvider\": \"QTS\",\n    \"exchangeVisibility\": false,\n    \"status\": {\n        \"value\": \"DRAFT\",\n        \"label\": \"Draft\"\n    }\n}"
                    }
                  ]
                },
                {
                  "name": "Create Draft 'Connect to Carrier Hotel' Switchboard Port Order",
                  "_postman_id": "4c08ff41-a759-448e-99f4-f68927de6f03",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"portProvider\": \"CARRIER_HOTEL\",\n  \"customerReferenceName\": \"Test Customer reference Name\",\n  \"carrierHotelConfiguration\": {\n    \"location\": {\n      \"id\": 7\n\n    }\n  },\n  \"salesforceContract\": {\n    \"salesForceContractId\": \"8002F0000003oSIQAY\"\n\n  },\n  \"description\": \"Test Description\",\n  \"physicalPort\": {\n    \"spTypeId\": \"GIG_E_10\",\n   \n    \"cableTypeId\": \"SMF\",\n    \"exchangeVisibility\": false,\n    \"customerSide\": {\n      \"connectorTypeId\": \"LC\",\n      \"destinationType\": \"CONNECT_TO_CARRIER_HOTEL\"\n    }\n  }\n  \n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders",
                    "description": "Creates a new draft Switchboard Port order to 'Carrier Hotel'.  It may be helpful to use the SDP UI as a guide when developing your first API request.  \n\nThis is a multipart endpoint which consists of JSON (order) and multipart/form-data (attachment).  The attachment is the required Letter of Authorization (LOA) from your carrier.  \n\nRequired parameters for successful order submission (portProvider is the only required parameter for creation of draft order):  \n* **portProvider** (CARRIER_HOTEL)\n* **Carrier Hotel location id**\n* **salesforceContractID**\n* **virtualPortTypeId** (GIG_E_1, GIG_E_10)\n* **cableTypeId** (SMF)\n* **exchangeVisibility** (false = private)\n* **connectorTypeId** (LC, SC)  \n\nOptional parameters for successful order submission (portProvider is the only required parameter for creation of draft order):\n* customerReferenceName\n* description  \n\nThe required parameters can be obtained using the following requests:  \n/sdp/ordering/v1/api/sp/locations  \n/sdp/ordering/v1/api/contracts  \n/sdp/ordering/v1/api/sp/racks?location={datacenter site ID, ex. MIA1}  \n/sdp/ordering/v1/api/sp/carrier_hotel_locations  \n\n\nSubmit Draft Switchboard orders using:  \n/sdp/ordering/v1/api/sp/orders/{order id}/submit\n\n**LOA attachment requirements:**\n* content type must be multipart/form-data\n* key name must be LETTER_OF_AUTHORTIZATION \n* If using Postman, file must be stored locally\n* Following attachment document types are allowed:\n\t* pdf\n\t* txt\n\t* doc, docx\n\t* xls, xlsx  \n* Maximum file size is 6 MB\n\n**Order attachment requirements:**\n* content type must be JSON\n* key name must be order\n* You can copy the body shown in this documentation, replace your values and create a file using Notepad\n* If using Postman, file must be stored locally\n* Following attachment document types are allowed:\n\t* pdf\n\t* txt\n\t* doc, docx\n\t* xls, xlsx  \n* Maximum file size is 6 MB"
                  },
                  "response": []
                },
                {
                  "name": "Create & Submit New Switchboard Port Order",
                  "_postman_id": "181a2b54-aaf2-4f05-be59-2e3d554c6e89",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"location\": {\n    \"id\": 66482,\n    \"name\": \"ATL1\"\n  },\n  \"expeditedOrder\": false,\n  \"physicalPort\": {\n    \"spTypeId\": \"GIG_E_1\",\n    \"cableTypeId\": \"SMF\",\n    \"exchangeVisibility\": true,\n    \"customerSide\": {\n      \"connectorTypeId\": \"LC\",\n      \"rackId\": \"f962d958db2f2340d655fd33399619fa\",\n      \"endpointType\": \"TERMINATE_TO_RACK\"\n    }\n  },\n  \"portProvider\": \"QTS\",\n  \"salesforceContract\": {\n    \"salesForceContractId\": \"8002F0000003oSIQAY\"\n  },\n  \"diverseFrom\": {\n    \"id\": 620,\n    \"number\": \"SP-000000226\"\n  }\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/submit",
                    "description": "Create and submit a new Switchboard Port order.  \n\nValid order details must be specified in request body.\n\nStatus of order can be confirmed using:  \n/sdp/ordering/v1/api/sp/orders/657/action_history"
                  },
                  "response": [
                    {
                      "id": "645c757d-f40d-4afa-a71f-e3fb4afc7661",
                      "name": "Create & Submit New Switchboard Port Order",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"location\": {\r\n    \"id\": 3289815,\r\n    \"name\": \"CHI1\",\r\n    \"city\": \"Chicago\",\r\n    \"state\": \"IL\"\r\n  },\r\n\"salesforceContract\": {\r\n\"salesForceContractId\": \"800q0000000N5fzAAC\"\r\n},\r\n  \"expeditedOrder\": true,\r\n  \"description\": \"Description\",\r\n  \"customerReferenceName\": \"Customer Refence Name\",\r\n  \"physicalPort\": {\r\n    \"exchangePortTypeId\": \"GIG_E_1\",\r\n    \"exchangePortTypeDescription\": \"1 Gig-E\",\r\n    \"cableTypeId\": \"SMF\",\r\n    \"cableTypeDescription\": \"SMF\",\r\n    \"exchangeVisibility\": true,\r\n    \"customerSide\": {\r\n      \"connectorTypeId\": \"LC\",\r\n      \"rackId\": \"8b33a348db124300a571ff851d9619e6\",\r\n      \"rackName\": \"ENC-CHI1-DC1-1-DH1-KG16\",\r\n      \"endpointType\": \"PATCH_PANEL\",\r\n      \"patchPanel\": \"PP name\",\r\n      \"port\": \"Port\",\r\n      \"comment\": \"Comments\",\r\n      \"destinationType\": \"CONNECT_TO_MY_CAGE\",\r\n      \"panelShelf\": \"Panel/Shelf\",\r\n      \"portBlock\": \"Port/Block\"\r\n    }\r\n  }\r\n}"
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders/submit"
                      },
                      "_postman_previewlanguage": null,
                      "header": null,
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": 657,\n    \"number\": \"SP-000000255\",\n    \"created\": \"2019-05-01T18:20:33.305 +0000\",\n    \"location\": {\n        \"id\": 66482,\n        \"name\": \"ATL1\",\n        \"city\": \"Atlanta\",\n        \"state\": \"GA\"\n    },\n    \"createdByEmployee\": false,\n    \"cpy\": \"CPY000000005589\",\n    \"ccxTypeId\": \"GIG_E_1\",\n    \"ccxTypeDescription\": \"1 Gig-E\",\n    \"cableTypeId\": \"SMF\",\n    \"cableTypeDescription\": \"SMF\",\n    \"expeditedOrder\": false,\n    \"sideA\": {\n        \"destinationType\": \"CONNECT_TO_CARRIER\",\n        \"connectorTypeId\": \"LC\"\n    },\n    \"sideZ\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"connectorTypeId\": \"LC\",\n        \"rackId\": \"f962d958db2f2340d655fd33399619fa\",\n        \"rackName\": \"ENC-ATL1-DC1-0-5W-?-?\",\n        \"endpointType\": \"TERMINATE_TO_RACK\"\n    },\n    \"salesforceContract\": {\n        \"salesForceContractId\": \"8002F0000003oSIQAY\",\n        \"number\": \"00008058\",\n        \"gpNumber\": \"ATL1.12345.Test\",\n        \"location\": \"ATL1\",\n        \"startDate\": \"01-01-2019\",\n        \"endDate\": \"01-28-2021\"\n    },\n    \"attachedFiles\": [],\n    \"destinationType\": \"CONNECT_TO_QTS_EXCHANGE_ROUTER\",\n    \"orderActionHistory\": [\n        {\n            \"comment\": \"Following prices approved: Monthly price 150.0, Setup charge: 251.0\",\n            \"author\": \"portal.demo.api\",\n            \"operationDate\": \"2019-05-01T18:20:34.351+0000\",\n            \"action\": \"SUBMITTED\"\n        },\n        {\n            \"comment\": \"\",\n            \"author\": \"portal.demo.api\",\n            \"operationDate\": \"2019-05-01T18:20:34.246+0000\",\n            \"action\": \"CREATED\"\n        }\n    ],\n    \"portProvider\": \"QTS\",\n    \"exchangeVisibility\": true,\n    \"status\": {\n        \"value\": \"AWAITING_INTERNAL_REVIEW\",\n        \"label\": \"Awaiting Internal Review\"\n    }\n}"
                    }
                  ]
                },
                {
                  "name": "Validate Existing Switchboard Port  Order",
                  "_postman_id": "9391a126-a75c-43a7-a72f-d857aabcdc7f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/655/validate",
                    "description": "Validates details of draft Switchboard order prior to submission.  No new order is created nor is update performed.  \n\nOrderID must be included in URL. Results will show Swithcboard Port Details that are required for successful submission of order when General parameters are present in the draft order.  \n\n200 OK response means order details are valid and can be used for new Switchboard order creation.\n\nOrderID can be obtained using:  \n/sdp/ordering/v1/api/sp/orders"
                  },
                  "response": [
                    {
                      "id": "b5bb412b-8e3a-40e9-9801-522511e8ed13",
                      "name": "Validate Existing Switchboard Port  Order",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders/655/validate"
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Wed, 01 May 2019 18:03:27 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"code\": \"INVALID_INPUT_DATA\",\n    \"message\": \"portBlock: may not be empty\\nconnectorTypeId: may not be null\\npanelShelf: may not be empty\\nrackId: may not be null\\npatchPanel: may not be empty\"\n}"
                    }
                  ]
                },
                {
                  "name": "Validate New Switchboard Port Order",
                  "_postman_id": "d810c287-c582-417b-a068-8831dec96fc4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n\"location\": {\r\n\"id\": 66483\r\n},\r\n\"salesforceContract\": {\r\n\"salesForceContractId\": \"800q0000000N5fzAAC\"\r\n},\r\n\"expeditedOrder\": true,\r\n\"description\": \"test description\",\r\n\"customerReferenceName\": \"All fields test\",\r\n\"physicalPort\": {\r\n\"virtualPortTypeId\": \"GIG_E_1\",\r\n\"cableTypeId\": \"SMF\",\r\n\"exchangeVisibility\": true,\r\n\"customerSide\": {\r\n\"connectorTypeId\": \"SC\",\r\n\"rackId\": \"ff0f612cdba02bc0b300001b8a961909\",\r\n\"endpointType\": \"TERMINATE_TO_RACK\",\r\n\"comment\": \"All fields comment\"\r\n}\r\n}\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/validate",
                    "description": "Validates details of new Switchboard order prior to submission. No new order is created nor is update performed.\nResults will show parameter that does not meet requirement.\n200 OK response means order details are valid and can be used for new Switchboard order creation.\n\nFor list of required parameters, see documentation on type of order (ie Terminate to Rack, Connect to Patch Panel, Connect to Carrier Hotel)"
                  },
                  "response": [
                    {
                      "id": "5b280caa-4bc0-485f-96c7-a156085bfbe8",
                      "name": "Validate New Switchboard Port Order",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"location\": {\n    \"id\": 66482,\n    \"name\": \"ATL1\"\n  },\n  \"expeditedOrder\": false,\n  \"physicalPort\": {\n    \"spTypeId\": \"GIG_E_1\",\n    \"cableTypeId\": \"SMF\",\n    \"exchangeVisibility\": true,\n    \"customerSide\": {\n      \"connectorTypeId\": \"LC\",\n      \"rackId\": \"f962d958db2f2340d655fd33399619fa\",\n      \"endpointType\": \"TERMINATE_TO_RACK\"\n    }\n  },\n  \"portProvider\": \"QTS\",\n  \"salesforceContract\": {\n    \"salesForceContractId\": \"8002F0000003oSIQAY\"\n  },\n  \"diverseFrom\": {\n    \"id\": 620,\n    \"number\": \"SP-000000226\"\n  }\n}"
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders/validate"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "plain",
                      "header": [
                        {
                          "key": "Date",
                          "value": "Wed, 01 May 2019 19:53:27 GMT"
                        },
                        {
                          "key": "Content-Length",
                          "value": "0"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "name": "Resubmit Switchboard Port order",
                  "_postman_id": "0b821d88-f536-4702-957e-8d9256d0ebda",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n\"order\" :{\r\n\"id\": 10894,\r\n\"number\": \"VP-000000405\",\r\n\"location\": {\"id\": 3289737},\r\n\"salesforceContract\": {\"salesForceContractId\": \"800q0000000N5fzAAC\"},\r\n\"physicalPort\": {\r\n\"virtualPortTypeId\": \"GIG_E_1\",\r\n\"cableTypeId\": \"SMF\",\r\n\"customerSide\": {\"connectorTypeId\": \"SC\",\"rackId\": \"ff0f612cdba02bc0b300001b8a961909\",\"endpointType\": \"PATCH_PANEL\",\"patchPanel\": \"API PP\",\"panelShelf\" : \"API CPS\",\"portBlock\": \"API CPB\"}\r\n}\r\n},\r\n\"comment\" : \"resubmit reason\"\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/resubmit",
                    "description": "Resubmits Switchboard order that is currently in 'Need More Information' status to update details and comments on order for DCO.  \n\nFor list of required parameters, see documentation on type of order (ie Terminate to Rack, Connect to Patch Panel, Connect to Carrier Hotel)"
                  },
                  "response": []
                },
                {
                  "name": "Cancel Switchboard Port Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1d7d1055-6953-4966-9bb8-d9bcda717a3c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\"orderId\":657,\n\"cancelUserComment\":\"Cancel SP order as part of testing process\"\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/cancel",
                    "description": "Cancels existing Switchboard order.\r\n\r\nRequired parameters:  \r\n* OrderId\r\n* CancelUserComment  \r\n\r\nThe following order statuses can be cancelled:\r\n* Draft\r\n* Awaiting Internal Review\r\n* Need More Information"
                  },
                  "response": [
                    {
                      "id": "cd7e6533-4ddb-4698-aa68-76bb423379f7",
                      "name": "Cancel Switchboard Port Order",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\"orderId\":657,\n\"cancelUserComment\":\"Cancelled SP order as part of testing\"\n}"
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders/cancel"
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "plain",
                      "header": [
                        {
                          "key": "Date",
                          "value": "Thu, 02 May 2019 19:00:04 GMT"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                },
                {
                  "name": "Update & Submit Existing Switchboard Port Order",
                  "_postman_id": "49e27a69-48c4-4044-8604-b58a6f54d235",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"id\": 13381,\r\n  \"location\": {\r\n    \"id\": 3289814,\r\n    \"name\": \"ATL1\",\r\n    \"city\": \"Atlanta\",\r\n    \"state\": \"GA\"\r\n  },\r\n  \"salesforceContract\": {\r\n    \"salesForceContractId\": \"8003B000000O2PDQA0\",\r\n    \"number\": \"00007885\",\r\n    \"gpNumber\": \"GPIrinaContractATL1\",\r\n    \"location\": \"ATL1\",\r\n    \"startDate\": \"11-09-2018\",\r\n    \"endDate\": \"11-09-2019\"\r\n  },\r\n  \"expeditedOrder\": true,\r\n  \"description\": \"Description_updated\",\r\n  \"customerReferenceName\": \"Customer Refence Name_updated\",\r\n  \"physicalPort\": {\r\n    \"exchangePortTypeId\": \"GIG_E_1\",\r\n    \"exchangePortTypeDescription\": \"1 Gig-E\",\r\n    \"cableTypeId\": \"SMF\",\r\n    \"cableTypeDescription\": \"SMF\",\r\n    \"exchangeVisibility\": true,\r\n    \"customerSide\": {\r\n      \"connectorTypeId\": \"LC\",\r\n      \"rackId\": \"84b0b8596fe215400247af512e3ee47c\",\r\n      \"rackName\": \"ENC-MIA1-DC1-1-POD2-208-05-Rack QVI03\",\r\n      \"endpointType\": \"PATCH_PANEL\",\r\n      \"patchPanel\": \"PP name\",\r\n      \"port\": \"Port\",\r\n      \"comment\": \"Comments\",\r\n      \"destinationType\": \"CONNECT_TO_MY_CAGE\",\r\n      \"panelShelf\": \"Panel/Shelf\",\r\n      \"portBlock\": \"Port/Block\"\r\n    }\r\n  }\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vp/orders/<order id>/submit",
                    "description": "Update and submit existing Swithboard Port order.  If update is not required (submit order only), put {} in the body with no additional details.  \n\nOrder id must be specified in URL.\n\nFor list of required parameters, see documentation on type of order (ie Terminate to Rack, Connect to Patch Panel, Connect to Carrier Hotel)"
                  },
                  "response": []
                },
                {
                  "name": "Update Draft Switchboard Port order",
                  "_postman_id": "9489ffde-5f2a-4e24-91d0-a4efbd45e8dd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n\"location\": {\r\n\"id\": 3289737\r\n},\r\n\"salesforceContract\": {\r\n\"salesForceContractId\": \"800q0000000N5fzAAC\"\r\n},\r\n\"expeditedOrder\": true,\r\n\"description\": \"test description\",\r\n\"customerReferenceName\": \"All fields test\",\r\n\"physicalPort\": {\r\n\"virtualPortTypeId\": \"GIG_E_1\",\r\n\"cableTypeId\": \"SMF\",\r\n\"exchangeVisibility\": true,\r\n\"customerSide\": {\r\n\"connectorTypeId\": \"LC\",\r\n\"rackId\": \"ff0f612cdba02bc0b300001b8a961909\",\r\n\"endpointType\": \"PATCH_PANEL\",\r\n\"patchPanel\": \"All fields PP\",\r\n\"port\": \"All fields port\",\r\n\"panelShelf\" : \"All fields CPS\",\r\n\"portBlock\": \"All fields CPB\",\r\n\"comment\": \"All fields comment\"\r\n}\r\n}\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/<order id>",
                    "description": "Updates existing draft Switchboard Port order details. \nOrder ID must be specified in URL.  Order details must be specified in the body of the request.  \n\nFor list of required parameters, see documentation on type of order (ie Terminate to Rack, Connect to Patch Panel, Connect to Carrier Hotel)"
                  },
                  "response": [
                    {
                      "id": "0ea03f8f-851a-4054-bd33-aec4df3aa77c",
                      "name": "Update Draft Switchboard Port order",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n\"portProvider\": \"QTS\",\r\n\"description\": \"test update to exchange visibility to private\",\r\n\"exchangeVisibility\": false\r\n}"
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders/621"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Wed, 24 Apr 2019 18:20:16 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": 621,\n    \"number\": \"SP-000000227\",\n    \"created\": \"2019-04-24T17:36:46.041 +0000\",\n    \"createdByEmployee\": false,\n    \"cpy\": \"CPY000000005589\",\n    \"expeditedOrder\": false,\n    \"sideA\": {\n        \"destinationType\": \"CONNECT_TO_CARRIER\"\n    },\n    \"sideZ\": {\n        \"destinationType\": \"CONNECT_TO_MY_CAGE\",\n        \"rackId\": \"f962d958db2f2340d655fd33399619fa\",\n        \"rackName\": \"ENC-ATL1-DC1-0-5W-?-?\",\n        \"endpointType\": \"TERMINATE_TO_RACK\"\n    },\n    \"attachedFiles\": [],\n    \"destinationType\": \"CONNECT_TO_QTS_EXCHANGE_ROUTER\",\n    \"orderActionHistory\": [\n        {\n            \"comment\": \"\",\n            \"author\": \"portal.demo.api\",\n            \"operationDate\": \"2019-04-24T17:36:47.610+0000\",\n            \"action\": \"CREATED\"\n        }\n    ],\n    \"portProvider\": \"QTS\",\n    \"description\": \"test update to exchange visibility to private\",\n    \"exchangeVisibility\": false,\n    \"status\": {\n        \"value\": \"DRAFT\",\n        \"label\": \"Draft\"\n    }\n}"
                    }
                  ]
                },
                {
                  "name": "Delete Draft Switchboard Port Order",
                  "_postman_id": "cd7fad6b-3cac-4ae3-b801-28ecbbee52d4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/sp/orders/<order ID>",
                    "description": "Deletes draft Switchboard Port order. Order ID must be specified in URL.  \n\nOnly draft orders can be deleted.  \n\n\nOrder ID can be obtained using:  \n/sdp/ordering/v1/api/sp/orders"
                  },
                  "response": [
                    {
                      "id": "b46b5094-0267-47f6-90ba-b872017747c5",
                      "name": "Delete Draft Switchboard Port Order",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{url}}/sdp/ordering/v1/api/sp/orders/629"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "plain",
                      "header": [
                        {
                          "key": "Date",
                          "value": "Fri, 26 Apr 2019 13:18:34 GMT"
                        },
                        {
                          "key": "Content-Length",
                          "value": "0"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": null
                    }
                  ]
                }
              ],
              "_postman_id": "80d46749-7d2b-4a61-a395-457aa2c407f5",
              "_postman_isSubFolder": true
            },
            {
              "name": "Switchboard Virtual Connect",
              "item": [
                {
                  "name": "Get List of virtualConnect Orders",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7d78247c-71e1-42e3-bbf5-6d5801188862",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_id": "95009e27-15b6-4e22-8878-32faafac3040",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/vc/orders?pageNumber=1&pageSize=10",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "vc",
                        "orders"
                      ],
                      "query": [
                        {
                          "key": "pageNumber",
                          "value": "1"
                        },
                        {
                          "key": "pageSize",
                          "value": "10"
                        }
                      ]
                    },
                    "description": "Returns list of Virtual Connect orders.  \n\nPage filters are used in response; ensure your page size is correct."
                  },
                  "response": [
                    {
                      "id": "e0d5e868-4fbf-4bf8-8d43-420f8d14fcdd",
                      "name": "Get VC order list",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": {
                          "raw": "{{url}}/sdp/ordering/v1/api/vc/orders?pageNumber=1&pageSize=10",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "sdp",
                            "ordering",
                            "v1",
                            "api",
                            "vc",
                            "orders"
                          ],
                          "query": [
                            {
                              "key": "pageNumber",
                              "value": "1"
                            },
                            {
                              "key": "pageSize",
                              "value": "10"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Mon, 25 Mar 2019 13:56:03 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 10,\n        \"totalCount\": 25,\n        \"totalPages\": 3,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 459,\n            \"number\": \"VC-000000131\",\n            \"created\": \"2019-02-18T14:39:50.168 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"attachedFiles\": [],\n            \"connectionTo\": {\n                \"id\": 763,\n                \"name\": \"QTS Product Training Company\"\n            },\n            \"locationZ\": {\n                \"id\": 66492,\n                \"name\": \"SUW1\",\n                \"city\": \"Suwanee\",\n                \"state\": \"GA\"\n            },\n            \"connectionFrom\": {\n                \"id\": 2023,\n                \"name\": \"Switchboard Test2 Company\"\n            },\n            \"speed\": \"GIG_E_1\",\n            \"cloudConnect\": false,\n            \"metroConnectionType\": \"EXCHANGE_CUSTOMER\",\n            \"connectionType\": \"LONG_HAUL\",\n            \"sideA\": {\n                \"customerReferenceName\": \"Test Long Haul 1 for Roadshow\",\n                \"vlan\": 123,\n                \"description\": \"Test Long Haul 1 for Roadshow\",\n                \"epOrder\": {\n                    \"id\": 456,\n                    \"number\": \"SP-000000123\",\n                    \"created\": \"2019-02-16T02:24:34.538 +0000\",\n                    \"location\": {\n                        \"id\": 66483,\n                        \"name\": \"CHI1\",\n                        \"city\": \"Chicago\",\n                        \"state\": \"IL\"\n                    },\n                    \"createdByEmployee\": false,\n                    \"status\": {\n                        \"value\": \"FULFILLED\",\n                        \"label\": \"Fulfilled\"\n                    }\n                }\n            },\n            \"sideZ\": {\n                \"customerReferenceName\": \"Long Haul Approval 1 for Roadshow\",\n                \"vlan\": 456,\n                \"description\": \"Long Haul Approval 1 for Roadshow\",\n                \"epOrder\": {\n                    \"id\": 455,\n                    \"number\": \"SP-000000122\",\n                    \"created\": \"2019-02-16T01:41:27.950 +0000\",\n                    \"location\": {\n                        \"id\": 66492,\n                        \"name\": \"SUW1\",\n                        \"city\": \"Suwanee\",\n                        \"state\": \"GA\"\n                    },\n                    \"createdByEmployee\": false,\n                    \"salesforceContract\": {\n                        \"salesForceContractId\": \"800f2000001gZQrAAM\",\n                        \"number\": \"00008274\",\n                        \"gpNumber\": \"SUW1.Test12345\",\n                        \"location\": \"SUW1\",\n                        \"startDate\": \"01-01-2019\",\n                        \"endDate\": \"01-07-2021\"\n                    },\n                    \"customerReferenceName\": \"SUW1 Port 3 for Roadshow\",\n                    \"portType\": \"10 Gig-E\",\n                    \"portState\": \"DOWN\",\n                    \"physicalPort\": {\n                        \"exchangeVisibility\": false,\n                        \"routerName\": \"swb2.sw1\"\n                    },\n                    \"status\": {\n                        \"value\": \"FULFILLED\",\n                        \"label\": \"Fulfilled\"\n                    }\n                }\n            },\n            \"status\": {\n                \"value\": \"FULFILLED\",\n                \"label\": \"Fulfilled\"\n            },\n            \"incoming\": true,\n            \"companyName\": \"Switchboard Test2 Company\"\n        },\n        \n    ]\n}"
                    }
                  ]
                },
                {
                  "name": "Get virtualConnect Order Details",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fa9a219d-ec5e-4ac6-80a3-6360b1379cd3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/{VC order ID}",
                    "description": "Returns virtualConnect order details.  virtualConnect order ID must be specified in the request URL."
                  },
                  "response": [
                    {
                      "id": "774cebc3-d17a-4759-9756-1b04d90372ad",
                      "name": "Get virtualConnect Order Details",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/vc/orders/601"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Mon, 15 Apr 2019 20:33:56 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"id\": 601,\n    \"number\": \"VC-000000228\",\n    \"created\": \"2019-04-11T20:10:49.573 +0000\",\n    \"location\": {\n        \"id\": 66492,\n        \"name\": \"SUW1\",\n        \"city\": \"Suwanee\",\n        \"state\": \"GA\"\n    },\n    \"createdByEmployee\": true,\n    \"attachedFiles\": [],\n    \"connectionFrom\": {\n        \"id\": 763,\n        \"name\": \"QTS Product Training Company\"\n    },\n    \"speed\": \"GIG_E_1\",\n    \"cloudConnect\": true,\n    \"metroConnectionType\": \"EXCHANGE_CUSTOMER\",\n    \"connectionType\": \"CLOUD\",\n    \"sideA\": {\n        \"customerReferenceName\": \"labGcpConn2\",\n        \"vlan\": 2222,\n        \"spOrder\": {\n            \"id\": 598,\n            \"number\": \"SP-000000208\",\n            \"created\": \"2019-04-11T19:43:20.499 +0000\",\n            \"location\": {\n                \"id\": 66492,\n                \"name\": \"SUW1\",\n                \"city\": \"Suwanee\",\n                \"state\": \"GA\"\n            },\n            \"createdByEmployee\": true,\n            \"customerReferenceName\": \"Real Test for Yuting and Bobby Choate 1\",\n            \"physicalPort\": {\n                \"spTypeId\": \"GIG_E_10\",\n                \"spTypeDescription\": \"10 Gig-E\",\n                \"exchangeVisibility\": false,\n                \"portState\": \"DOWN\",\n                \"routerName\": \"swb1.lab\"\n            },\n            \"status\": {\n                \"value\": \"FULFILLED\",\n                \"label\": \"Fulfilled\"\n            }\n        }\n    },\n    \"cloudDetails\": {\n        \"cloudServiceProvider\": \"GOOGLE_HOSTED\",\n        \"id\": 144,\n        \"pairingKey\": \"8484fc48-c9bc-4d81-b98c-17cce60ac46c/us-east4/2\",\n        \"gcpVlanAttachmentName\": \"lab-vlan-b\",\n        \"destinationRegion\": {\n            \"id\": 178,\n            \"name\": \"CHI\",\n            \"description\": \"Chicago\",\n            \"alias\": \"Central US (Iowa)\"\n        }\n    },\n    \"status\": {\n        \"value\": \"PENDING\",\n        \"label\": \"Pending\"\n    },\n    \"submitted\": \"2019-04-11\",\n    \"orderActionHistory\": [\n        {\n            \"actionHistory\": {\n                \"comment\": \"\",\n                \"author\": \"QTS Employee\",\n                \"operationDate\": \"2019-04-11T20:10:49.887+0000\",\n                \"action\": \"SUBMITTED\"\n            },\n            \"incoming\": false\n        },\n        {\n            \"actionHistory\": {\n                \"comment\": \"\",\n                \"author\": \"QTS Employee\",\n                \"operationDate\": \"2019-04-11T20:10:49.585+0000\",\n                \"action\": \"CREATED\"\n            },\n            \"incoming\": false\n        }\n    ],\n    \"incoming\": false\n}"
                    }
                  ]
                },
                {
                  "name": "Get Occupied VLANs per Switchboard Port",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7d78247c-71e1-42e3-bbf5-6d5801188862",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_id": "1d4f4d29-d4f8-4bba-9c11-82091f21a39d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/vc/existing_vlans",
                    "description": "Returns list of VLANs occupied by Switchboard ports."
                  },
                  "response": [
                    {
                      "id": "fd782f79-fc93-4705-9223-0c8ce6463d58",
                      "name": "Get Occupied VLANs per Switchboard Port",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/vc/existing_vlans"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Mon, 15 Apr 2019 20:52:37 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"452\": [\n        30\n    ],\n    \"455\": [\n        2342,\n        2345,\n        54,\n        2333,\n        1234,\n        1436,\n        43,\n        456\n    ],\n    \"456\": [\n        123\n    ],\n    \"457\": [\n        2333,\n        1234,\n        1233,\n        303\n    ],\n    \"501\": [\n        23\n    ],\n    \"503\": [\n        787,\n        765,\n        367,\n        36,\n        234,\n        34,\n        43\n    ],\n    \"505\": [\n        44\n    ],\n    \"506\": [\n        45\n    ],\n    \"552\": [\n        101\n    ],\n    \"555\": [\n        909,\n        999\n    ],\n    \"557\": [\n        7,\n        2333,\n        2345,\n        32,\n        987\n    ],\n    \"561\": [\n        24\n    ],\n    \"571\": [\n        23\n    ],\n    \"587\": [\n        4\n    ],\n    \"592\": [\n        2222,\n        2346,\n        2345\n    ],\n    \"598\": [\n        2222,\n        2221\n    ]\n}"
                    }
                  ]
                },
                {
                  "name": "Get virtualConnect Order Status & History",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "149747d8-b192-4e44-abe7-2f1fc92dbbd5",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_id": "36c31a02-69dd-4da5-b1a9-5d5b85b9c759",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/{VC order ID}/action_history",
                    "description": "Returns status and history of applied actions for specific virtualConnect orders.\nvirtualConnect order ID must be specified in URL."
                  },
                  "response": [
                    {
                      "id": "401bd599-826e-46f3-bc13-2abc895a8e60",
                      "name": "Get virtualConnect Order Status & History",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/vc/orders/601/action_history"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Mon, 15 Apr 2019 21:00:24 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"orderActionHistory\": [\n        {\n            \"comment\": \"\",\n            \"author\": \"QTS Employee\",\n            \"operationDate\": \"2019-04-11T20:10:49.887+0000\",\n            \"action\": \"SUBMITTED\"\n        },\n        {\n            \"comment\": \"\",\n            \"author\": \"QTS Employee\",\n            \"operationDate\": \"2019-04-11T20:10:49.585+0000\",\n            \"action\": \"CREATED\"\n        }\n    ],\n    \"status\": {\n        \"value\": \"PENDING\",\n        \"label\": \"Pending\"\n    }\n}"
                    }
                  ]
                },
                {
                  "name": "Get List of Available Cloud Connection Speed for Location",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3f04fa35-f6f5-4a3c-a62b-47403f6a599c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/vc/supported_cloud_speeds?locationId=66492",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "vc",
                        "supported_cloud_speeds"
                      ],
                      "query": [
                        {
                          "key": "locationId",
                          "value": "66492"
                        }
                      ]
                    },
                    "description": "Returns available speed values (1Gbps or 10Gbps) for specific locationId (data center). Location ID must be specified as URL parameter."
                  },
                  "response": [
                    {
                      "id": "f81e5af7-4deb-40e9-98e5-f3d57049d8f4",
                      "name": "List of Available Cloud Connection Speed for Location",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": {
                          "raw": "{{url}}/sdp/ordering/v1/api/vc/supported_cloud_speeds?locationId=66492",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "sdp",
                            "ordering",
                            "v1",
                            "api",
                            "vc",
                            "supported_cloud_speeds"
                          ],
                          "query": [
                            {
                              "key": "locationId",
                              "value": "66492"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 03 May 2019 19:19:18 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    \"1Gbps\"\n]"
                    }
                  ]
                },
                {
                  "name": "Get List of Data Centers that Support Cloud Connections",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a7ae275c-8aba-4168-a451-58332200dca7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/vc/supported_cloud_locations",
                    "description": "Rreturns list of Data Centers that support Cloud Connections.  Virtual Connect with connection type of \"Cloud\" must be created from one of these locations only."
                  },
                  "response": [
                    {
                      "id": "a829b20d-d49b-44c1-a4a4-a4eb99c9206e",
                      "name": "List of Data Centers that Support Cloud Connections",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/vc/supported_cloud_locations"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 03 May 2019 19:22:04 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": 66492,\n        \"name\": \"SUW1\",\n        \"city\": \"Suwanee\",\n        \"state\": \"GA\"\n    },\n    {\n        \"id\": 66483,\n        \"name\": \"CHI1\",\n        \"city\": \"Chicago\",\n        \"state\": \"IL\"\n    },\n    {\n        \"id\": 66484,\n        \"name\": \"DFW1\",\n        \"city\": \"Irving\",\n        \"state\": \"TX\"\n    },\n    {\n        \"id\": 66485,\n        \"name\": \"JCY1\",\n        \"city\": \"Jersey City\",\n        \"state\": \"NJ\"\n    },\n    {\n        \"id\": 66486,\n        \"name\": \"MIA1\",\n        \"city\": \"Miami\",\n        \"state\": \"FL\"\n    },\n    {\n        \"id\": 66587,\n        \"name\": \"PNJ1\",\n        \"city\": \"Piscataway\",\n        \"state\": \"NJ\"\n    },\n    {\n        \"id\": 66489,\n        \"name\": \"RIC1\",\n        \"city\": \"Sandston\",\n        \"state\": \"Virginia\"\n    },\n    {\n        \"id\": 66491,\n        \"name\": \"SJC1\",\n        \"city\": \"Santa Clara\",\n        \"state\": \"CA\"\n    },\n    {\n        \"id\": 66482,\n        \"name\": \"ATL1\",\n        \"city\": \"Atlanta\",\n        \"state\": \"GA\"\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Download Attachment from virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "307d3441-ffaf-4145-be5b-ef276fa73f8e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/attachments/{attachment id}",
                    "description": "Downloads attachment of a virtualConnect order by attachment ID.  \n\nAttachment id can be obtained using:  \n/sdp/ordering/v1/api/vc/orders/{VC order ID}"
                  },
                  "response": []
                },
                {
                  "name": "Get Cloud Destination Regions (AWS)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "6a484fbf-4097-4e26-95ea-b54e7fbe5150",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/vc/aws_destination_regions",
                    "description": "Returns list of destination regions for AWS Hosted Cloud."
                  },
                  "response": [
                    {
                      "id": "1d62b3ec-8e48-4b15-a82f-3c6a1607ef1d",
                      "name": "Get Cloud Destination Regions (AWS)",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/vc/aws_destination_regions"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 03 May 2019 19:33:55 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"region\": \"us-east-1\",\n        \"description\": \"US East 1 (North Virginia)\",\n        \"alias\": \"US East (N. Virginia)\"\n    },\n    {\n        \"region\": \"us-west-1\",\n        \"description\": \"US West 1 (North California)\",\n        \"alias\": \"US West (N. California)\"\n    },\n    {\n        \"region\": \"us-west-2\",\n        \"description\": \"US West 2 (Oregon)\",\n        \"alias\": \"US West (Oregon)\"\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Get Cloud Destination Regions (Azure / GCP)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3f7556a7-d516-412b-89ec-f10f3fd8b02d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/vc/cloud_destination_regions?provider=GOOGLE_HOSTED",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "vc",
                        "cloud_destination_regions"
                      ],
                      "query": [
                        {
                          "key": "provider",
                          "value": "GOOGLE_HOSTED"
                        }
                      ]
                    },
                    "description": "Returns list of destination regions for Azure and Google Cloud.  \n\nCloud Provider must be specified in the URL as parameter:  \n* ?provider=AZURE_HOSTED\n* ?provider=GOOGLE_HOSTED"
                  },
                  "response": [
                    {
                      "id": "f8690805-44dc-44b7-bb30-55ea866cbd7d",
                      "name": "Get Cloud Destination Regions (Azure / GCP)",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": {
                          "raw": "{{url}}/sdp/ordering/v1/api/vc/cloud_destination_regions?provider=AZURE_HOSTED",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "sdp",
                            "ordering",
                            "v1",
                            "api",
                            "vc",
                            "cloud_destination_regions"
                          ],
                          "query": [
                            {
                              "key": "provider",
                              "value": "AZURE_HOSTED"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 03 May 2019 19:59:00 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "[\n    {\n        \"id\": 211,\n        \"name\": \"WDC\",\n        \"description\": \"Washington DC\",\n        \"alias\": null\n    },\n    {\n        \"id\": 205,\n        \"name\": \"SFO\",\n        \"description\": \"San Francisco / Silicon Valley\",\n        \"alias\": null\n    },\n    {\n        \"id\": 178,\n        \"name\": \"CHI\",\n        \"description\": \"Chicago\",\n        \"alias\": \"Central US (Iowa)\"\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "Generate New BGP Key",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fee03cb9-33af-4ff0-a458-30dbc6079688",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/vc/bgp_key",
                    "description": "Generates new random BGP key value for AWS Hosted connections.  \n\nYou can use your own BGP keys for AWS Hosted connections."
                  },
                  "response": [
                    {
                      "id": "3413b897-4d8f-48d8-8b3b-80be1652f541",
                      "name": "Generate New BGP Key",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": "{{url}}/sdp/ordering/v1/api/vc/bgp_key"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 03 May 2019 20:01:04 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"value\": \"G7X0cJ9pWkG3xpwrKxifTqvI\"\n}"
                    }
                  ]
                },
                {
                  "name": "Get virtualConnect Order Estimated Price",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b7579557-0d00-48aa-8e9d-92622499a0fa",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/vc/estimate_price?location=MIA1&locationZ=ATL1&speed=GIG_E_1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "vc",
                        "estimate_price"
                      ],
                      "query": [
                        {
                          "key": "location",
                          "value": "MIA1"
                        },
                        {
                          "key": "locationZ",
                          "value": "ATL1"
                        },
                        {
                          "key": "speed",
                          "value": "GIG_E_1"
                        }
                      ]
                    },
                    "description": "Returns estimated price for Monthly payments for virtual connect.  \n\nSupported parameters:  \n* ?location=MIA1&locationZ=ATL1&speed=GIG_E_1\n* ?location=MIA1&connectionToCloud=true&provider=AWS_HOSTED&speed=GIG_E_10"
                  },
                  "response": [
                    {
                      "id": "f85907b9-fb3d-4f96-b9f6-595696005627",
                      "name": "Get virtualConnect Order Estimated Price",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer {{ACCESS_TOKEN}}"
                          }
                        ],
                        "url": {
                          "raw": "{{url}}/sdp/ordering/v1/api/vc/estimate_price?location=MIA1&locationZ=ATL1&speed=GIG_E_1",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "sdp",
                            "ordering",
                            "v1",
                            "api",
                            "vc",
                            "estimate_price"
                          ],
                          "query": [
                            {
                              "key": "location",
                              "value": "MIA1"
                            },
                            {
                              "key": "locationZ",
                              "value": "ATL1"
                            },
                            {
                              "key": "speed",
                              "value": "GIG_E_1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Date",
                          "value": "Fri, 03 May 2019 20:05:56 GMT"
                        },
                        {
                          "key": "Connection",
                          "value": "close"
                        },
                        {
                          "key": "Server",
                          "value": "Jetty(9.2.14.v20151106)"
                        },
                        {
                          "key": "X-Frame-Options",
                          "value": "sameorigin"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\n    \"monthlyPrice\": 200,\n    \"setupCharge\": 500\n}"
                    }
                  ]
                },
                {
                  "name": "Get Available Speed Options for Specific Location",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9faf82ab-6c96-4c3e-85cb-f599a1494936",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/ordering/v1/api/vc/supported_ep_speeds?clientId=123&locationId=3289814",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "ordering",
                        "v1",
                        "api",
                        "vc",
                        "supported_ep_speeds"
                      ],
                      "query": [
                        {
                          "key": "clientId",
                          "value": "123"
                        },
                        {
                          "key": "locationId",
                          "value": "3289814"
                        }
                      ]
                    },
                    "description": "This method returns available speed values for specific Data Center. Location ID should be specified as URL parameter. Client ID for Client that you'd like to connect to must be specified as URL parameter."
                  },
                  "response": []
                },
                {
                  "name": "Create & Submit New virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4115e5d4-91af-4cd2-ac5f-76730b332d1a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "LETTER_OF_AUTHORIZATION'",
                          "type": "file",
                          "value": null
                        },
                        {
                          "key": "VC_ORDER",
                          "type": "file",
                          "value": null
                        }
                      ]
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/submit",
                    "description": "Creates a new 'Draft' VC order to one of your public Exchange ports and submits the order in one operation.  \n\nThis endpoint consumes multipart/form-data which consists of JSON part and attachment parts.  \n\nJSON part must be named 'VC_ORDER' and must have a content type of JSON.\n\nVC_ORDER example:    \n\n```{\n\"sideA\": {\n\"customerReferenceName\": \"test\",\n\"vlan\": 7,\n\"description\": \"Test Description\",\n\"epOrder\": {\n\"id\": 10675,\n\"location\": {\n\"id\": 3289737\n}\n}\n},\n\"connectionTo\": {\n\"id\": 1910\n},\n\"location\": {\n\"id\": 3289737\n}\n}```\n\nAttachment part must be named 'LETTER_OF_AUTHORIZATION' and must have content type of form-data>file.  \n\nFollowing document types are allowed:  \n* pdf\n* txt\n* doc, docx\n* xls, xlsx  \n* Maximum file size is 6 MB"
                  },
                  "response": []
                },
                {
                  "name": "Submit Existing virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2f667afb-e104-4971-891a-334c5040a86d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/{VC order id}/submit",
                    "description": "This method allows to submit existing VC order.\nVC order id must be specified in URL."
                  },
                  "response": []
                },
                {
                  "name": "Update Existing virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5faec3f1-de10-49bb-87a1-028baa030722",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"id\": 13429,\r\n  \"connectionType\": \"CLOUD\",\r\n  \"location\": {\r\n    \"id\": 3289815\r\n  },\r\n  \"sideA\": {\r\n    \"customerReferenceName\": \"Test Customer reference Name\",\r\n    \"vlan\": 56,\r\n    \"description\": \"Description for VC Type-4 'Cloud' connection order to AWS Hosted cloud provider\",\r\n    \"epOrder\": {\r\n      \"id\": 12262,\r\n      \"location\": {\r\n        \"id\": 3289815\r\n      }\r\n    }\r\n  },\r\n  \"cloudConnect\": true,\r\n  \"cloudDetails\": {\r\n    \"cloudServiceProvider\": \"AWS_HOSTED\",\r\n    \"publicConnection\": true,\r\n    \"destinationRegion\": {\r\n      \"region\": \"us-east-1\",\r\n      \"description\": \"US East 1 (North Virginia)\"\r\n    },\r\n    \"awsAccountId\": \"Amazon Account ID\",\r\n    \"asn\": 64513,\r\n    \"bgpKey\": \"yVPDRoYVMMRMWnXscO7P0BL3\",\r\n    \"customerRouterIP\": \"10.10.21.13/21\",\r\n    \"amazonRouterIP\": \"10.10.21.14/21\",\r\n    \"prefixesToAdvertise\": \"10.10.21.0/24,65.65.65.0/24\"\r\n  },\r\n  \"speed\": \"GIG_E_1\",\r\n  \"attachedFiles\": []\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/{VC order id}",
                    "description": "This API allows to update existing 'Draft' VC order. VC order ID must be specified in URL.\n\nIf you are willing to update VC order details but not update attachment for the order - you can set request body format to JSON, post full VC order detials and current attachment documents must be listed as \"attachedFiles\": [] array.\n\nIf you are willing to update order details AND update list of attachmed documents - requst body part should be set to multipart/form-data which consists of JSON part and attachment parts.\nJSON part has name 'VC_ORDER'\nAttachment part names: 'LETTER_OF_AUTHORIZATION'\nFollowing document types are allowed:\npdf, txt, doc, docx, xlsx, xls.\nMaximum file size is 6 MB"
                  },
                  "response": []
                },
                {
                  "name": "Create New virtualConnect Cloud Order to GCP (no attachment)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "41bf6e32-4e93-4ba5-8b77-03cb399f077b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"connectionType\":\"CLOUD\",\"location\":{\"id\":3289815},\"sideA\":{\"customerReferenceName\":\"Test Customer reference Name\",\"vlan\":67,\"epOrder\":{\"id\":12262,\"location\":{\"id\":3289815}}},\"cloudConnect\":true,\"cloudDetails\":{\"cloudServiceProvider\":\"GOOGLE_HOSTED\",\"destinationRegion\":{\"id\":178,\"name\":\"CHI\",\"description\":\"Chicago\"},\"gcpVlanAttachmentName\":\"attachment Name\",\"pairingKey\":\"37dbb53f-db95-41cc-90cb-1f3496337e56/us-central1/1\"},\"speed\":\"GIG_E_1\"}\r\n"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders",
                    "description": "This API allows to create new 'Draft' VC 'Cloud' - GCP order from one of your Switchboard port orders (with no attachment).\n"
                  },
                  "response": []
                },
                {
                  "name": "Create New virtualConnect Cloud Order to Azure  (no attachment)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "47841242-ee13-427d-a0fa-fc20495d0fb8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"connectionType\":\"CLOUD\",\"location\":{\"id\":3289815},\"sideA\":{\"customerReferenceName\":\"Test Customer reference Name\",\"vlan\":67,\"description\":\"Description for VC Type-4 'Cloud' Azure Hosted connection\",\"epOrder\":{\"id\":12262,\"location\":{\"id\":3289815}}},\"cloudConnect\":true,\"cloudDetails\":{\"cloudServiceProvider\":\"AZURE_HOSTED\",\"azureServiceKey\":\"Azure Service Key\",\"destinationRegion\":{\"id\":178,\"name\":\"CHI\",\"description\":\"Chicago\"},\"microsoftPeering\":true,\"privatePeering\":true,\"microsoftPeeringVlan\":68},\"speed\":\"GIG_E_1\"}\r\n"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders",
                    "description": "This API allows to create new 'Draft' VC 'Cloud' - Azure Hosted order from one of your Switchboard port orders (with no attachment).\n"
                  },
                  "response": []
                },
                {
                  "name": "Create New virtualConnect Cloud Order to AWS (no attachment)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "56e7080d-a026-4ec1-9bcd-2b7c0a3698cc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"connectionType\":\"CLOUD\",\"location\":{\"id\":3289815},\"sideA\":{\"customerReferenceName\":\"Test Customer reference Name\",\"vlan\":56,\"description\":\"Description for VC Type-4 'Cloud' connection order to AWS Hosted cloud provider\",\"epOrder\":{\"id\":12262,\"location\":{\"id\":3289815}}},\"cloudConnect\":true,\"cloudDetails\":{\"cloudServiceProvider\":\"AWS_HOSTED\",\"publicConnection\":false,\"destinationRegion\":{\"region\":\"us-east-1\",\"description\":\"US East 1 (North Virginia)\"},\"awsAccountId\":\"Amazon Account ID\",\"asn\":64513,\"bgpKey\":\"yVPDRoYVMMRMWnXscO7P0BL3\"},\"speed\":\"GIG_E_1\"}\r\n"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders",
                    "description": "This API allows to create new 'Draft' VC 'Cloud' - AWS Hosted order from one of your Switchboard port orders (with no attachment).\nFor 'public' connections additional parameters must be specified:\n \"customerRouterIP\": \"10.10.21.13/21\",\n \"amazonRouterIP\": \"10.10.21.14/21\",\n \"prefixesToAdvertise\": \"10.10.21.0/24,65.65.65.0/24\""
                  },
                  "response": []
                },
                {
                  "name": "Create New virtualConnect Long Haul Order (no attachment)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d3d1ca80-84ec-4b5f-b32e-7b4283660037",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"connectionType\":\"LONG_HAUL\",\"location\":{\"id\":3289815},\"sideA\":{\"customerReferenceName\":\"Test Customer reference Name\",\"vlan\":57,\"description\":\"Description for VC Order Type-3 'Long Haul'\",\"epOrder\":{\"id\":12262,\"location\":{\"id\":3289815}}},\"cloudConnect\":false,\"connectionTo\":{\"id\":1910},\"locationZ\":{\"id\":3289814},\"speed\":\"GIG_E_10\"}\r\n"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders",
                    "description": "This API allows to create new 'Draft' VC 'Long Haul' order from one of your Switchboard port orders (with no attachment).\n"
                  },
                  "response": []
                },
                {
                  "name": "Create New virtualConnect Metro Order (no attachment)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ad38da92-264c-4825-abae-efffcebc1a93",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"connectionType\": \"METRO\",\r\n  \"location\": {\r\n    \"id\": 3289814\r\n  },\r\n  \"sideA\": {\r\n    \"customerReferenceName\": \"Test Customer reference Name\",\r\n    \"vlan\": 56,\r\n    \"description\": \"Description for VC Type-3 'Metro' connection\",\r\n    \"epOrder\": {\r\n      \"id\": 10692,\r\n      \"location\": {\r\n        \"id\": 3289814\r\n      }\r\n    }\r\n  },\r\n  \"cloudConnect\": false,\r\n  \"connectionTo\": {\r\n    \"id\": 1910\r\n  },\r\n  \"locationZ\": {\r\n    \"id\": 3289907\r\n  },\r\n  \"speed\": \"GIG_E_10\",\r\n  \"sideZ\": {\r\n    \"vlan\": 67,\r\n    \"epOrder\": {\r\n      \"id\": 11967\r\n    }\r\n  }\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders",
                    "description": "This API allows to create new 'Draft' VC 'Local' order from one of your Switchboard port orders (with no attachment).\nPlease note you can specify Swithcboard ports of your Company as Z-side:\n \"sideZ\": {\n    \"vlan\": 67,\n    \"epOrder\": {\n      \"id\": 11967\n    }\nIn this case sideA.vlan must be specified as well.\nIn case connection to other Client (from the list of available Clients) is expected, specify Z-side as client id:\n  \"locationZ\": {\n    \"id\": 3289907\n  },\n"
                  },
                  "response": []
                },
                {
                  "name": "Create New virtualConnect Local Order (no attachment)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7bd2c417-d3cb-4333-aaf5-6faf795bd8f4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"connectionType\":\"LOCAL\",\"location\":{\"id\":3289737},\"sideA\":{\"customerReferenceName\":\"Test Customer reference Name\",\"vlan\":46,\"description\":\"Test Description for Type-1 Local VC order\",\"epOrder\":{\"id\":10398,\"location\":{\"id\":3289737}}},\"cloudConnect\":false,\"connectionTo\":{\"id\":1645},\"locationZ\":{\"id\":3289737},\"speed\":\"GIG_E_1\"}\r\n"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders",
                    "description": "This API allows to create new 'Draft' VC 'Local' order from one of your Switchboard port orders (with no attachment).\n"
                  },
                  "response": []
                },
                {
                  "name": "Create New virtualConnect Local Order (with attachment)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "07cabfd1-08c6-4402-a9e6-0f95a0c4655d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "LETTER_OF_AUTHORIZATION",
                          "type": "file",
                          "value": null
                        },
                        {
                          "key": "VC_ORDER",
                          "type": "file",
                          "value": null
                        }
                      ]
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders",
                    "description": "This API allows to create new 'Draft' VC 'Local' order from one of your Switchboard port orders.\n\nPlease note that this endpoint consumes multipart/form-data which consists of JSON part and attachment parts.\n\nJSON part has name 'VC_ORDER'\nJSON part example:\n\n{\"connectionType\":\"LOCAL\",\"location\":{\"id\":3289737},\"sideA\":{\"customerReferenceName\":\"Test Customer reference Name\",\"vlan\":46,\"description\":\"Test Description for Type-1 Local VC order\",\"epOrder\":{\"id\":10398,\"location\":{\"id\":3289737}}},\"cloudConnect\":false,\"connectionTo\":{\"id\":1645},\"locationZ\":{\"id\":3289737},\"speed\":\"GIG_E_1\"}\n\nAttachment part names: 'LETTER_OF_AUTHORIZATION'\nFollowing document types are allowed:\npdf, txt, doc, docx, xlsx, xls.\nMaximum file size is 6 MB"
                  },
                  "response": []
                },
                {
                  "name": "Reconfigure VLAN for virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "01741982-921b-4a1b-b2cb-52315655e303",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n\"cVlanSideA\":123,\r\n\"cVlanSideZ\":null,\r\n\"privatePeeringVlan\": null,\r\n\"microsoftPeeringVlan\":null\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/{VC order id}/update_cvlan",
                    "description": "This API request initiates VLAN reconfiguration for already installed Virtual Connects (with Active/Fulfilled) status.\nVC order ID must be specified as URL parameter.\nVLAN values must be specified as request body."
                  },
                  "response": []
                },
                {
                  "name": "Validate Azure Service Key",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f03de2a0-2d39-48f8-8c71-e3d028ffa7ae",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/azure_service_key/{key}/validate",
                    "description": "If you're willing to validate Azure Service Key - this API would return service key status. \nNote: in case Azure key specified for you VC Type-4 'Cloud' connection to Azure Hosted is not valid, SDP would not be able to confire virtual connection."
                  },
                  "response": []
                },
                {
                  "name": "Approve Incoming virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9e14f731-73da-410e-92a5-b325536e0bab",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/x-www-form-urlencoded",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "LETTER_OF_AUTHORIZATION'",
                          "type": "file",
                          "value": null
                        },
                        {
                          "key": "VC_ORDER",
                          "value": "",
                          "type": "text"
                        }
                      ]
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/approve",
                    "description": "This API allows to approve incoming VC order to one of your public Exchange ports.\n\nPlease note that this endpoint consumes multipart/form-data which consists of JSON part and attachment parts.\n\nJSON part has name 'VC_ORDER'\nJSON part example:\n\n{\n\"vcOrder\": {\n\"id\": 1651,\n\"connectionTo\": {\n\"id\": 1440\n}\n},\n\"sideZ\": {\n\"customerReferenceName\": \"test-1\",\n\"vlan\": 8,\n\"description\": \"Description description.\",\n\"vpOrder\": {\n\"id\": 1697\n}\n}\n\n\nAttachment part names: 'LETTER_OF_AUTHORIZATION'\nFollowing document types are allowed:\npdf, txt, doc, docx, xlsx, xls.\nMaximum file size is 6 MB"
                  },
                  "response": []
                },
                {
                  "name": "Cancel virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3207b472-4f96-4354-9b50-d52faeb32ec8",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b6e9ed9d-b64d-45ef-9421-bbd6319c1e68",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\"id\":10528,\n\"comment\":\"Cancelled VC as part of acceptance process\"\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/cancel",
                    "description": "Virtual Connect Order that was submitted and not approved by Z-side Customer could be cancelled by executing this API request.\n\nOrder ID and cancellation reason must be provided as request body."
                  },
                  "response": []
                },
                {
                  "name": "Reject Incoming virtualConnect Order",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "33336b28-5b85-4fe9-a9ee-e42438bebf47",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "973b7b3a-fe7f-4bd7-92fb-7ef6db4c097b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\"id\": 1651,\n\"comment\": \"Reject description.\"\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/reject",
                    "description": "This method allows to reject incoming VC order, VC order id and rejection reason must be provided as request body."
                  },
                  "response": []
                },
                {
                  "name": "Delete Draft virtualConnect Order",
                  "_postman_id": "cdf8c451-8c63-45a1-b483-82fc9e1454c9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"id\": 13381,\r\n  \"location\": {\r\n    \"id\": 3289814,\r\n    \"name\": \"ATL1\",\r\n    \"city\": \"Atlanta\",\r\n    \"state\": \"GA\"\r\n  },\r\n  \"salesforceContract\": {\r\n    \"salesForceContractId\": \"8003B000000O2PDQA0\",\r\n    \"number\": \"00007885\",\r\n    \"gpNumber\": \"GPIrinaContractATL1\",\r\n    \"location\": \"ATL1\",\r\n    \"startDate\": \"11-09-2018\",\r\n    \"endDate\": \"11-09-2019\"\r\n  },\r\n  \"expeditedOrder\": true,\r\n  \"description\": \"Description_updated\",\r\n  \"customerReferenceName\": \"Customer Refence Name_updated\",\r\n  \"physicalPort\": {\r\n    \"exchangePortTypeId\": \"GIG_E_1\",\r\n    \"exchangePortTypeDescription\": \"1 Gig-E\",\r\n    \"cableTypeId\": \"SMF\",\r\n    \"cableTypeDescription\": \"SMF\",\r\n    \"exchangeVisibility\": true,\r\n    \"customerSide\": {\r\n      \"connectorTypeId\": \"LC\",\r\n      \"rackId\": \"84b0b8596fe215400247af512e3ee47c\",\r\n      \"rackName\": \"ENC-MIA1-DC1-1-POD2-208-05-Rack QVI03\",\r\n      \"endpointType\": \"PATCH_PANEL\",\r\n      \"patchPanel\": \"PP name\",\r\n      \"port\": \"Port\",\r\n      \"comment\": \"Comments\",\r\n      \"destinationType\": \"CONNECT_TO_MY_CAGE\",\r\n      \"panelShelf\": \"Panel/Shelf\",\r\n      \"portBlock\": \"Port/Block\"\r\n    }\r\n  }\r\n}"
                    },
                    "url": "{{url}}/sdp/ordering/v1/api/vc/orders/5"
                  },
                  "response": []
                }
              ],
              "_postman_id": "16d1f7b4-51e5-4e74-b658-e3cebbf5cc06",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "5c22273b-b703-4865-8680-e09af29c7da6",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8c5fb56f-cbe7-46f1-b97e-150fe1876fe4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d05a3b9c-8d2e-4d14-ae1b-9fd7df7d7762",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Remote Hands",
          "item": [
            {
              "name": "Get List of Subsriptions",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63d1e8f2-3099-4cad-a912-3ffd62c5d469",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "0ace3cf1-6a1e-4988-8630-fc9f9530bbef",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}",
                    "type": "text"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions",
                "description": "Returns full list of Remote Hands Subscriptions for your environment(s).\n\nFilters supported:\n* month - optional parameter, YYYY-MM format is expected. Limits results to only those subscriptions that were active during selected month.\n* location - optional parameter, data center code is expected, limits results to subscriptions related to specified data center only.\n\nSearch filters must be specified once, separated by &, search parameters specified after ?\n\nExample: GET /sdp/ordering/v1/api/rhe/subscriptions/{subscription ID} - returns information about specific Remote Hands subscription."
              },
              "response": [
                {
                  "id": "087b94c3-3e97-48eb-b036-42f9b37165f8",
                  "name": "Get list of Subsriptions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 26 Mar 2019 13:26:48 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 20,\n        \"totalCount\": 1,\n        \"totalPages\": 1,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 206,\n            \"number\": \"Order_RHE_000000072\",\n            \"created\": \"2018-10-31T15:30:53.273 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"requestSNLink\": \"https://qtsqa.service-now.com/ess_portal/main_content.do?sysparm_content_url=com.glideapp.servicecatalog_cat_item_view.do?sysparm_id=fdb550526f709d40db4ffee09d3ee46d&sysparm_link_parent=04fa96766f741180db4ffee09d3ee439&glide_sso_id=343ad6f91376fe00f84cdbf18144b0ec&sysparm_location_name=CHI1&sysparm_customer_environment_name=qts-sales-sam-training\",\n            \"environment\": \"qts-sales-sam-training\",\n            \"company\": \"QTS Product Training Company\",\n            \"timeRequested\": 18000,\n            \"timeSpent\": 0,\n            \"timeAvailable\": 18000,\n            \"requests\": [],\n            \"estimatedMrr\": 500,\n            \"active\": true,\n            \"status\": {\n                \"value\": \"FULFILLED\",\n                \"label\": \"Fulfilled\"\n            }\n        }\n    ]\n}"
                },
                {
                  "id": "7afac685-ddd9-4176-9fda-c5a8a3690f4d",
                  "name": "Get list of Subsriptions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions/206"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 26 Mar 2019 13:27:36 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"id\": 206,\n    \"number\": \"Order_RHE_000000072\",\n    \"created\": \"2018-10-31T15:30:53.273 +0000\",\n    \"location\": {\n        \"id\": 66483,\n        \"name\": \"CHI1\",\n        \"city\": \"Chicago\",\n        \"state\": \"IL\"\n    },\n    \"createdByEmployee\": false,\n    \"description\": \"\",\n    \"contactPerson\": {\n        \"id\": 115,\n        \"name\": \"Portal Demo-CSF\",\n        \"phone\": \"(703) 201-1964\"\n    },\n    \"endDate\": \"04-30-2019\",\n    \"environment\": \"qts-sales-sam-training\",\n    \"orderProduct\": {\n        \"product\": {\n            \"id\": 31,\n            \"location\": \"CHI1\",\n            \"price\": 100\n        },\n        \"quantity\": 5,\n        \"name\": \"RH w-Monthly Commit MRC\",\n        \"totalNrr\": 0,\n        \"totalMrr\": 500\n    },\n    \"salesforceContract\": {\n        \"salesForceContractId\": \"800f2000001fnVdAAI\",\n        \"number\": \"00007127\",\n        \"gpNumber\": \"Test.12346.Test\",\n        \"location\": \"CHI1\",\n        \"startDate\": \"05-01-2018\",\n        \"endDate\": \"04-30-2019\"\n    },\n    \"salesforceOpportunityId\": \"00629000002vervAAA\",\n    \"salesforceQuoteId\": \"a3z29000000CoDdAAK\",\n    \"estimatedMrr\": 500,\n    \"mrrRate\": 100,\n    \"status\": {\n        \"value\": \"FULFILLED\",\n        \"label\": \"Fulfilled\"\n    }\n}"
                }
              ]
            },
            {
              "name": "Get List of One Time Requests",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63d1e8f2-3099-4cad-a912-3ffd62c5d469",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "390e46d8-0fb6-4788-8691-5d48631f28e2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}",
                    "type": "text"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions",
                "description": "Returns list of One-Time Remote Hands requests that are not related to any of 'Fulfilled' Remote Hands subscription.\n\nFilters supported:\n* month - optional paarameter, YYYY-MM format is expected. Limits results set to only those requests that have time spent during selected month.\n* location - optional parameter, data center code is expected, limits results to requests related to specified data center only.\n\nSearch filters must be specified once, separated by &, search parameters specified after ?"
              },
              "response": [
                {
                  "id": "06f2d210-d3f6-42cb-97a5-d6e32bb4e97a",
                  "name": "Get list of One Time Requests",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 26 Mar 2019 13:33:31 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"pageInfo\": {\n        \"pageSize\": 20,\n        \"totalCount\": 1,\n        \"totalPages\": 1,\n        \"pageNumber\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 206,\n            \"number\": \"Order_RHE_000000072\",\n            \"created\": \"2018-10-31T15:30:53.273 +0000\",\n            \"location\": {\n                \"id\": 66483,\n                \"name\": \"CHI1\",\n                \"city\": \"Chicago\",\n                \"state\": \"IL\"\n            },\n            \"createdByEmployee\": false,\n            \"requestSNLink\": \"https://qtsqa.service-now.com/ess_portal/main_content.do?sysparm_content_url=com.glideapp.servicecatalog_cat_item_view.do?sysparm_id=fdb550526f709d40db4ffee09d3ee46d&sysparm_link_parent=04fa96766f741180db4ffee09d3ee439&glide_sso_id=343ad6f91376fe00f84cdbf18144b0ec&sysparm_location_name=CHI1&sysparm_customer_environment_name=qts-sales-sam-training\",\n            \"environment\": \"qts-sales-sam-training\",\n            \"company\": \"QTS Product Training Company\",\n            \"timeRequested\": 18000,\n            \"timeSpent\": 0,\n            \"timeAvailable\": 18000,\n            \"requests\": [],\n            \"estimatedMrr\": 500,\n            \"active\": true,\n            \"status\": {\n                \"value\": \"FULFILLED\",\n                \"label\": \"Fulfilled\"\n            }\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get Remote Hands Products & Location-Specific Prices",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63d1e8f2-3099-4cad-a912-3ffd62c5d469",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "83238de2-ff55-4765-937c-6e57fa92619e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/ordering/v1/api/rhe/products",
                "description": "Returns available products for Remote Hands service and location-specific price per hour of the service."
              },
              "response": [
                {
                  "id": "eca69860-7c22-4261-b678-5ea1d1dfffcc",
                  "name": "Get Remote Hands products and Location-specific prices",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "type": "text",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/ordering/v1/api/rhe/products"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 26 Mar 2019 13:34:54 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "[\n    {\n        \"id\": 1,\n        \"name\": \"RH w-Monthly Commit MRC\",\n        \"prices\": [\n            {\n                \"id\": 19,\n                \"location\": \"RIC1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 16,\n                \"location\": \"DDC1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 20,\n                \"location\": \"DFW1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 32,\n                \"location\": \"PHX1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 5,\n                \"location\": \"ATL1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 35,\n                \"location\": \"SUW1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 11,\n                \"location\": \"EDC2\",\n                \"price\": 100\n            },\n            {\n                \"id\": 14,\n                \"location\": \"EDC4\",\n                \"price\": 100\n            },\n            {\n                \"id\": 23,\n                \"location\": \"IAD1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 30,\n                \"location\": \"ETR2\",\n                \"price\": 100\n            },\n            {\n                \"id\": 3,\n                \"location\": \"SJC1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 15,\n                \"location\": \"EDC5\",\n                \"price\": 100\n            },\n            {\n                \"id\": 12,\n                \"location\": \"EDC3\",\n                \"price\": 100\n            },\n            {\n                \"id\": 31,\n                \"location\": \"CHI1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 18,\n                \"location\": \"JCY1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 24,\n                \"location\": \"FTW1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 33,\n                \"location\": \"ELD5\",\n                \"price\": 100\n            },\n            {\n                \"id\": 21,\n                \"location\": \"SHD1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 10,\n                \"location\": \"EDC1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 4,\n                \"location\": \"ENY4\",\n                \"price\": 100\n            },\n            {\n                \"id\": 1,\n                \"location\": \"PNJ1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 29,\n                \"location\": \"ETR1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 8,\n                \"location\": \"MIA1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 26,\n                \"location\": \"ESV5\",\n                \"price\": 100\n            },\n            {\n                \"id\": 17,\n                \"location\": \"EDC6\",\n                \"price\": 100\n            },\n            {\n                \"id\": 27,\n                \"location\": \"PJC1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 2,\n                \"location\": \"EAM2\",\n                \"price\": 100\n            },\n            {\n                \"id\": 22,\n                \"location\": \"IAD2\",\n                \"price\": 100\n            },\n            {\n                \"id\": 25,\n                \"location\": \"ESV3\",\n                \"price\": 100\n            },\n            {\n                \"id\": 13,\n                \"location\": \"EDC10\",\n                \"price\": 100\n            },\n            {\n                \"id\": 7,\n                \"location\": \"EDC11\",\n                \"price\": 100\n            },\n            {\n                \"id\": 28,\n                \"location\": \"OVP1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 9,\n                \"location\": \"EHK2\",\n                \"price\": 100\n            },\n            {\n                \"id\": 34,\n                \"location\": \"SAC1\",\n                \"price\": 100\n            },\n            {\n                \"id\": 6,\n                \"location\": \"ESY3\",\n                \"price\": 100\n            }\n        ],\n        \"minCommitHours\": 5\n    }\n]"
                }
              ]
            },
            {
              "name": "Create New Draft Remote Hands Subcription",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63d1e8f2-3099-4cad-a912-3ffd62c5d469",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "98298a08-8069-4c77-ae53-86680d62a15f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"orderProduct\":{\n\t\t\"product\":{\n\t\t\t\"id\":25,\n\t\t\t\"location\":\"MIA1\",\n\t\t\t\"price\":100\n\t\t},\n\t\t\t\"quantity\":5\n\t},\n\t\t\t\"environment\":\"kim_demo_environment\",\n\t\t\t\"location\":{\n\t\t\t\t\"id\": 3289737, \n\t\t\t\t\"name\": \"MIA1\", \n\t\t\t\t\"city\": null, \n\t\t\t\t\"state\": null\n\t\t\t\t\n\t\t\t},\n\t\"description\":\"Comments for demonstration sunscription\",\n\t\"contactPerson\":{\n\t\t\"name\":\"Contact person Name here\",\n\t\t\"phone\":\"123456789\"\n\t},\n\t\"salesforceContract\": {\n       \t\"salesForceContractId\": null\n   \t}\n}\n\n"
                },
                "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions",
                "description": "Create new 'Draft' Remote Hands subcription.\nNewly created subcription details would be returned as response"
              },
              "response": []
            },
            {
              "name": "Submit Existing Draft Remote Hands Subscription",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63d1e8f2-3099-4cad-a912-3ffd62c5d469",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "bda69999-a081-4031-a426-1e57148a6c21",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": 13748,\n    \"number\": \"Order_RHE_000001638\",\n    \"created\": \"2019-03-21T13:42:53.004 +0000\",\n    \"location\": {\n        \"id\": 3289737,\n        \"name\": \"MIA1\",\n        \"city\": \"Miami\",\n        \"state\": \"FL\"\n    },\n    \"description\": \"Comments for demonstration sunscription\",\n    \"contactPerson\": {\n        \"id\": 10607,\n        \"name\": \"Contact person Name here\",\n        \"phone\": \"123456789\"\n    },\n    \"environment\": \"kim_demo_environment\",\n    \"orderProduct\": {\n        \"product\": {\n            \"id\": 25,\n            \"location\": \"MIA1\",\n            \"price\": 100\n        },\n        \"quantity\": 5\n    },\n    \"status\": {\n        \"value\": \"DRAFT\"\n    }\n}\n"
                },
                "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions/<subscription id>/submit",
                "description": "Updates existing 'Draft' Remote Hands subcription and submit it. Subscription ID must be specified in URL."
              },
              "response": []
            },
            {
              "name": "Update Draft Remote Hands Subscription",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "63d1e8f2-3099-4cad-a912-3ffd62c5d469",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "89da5f90-838b-4dc3-b21b-ba2fb194727a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": 13748,\n    \"number\": \"Order_RHE_000001638\",\n    \"created\": \"2019-03-21T13:42:53.004 +0000\",\n    \"location\": {\n        \"id\": 3289737,\n        \"name\": \"MIA1\",\n        \"city\": \"Miami\",\n        \"state\": \"FL\"\n    },\n    \"description\": \"Comments for demonstration sunscription\",\n    \"contactPerson\": {\n        \"id\": 10607,\n        \"name\": \"Contact person Name here\",\n        \"phone\": \"123456789\"\n    },\n    \"environment\": \"kim_demo_environment\",\n    \"orderProduct\": {\n        \"product\": {\n            \"id\": 25,\n            \"location\": \"MIA1\",\n            \"price\": 100\n        },\n        \"quantity\": 5\n    },\n    \"status\": {\n        \"value\": \"DRAFT\"\n    }\n}"
                },
                "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions/<subscription id>",
                "description": "Updates existing 'Draft' Remote Hands subcription. Subscription ID must be specified in URL."
              },
              "response": []
            },
            {
              "name": "Delete Remote Hands subcription",
              "_postman_id": "bf93fc16-9d83-436e-a218-b290336ac4e0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{url}}/sdp/ordering/v1/api/rhe/subscriptions/{subscription_id}",
                "description": "Delete 'Draft' Remote Hands subscirption with 'Draft' status."
              },
              "response": []
            }
          ],
          "_postman_id": "f3aeb9f0-6521-4813-8cae-165f7ed95191",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d5cf08b4-ff56-4b21-a662-c4f39d521e19",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d6044ab1-66f7-4b22-86d8-3c4b52b0eaf7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "ebd21dd4-6a04-40d4-bbb6-7761ca146087",
      "description": "This folder contains APIs for the following ordering functions:  \n* crossConnect\n* Switchboard\n\t* Swtichboard Port Order\n\t* Switchboard Virtual Connect Order\n* Remote Hands\n\n",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "9ec0b3cd-0e52-48b3-9e8c-32503804ed73",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "b84e276b-e4ff-41ba-b1be-692d2910728f",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Badging",
          "item": [
            {
              "name": "Badge Holder Summary Report",
              "_postman_id": "d4a7ebc6-73c3-461c-ab72-0f3b6e3861c3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/badge_summary?startDate=2019-01-01&location=DFW1&cardIssueDate=2018-08-03&cardStatus=Active",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "badge_summary"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2019-01-01"
                    },
                    {
                      "key": "location",
                      "value": "DFW1"
                    },
                    {
                      "key": "cardIssueDate",
                      "value": "2018-08-03"
                    },
                    {
                      "key": "cardStatus",
                      "value": "Active"
                    }
                  ]
                },
                "description": "Badge Holder Summary report provides information about Badge Holders of your Company in JSON format.  \n\nFilters supported:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (optional, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* cardStatus (optional, exact macth by Card Status)\n* cardNumber (optional, contains characted search by card number values)\n* cardIssueDate (optional, format: YYYY-MM-DD, returns records that have that date as card Issue date)\n* cardExpireDate (optional, format: YYYY-MM-DD, returns records that have that date as card Expire date)\n* badgeType (optional, exact match by Badge Type)\n* bagdeHolderName (optional, case insenstive, contains character search thourgh Badge Holders First Name, Last Name)  \n\nSearch filters must be specified once, separated by &, search parameters specified after ?"
              },
              "response": []
            },
            {
              "name": "Badge Holder Summary Report (Excel format)",
              "_postman_id": "10f0930c-59c3-4a8f-90e3-405ecd2c5b4c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/badge_summary/xlsx?startDate=2018-01-01",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "badge_summary",
                    "xlsx"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2018-01-01"
                    }
                  ]
                },
                "description": "Badge Holder Summary report provides information about Badge Holders of your Company in excel format.  \n\nFilters supported:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (optional, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* cardStatus (optional, exact macth by Card Status)\n* cardNumber (optional, contains characted search by card number values)\n* cardIssueDate (optional, format: YYYY-MM-DD, returns records that have that date as card Issue date)\n* cardExpireDate (optional, format: YYYY-MM-DD, returns records that have that date as card Expire date)\n* badgeType (optional, exact match by Badge Type)\n* bagdeHolderName (optional, case insenstive, contains character search thourgh Badge Holders First Name, Last Name)  \n\nSearch filters must be specified once, separated by &, search parameters specified after ?"
              },
              "response": []
            },
            {
              "name": "Badge Holder Summary Report (csv format)",
              "_postman_id": "772646e1-8196-41aa-9bf6-d008a1ae498a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/badge_summary/csv?startDate=2018-01-01&cardStatus=Active",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "badge_summary",
                    "csv"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2018-01-01"
                    },
                    {
                      "key": "cardStatus",
                      "value": "Active"
                    }
                  ]
                },
                "description": "Badge Holder Summary report provides information about Badge Holders of your Company in csv format.  \n\nFilters supported:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (optional, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* cardStatus (optional, exact macth by Card Status)\n* cardNumber (optional, contains characted search by card number values)\n* cardIssueDate (optional, format: YYYY-MM-DD, returns records that have that date as card Issue date)\n* cardExpireDate (optional, format: YYYY-MM-DD, returns records that have that date as card Expire date)\n* badgeType (optional, exact match by Badge Type)\n* bagdeHolderName (optional, case insenstive, contains character search thourgh Badge Holders First Name, Last Name)  \n\nSearch filters must be specified once, separated by &, search parameters specified after ?"
              },
              "response": []
            },
            {
              "name": "Event Log Report",
              "_postman_id": "97404137-2ccf-4001-b3a3-10ede33893d3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/event_log?startDate=2019-01-01&location=DFW1&cardIssueDate=2018-08-03&cardStatus=Active",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "event_log"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2019-01-01"
                    },
                    {
                      "key": "location",
                      "value": "DFW1"
                    },
                    {
                      "key": "cardIssueDate",
                      "value": "2018-08-03"
                    },
                    {
                      "key": "cardStatus",
                      "value": "Active"
                    }
                  ]
                },
                "description": "Event Log report contains records of badges/cards usage for Badge Holders of your Company in JSON format.  \n\nFilters supported:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (optional, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* cardStatus (optional, exact macth by Card Status)\n* cardNumber (optional, contains characted search by card number values)\n* cardIssueDate (optional, format: YYYY-MM-DD, returns records that have that date as card Issue date)\n* cardExpireDate (optional, format: YYYY-MM-DD, returns records that have that date as card Expire date)\n* bagdeHolderName (optional, case insenstive, contains character search thourgh Badge Holders First Name, Last Name)\n* logDeviceDescription (optional, case insensitive, contains character search thourgh LOGDEVICE_DESCRIPTION data)\n* Detail (optional, case insensitive, contains character search thourgh EVENT_DEVICE_DESCRIPTION data)\n\nReport contents:  \n* data related to your company only\n* records that have event date, time more (or equal) to report start date, time AND less (or equal) to report end date, time\n* records that match all other filters applied  \n\nSearch filters must be specified once, separated by &, search parameters specified after ?"
              },
              "response": []
            },
            {
              "name": "Event Log Report (Excel format)",
              "_postman_id": "9c83cb00-953c-42ae-ab3c-497f5f4265b8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/event_log/xlsx?startDate=2018-12-21",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "event_log",
                    "xlsx"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2018-12-21"
                    }
                  ]
                },
                "description": "Event Log report contains records of badges/cards usage for Badge Holders of your Company in excel format.\n\nFilters supported:\n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (optional, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* cardStatus (optional, exact macth by Card Status)\n* cardNumber (optional, contains characted search by card number values)\n* cardIssueDate (optional, format: YYYY-MM-DD, returns records that have that date as card Issue date)\n* cardExpireDate (optional, format: YYYY-MM-DD, returns records that have that date as card Expire date)\n* bagdeHolderName (optional, case insenstive, contains character search thourgh Badge Holders First Name, Last Name)\n* logDeviceDescription (optional, case insensitive, contains character search thourgh LOGDEVICE_DESCRIPTION data)\n* Detail (optional, case insensitive, contains character search thourgh EVENT_DEVICE_DESCRIPTION data)  \n\nReport contents:\n* data related to your company only\n* records that have event date, time more (or equal) to report start date, time AND less (or equal) to report end date, time\n* records that match all other filters applied  \n\nSearch filters must be specified once, separated by &, search parameters specified after ?"
              },
              "response": []
            },
            {
              "name": "Event Log Report (csv format)",
              "_postman_id": "c52d2bfd-31be-4dbe-af7d-9f6cb3e94a1f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/event_log/csv?startDate=2018-12-21",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "event_log",
                    "csv"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2018-12-21"
                    }
                  ]
                },
                "description": "Event Log report contains records of badges/cards usage for Badge Holders of your Company in csv format.  \n\nFilters supported:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (optional, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* cardStatus (optional, exact macth by Card Status)\n* cardNumber (optional, contains characted search by card number values)\n* cardIssueDate (optional, format: YYYY-MM-DD, returns records that have that date as card Issue date)\n* cardExpireDate (optional, format: YYYY-MM-DD, returns records that have that date as card Expire date)\n* bagdeHolderName (optional, case insenstive, contains character search thourgh Badge Holders First Name, Last Name)\n* logDeviceDescription (optional, case insensitive, contains character search thourgh LOGDEVICE_DESCRIPTION data)\n* Detail (optional, case insensitive, contains character search thourgh EVENT_DEVICE_DESCRIPTION data)\n\nReport for Customer Users contains data that corresponds to criteria below:\n* data related to Customer Company only\n* records that have event date, time more (or equal) to report start date, time AND less (or equal) to report end date, time\n* records that match all other filters applied  \n\nSearch filters must be specified once, separated by &, search parameters specified after ?"
              },
              "response": []
            },
            {
              "name": "Visitor Access Log Report",
              "_postman_id": "a101b200-fd7f-499f-bea2-3fedd8e7da4a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/visitors_access_logs?startDate=2019-01-01",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "visitors_access_logs"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2019-01-01"
                    }
                  ]
                },
                "description": "Visitor Access Log Report lists visitors who accessed QTS locations during specified period of time.\n\nFilters supported:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (required, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* visitorName (optional, case insensitive 'contains' character search by Visitor First Name, Visitor Last Name)\n* visitorCompany (optional, case insensitive 'contains' character search by Visitor Company)  \n\nEntry time and Exit time are limited by filters applied:  \n* entryDateTime not after EndDate AND exitDateTime not before StartDate\n* exitDateTime may be blank"
              },
              "response": []
            },
            {
              "name": "Visitor Access Log Report (Excel format)",
              "_postman_id": "5b2d3d9b-4b54-4efa-94cb-e917d30f7c07",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/visitors_access_logs/xlsx?startDate=2019-01-01",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "visitors_access_logs",
                    "xlsx"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2019-01-01"
                    }
                  ]
                },
                "description": "Visitor Access Log Report lists visitors who accessed QTS locations during specified period of time in excel format.  \n\nFilters supported:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (required, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* visitorName (optional, case insensitive 'contains' character search by Visitor First Name, Visitor Last Name)\n* visitorCompany (optional, case insensitive 'contains' character search by Visitor Company)  \n\nEntry time and Exit time are limited by filters applied:  \n* entryDateTime not after EndDate AND exitDateTime not before StartDate\n* exitDateTime may be blank"
              },
              "response": []
            },
            {
              "name": "Visitor Access Log Report (csv format)",
              "_postman_id": "39fc2f2c-78b9-46e5-bdd5-4af02ba97ee8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/reports/v1/visitors_access_logs/csv?startDate=2019-01-01",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "reports",
                    "v1",
                    "visitors_access_logs",
                    "csv"
                  ],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2019-01-01"
                    }
                  ]
                },
                "description": "Visitor Access Log Report lists visitors who accessed QTS locations during specified period of time in csv format.  \n\nFilters will be available for the Roster Admin to specify criteria to generate reports:  \n* location (optional, data center can be specified once, if not specified - report generated for all Data Centers that are assigned to permitted Environments of the current user)\n* startDate (required, format: YYYY-MM-DD)\n* endDate (optional, current date by default, format: YYYY-MM-DD)\n* startTime (optional, format: HH:MM)\n* endTime (optional, 23:59 by default, format: HH:MM)\n* visitorName (optional, case insensitive 'contains' character search by Visitor First Name, Visitor Last Name)\n* visitorCompany (optional, case insensitive 'contains' character search by Visitor Company)\n\nEntry time and Exit time are limited by filters applied:  \n* entryDateTime not after EndDate AND exitDateTime not before StartDate\n* exitDateTime may be blank"
              },
              "response": []
            }
          ],
          "_postman_id": "bd6e419f-ab95-4315-910e-9ee0d0c2b874",
          "_postman_isSubFolder": true
        },
        {
          "name": "Roster",
          "item": [
            {
              "name": "Get List of Environments",
              "_postman_id": "bc9eb072-2b2d-420c-8a47-60ddc2a77f55",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/api/roster/v1/users/environments/attributes",
                "description": "Lists permitted environments for API User account."
              },
              "response": [
                {
                  "id": "cfb60724-0e21-49cf-8823-b39a01c0a934",
                  "name": "Get list of Permitted Environments",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/api/roster/v1/users/environments/attributes"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 18 Mar 2019 19:05:12 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"totalCount\": 2,\n    \"pageNumber\": 1,\n    \"pageSize\": 20,\n    \"pageCount\": 2,\n    \"linkedEnvironments\": [\n        {\n            \"environmentId\": 975,\n            \"environmentName\": \"qts-sales-sam-comp\",\n            \"securityLevel\": \"Enterprise\",\n            \"environmentStatus\": \"Active\"\n        },\n        {\n            \"environmentId\": 926,\n            \"environmentName\": \"qts-sales-sam-training\",\n            \"securityLevel\": \"Enterprise\",\n            \"environmentStatus\": \"Active\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get List of Available User Roles",
              "_postman_id": "6f0d892b-e18d-441c-be09-264cf3215af7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/api/roster/v1/users/(username}/environment_roles",
                "description": "Lists roles available with specified environment.  The API Users must have Roster Admin role to run Roster APIs.  \n\nSupported filters:  \n* username - narrows results to list of Roles available to specific User based upon the environment of the specified user. Must be specified in the URL\n* environmentName - narrows the results to environemtn specified \n* roleName - narrows the results by Roles with specified name only\n\nIf Roster Admin role is not granted to API user, the below result error will be received:  \n{  \n    \"code\": \"FORBIDDEN\",  \n    \"message\": \"No privileges [ROSTER_VIEW_ALL] for user *API user*\"  \n}"
              },
              "response": [
                {
                  "id": "4b148f31-4353-4b4a-97ad-a80a318ceba3",
                  "name": "Get list of available user roles",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/api/roster/v1/users/{username}/environment_roles"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 18 Mar 2019 20:15:37 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"totalCount\": 23,\n    \"pageNumber\": 1,\n    \"pageSize\": 20,\n    \"pageCount\": 20,\n    \"associatedRoles\": [\n        {\n            \"roleName\": \"Beaty Test\",\n            \"roleDescription\": \"Testing for new role creation\"\n        },\n        {\n            \"roleName\": \"Business Analyst\"\n        },\n        {\n            \"roleName\": \"Calendar View\"\n        },\n        {\n            \"roleName\": \"Compliance Documents\"\n        },\n        {\n            \"roleName\": \"Equipment Admin\"\n        },\n        {\n            \"roleName\": \"Equipment User\"\n        },\n        {\n            \"roleName\": \"Hybrid Cloud Analyst\",\n            \"roleDescription\": \"Provides access to Cloudcheckr\"\n        },\n        {\n            \"roleName\": \"Hybrid Cloud Management\",\n            \"roleDescription\": \"Access to Divvy health plugin\"\n        },\n        {\n            \"roleName\": \"Network\"\n        },\n        {\n            \"roleName\": \"Network Report\"\n        },\n        {\n            \"roleName\": \"Online Ordering\"\n        },\n        {\n            \"roleName\": \"Power Dashboard\"\n        },\n        {\n            \"roleName\": \"Power Device\"\n        },\n        {\n            \"roleName\": \"Power Location\"\n        },\n        {\n            \"roleName\": \"Roster Admin\"\n        },\n        {\n            \"roleName\": \"Roster Badge Report\",\n            \"roleDescription\": \"Roster Badge Report\"\n        },\n        {\n            \"roleName\": \"Roster User\"\n        },\n        {\n            \"roleName\": \"Security\"\n        },\n        {\n            \"roleName\": \"Sensor Report\"\n        },\n        {\n            \"roleName\": \"Site Access\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get List Roster Users",
              "_postman_id": "dba2b0ca-bfab-4599-93f6-5d457cc73571",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": "{{url}}/sdp/api/roster/v1/users",
                "description": "This API method return list of Roster Users related to your Company and related to at least one permitted Environment.\n\nv1 of the Roster APIs use the following search parameter format:  \n**?_s=field==value**\n\nFilters supported:  \n* environmentName - returns users related to specified Environment\n* username - returns users with specified username\n* firstName - returns users with specified first name\n* lastName - returns users with specified last name\n* email - returns users with specified email address\n* roleName - returns users having specified role assigned\n\nExamples:\n\n/sdp/api/roster/v1/users?_s=username==test  Search for users with username that contains 'test'  \n\n/sdp/api/roster/v1/users?_s=username==john.test Search for users that have \u2018john.test\u2019 as username  \n\n/sdp/api/roster/v1/users?pageNumber=2&pageSize=10 Return only second page, 10 results per page  \n\n/sdp/api/roster/v1/users?_s=firstName==john;lastName==lee Return Roster users with first name as \u2018john\u2019 AND last name as \u2018lee\u2019  \n\n/sdp/api/roster/v1/users?_s=firstName==john,lastName==lee Return Roster users with first name as \u2018john\u2019 OR last name as \u2018lee\u2019  \n\n/sdp/api/roster/v1/users?_s=dateCreation=lt=2018-09-01 Returns only records created before September 1, 2018  \n\n/sdp/api/roster/v1/users?_s=dateCreation=gt=2018-09-01 Return only records created after September 1, 2018  \n\n/sdp/api/roster/v1/users?orderBy=username Results will be sorted by username, ascending order by default"
              },
              "response": [
                {
                  "id": "6d12ee42-16b1-46c5-8789-3fe3410b1c1e",
                  "name": "List Roster Users",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/api/roster/v1/users?_s=username==portal.demo",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "api",
                        "roster",
                        "v1",
                        "users"
                      ],
                      "query": [
                        {
                          "key": "_s",
                          "value": "username==portal.demo"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 18 Mar 2019 20:42:33 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"totalCount\": 1,\n    \"pageNumber\": 1,\n    \"pageSize\": 20,\n    \"pageCount\": 1,\n    \"users\": [\n        {\n            \"username\": \"portal.demo\",\n            \"userType\": \"CUSTOMER_STANDARD\",\n            \"userStatus\": \"Active\",\n            \"userLocked\": \"Not Locked\",\n            \"firstName\": \"Portal\",\n            \"middleName\": \"\",\n            \"lastName\": \"Demo-CSF\",\n            \"email\": \"reda.saidi@qtsdatacenters.com\",\n            \"businessPhone\": \"(703) 201-1964\",\n            \"mobilePhone\": \"(703) 201-1968\",\n            \"title\": \"Test Title\",\n            \"passphrase\": \"Passphrase\",\n            \"notifications\": true,\n            \"ticketRequester\": true,\n            \"badgeActive\": false,\n            \"badgeInactive\": false,\n            \"linkedEnvironments\": [\n                {\n                    \"environmentId\": 926,\n                    \"environmentName\": \"qts-sales-sam-training\"\n                },\n                {\n                    \"environmentId\": 8998,\n                    \"environmentName\": \"qts-sales-sam-smartrack\"\n                },\n                {\n                    \"environmentId\": 976,\n                    \"environmentName\": \"qts-sales-sam-fed\"\n                },\n                {\n                    \"environmentId\": 977,\n                    \"environmentName\": \"qts-sales-sam-ent\"\n                },\n                {\n                    \"environmentId\": 975,\n                    \"environmentName\": \"qts-sales-sam-comp\"\n                }\n            ],\n            \"associatedRoles\": [\n                {\n                    \"roleName\": \"Workbook - Read-only\",\n                    \"roleId\": 51,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Workbook - Editor\",\n                    \"roleId\": 52,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Roster Admin\",\n                    \"roleId\": 93,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Online Ordering\",\n                    \"roleId\": 106,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Calendar View\",\n                    \"roleId\": 97,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Power Dashboard\",\n                    \"roleId\": 99,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Network\",\n                    \"roleId\": 40,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Power Location\",\n                    \"roleId\": 100,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Power Device\",\n                    \"roleId\": 101,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Sensor Report\",\n                    \"roleId\": 107,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Network Report\",\n                    \"roleId\": 108,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Compliance Documents\",\n                    \"roleId\": 110,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Hybrid Cloud Management\",\n                    \"roleId\": 102,\n                    \"roleDescription\": \"Access to Divvy health plugin\"\n                },\n                {\n                    \"roleName\": \"Hybrid Cloud Analyst\",\n                    \"roleId\": 105,\n                    \"roleDescription\": \"Provides access to Cloudcheckr\"\n                },\n                {\n                    \"roleName\": \"Equipment User\",\n                    \"roleId\": 111,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Equipment Admin\",\n                    \"roleId\": 112,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"SmartRack Admin\",\n                    \"roleId\": 117,\n                    \"roleDescription\": null\n                },\n                {\n                    \"roleName\": \"Roster Badge Report\",\n                    \"roleId\": 126,\n                    \"roleDescription\": \"Roster Badge Report\"\n                }\n            ],\n            \"authType\": \"BasicAuth\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Get List User Site Attributes",
              "_postman_id": "bf5c597f-8034-4670-bbe1-2dba1ef27107",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/v1/users/site_attributes?pageSize=100",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "v1",
                    "users",
                    "site_attributes"
                  ],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "100"
                    }
                  ]
                },
                "description": "This API method allows API Users with access to the Roster Admin role to List site attributes associated with their environment(s).\n\nFilters supported:  \n* locationName - returns users having site attributes of defined location. Case-sensitive parameter\n* username - returns site attributes of environment for associated user\n* accessStartDate - returns users with site attributes of specified Start Date for associated environment\n* accessEndDate - returns users with site attributes of specified End Date for associated environment\n* floorAccess - returns users with site attributes with specified \u2018floor access\u2019 value. boolean\n* officeAccess - returns users with site attributes with specified \u2018Office access\u2019 value. boolean\n* equipmentRemoval - returns users with site attributes with specified \u2018Equipment removal\u2019 value. boolean\n* requestTemporaryAccess - returns users with site attributes with specified \u2018Request Visitor Access\u2019 value. boolean\n* active - returns users with site attributes with specified status. boolean\n\nEnsure pageSize parameter is greater than number of records returned."
              },
              "response": [
                {
                  "id": "1d58f5ce-a858-46a6-971b-e7c892c03461",
                  "name": "List User site attributes",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      }
                    ],
                    "url": "{{url}}/sdp/api/roster/v1/users/site_attributes"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Mon, 18 Mar 2019 20:47:03 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"totalCount\": 77,\n    \"pageNumber\": 1,\n    \"pageSize\": 20,\n    \"pageCount\": 20,\n    \"users\": [\n        {\n           {\n            \"username\": \"ahlanetest\",\n            \"userSiteAttributes\": [\n                {\n                    \"siteAttributeID\": \"246d42e16f9dae8c02477f512e3ee463\",\n                    \"locationName\": \"ATL1\",\n                    \"accessStartDate\": \"2016-08-17 15:18:00 +0000\",\n                    \"accessEndDate\": \"2017-04-07 14:44:00 +0000\",\n                    \"floorAccess\": \"None\",\n                    \"officeAccess\": false,\n                    \"requestVisitorAccess\": false,\n                    \"equipmentRemoval\": false,\n                    \"routine\": true,\n                    \"comprehensive\": true,\n                    \"emergency\": true,\n                    \"badge\": {\n                        \"badgeNumber\": \"00000\",\n                        \"badgeAccessStatus\": \"Badge Access Deactivated\"\n                    },\n                    \"active\": true\n                },\n                {\n                    \"siteAttributeID\": \"2cbe4ea96f9dae8c02477f512e3ee4ef\",\n                    \"locationName\": \"EDC1\",\n                    \"accessStartDate\": \"2017-04-07 16:00:00 +0000\",\n                    \"accessEndDate\": \"2017-04-07 14:44:00 +0000\",\n                    \"floorAccess\": \"None\",\n                    \"officeAccess\": false,\n                    \"requestVisitorAccess\": false,\n                    \"equipmentRemoval\": false,\n                    \"routine\": true,\n                    \"comprehensive\": true,\n                    \"emergency\": true,\n                    \"badge\": {\n                        \"badgeNumber\": \"1232324\",\n                        \"badgeAccessStatus\": \"Badge Access Deactivated\"\n                    },\n                    \"active\": true\n                },\n                {\n                    \"siteAttributeID\": \"d46deb766fe7164002477f512e3ee4dd\",\n                    \"locationName\": \"SJC1\",\n                    \"accessStartDate\": \"2016-05-26 19:40:00 +0000\",\n                    \"accessEndDate\": \"2017-04-07 14:44:00 +0000\",\n                    \"floorAccess\": \"None\",\n                    \"officeAccess\": false,\n                    \"requestVisitorAccess\": false,\n                    \"equipmentRemoval\": false,\n                    \"routine\": true,\n                    \"comprehensive\": true,\n                    \"emergency\": true,\n                    \"badge\": {\n                        \"badgeAccessStatus\": \"Badge Access Deactivated\"\n                    },\n                    \"active\": true\n                }\n            ]\n        }\n       "
                }
              ]
            },
            {
              "name": "Roster User Data Export",
              "_postman_id": "512369dd-c631-45f4-8363-f84c56ad530f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{url}}/sdp/api/roster/v1/users/export?format=csv",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "sdp",
                    "api",
                    "roster",
                    "v1",
                    "users",
                    "export"
                  ],
                  "query": [
                    {
                      "key": "format",
                      "value": "csv"
                    }
                  ]
                },
                "description": "This API generates .csv or .xls report file with user data for all uses that are available for requester.\n\nSupported parameters:\nformat - Supported values: \u2018csv\u2019, \u2018xls\u2019. Required parameter"
              },
              "response": [
                {
                  "id": "5d13190d-91dd-4835-80f7-e6633fcea923",
                  "name": "Roster User data export",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/sdp/api/roster/v1/users/export?format=csv",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "sdp",
                        "api",
                        "roster",
                        "v1",
                        "users",
                        "export"
                      ],
                      "query": [
                        {
                          "key": "format",
                          "value": "csv"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "plain",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/csv"
                    },
                    {
                      "key": "Content-Disposition",
                      "value": "attachment;filename=\"RosterReport.csv\""
                    },
                    {
                      "key": "Date",
                      "value": "Wed, 20 Mar 2019 13:55:18 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "User Status,Locked,Username,User Type,Last Name,First Name,Title,Business Phone,Mobile Phone,Home Phone,Roster Email Notifications,Ticket Requester,Email,Environments,Roles,Badge Active,Badge Inactive,Site Attribute ID,Site Name,Access Start Date,Access End Date,Floor Access,Office Access,Equipment Removal,Change Type Notification: Routine,Change Type Notification: Comprehensive,Change Type Notification: Emergency\r\nActive,Not Locked,api_demo,API_CUSTOMER_STANDARD,,,,,,,None,True,,qts-sales-sam-training,\"API Ticketing Admin, Equipment Admin, Online Ordering, Power Dashboard, Power Device, Power Location, Roster Admin\",,,,,,,,,,,,\r\n\r\n"
                }
              ]
            },
            {
              "name": "Create New Roster User",
              "_postman_id": "1d90756c-3507-44f0-a324-42bd1ec4d7ab",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\"username\":\"test_user\", \r\n\"userType\":\"CUSTOMER_STANDARD\",\r\n\"authType\": \"Basic\",\r\n\"userStatus\":\"Active\",\r\n\"firstName\":\"Test\",\r\n\"lastName\":\"User\",\r\n\"middleName\":\"Jr\",\r\n\"title\":\"mr\",\r\n\"email\":\"test@noreplyqts.com\",\r\n\"homePhone\":\"2223032512\",\r\n\"mobilePhone\":\"79203455566\",\r\n\"businessPhone\":\"4445566954\",\r\n\"notifications\":\"true\",\r\n\"ticketRequester\":\"false\",\r\n\"notifierOnly\":\"false\",\r\n\"linkedEnvironments\": [\r\n\"qts-sales-sam-training\"\r\n],\r\n\"associatedRoles\": [\r\n\"Roster User\"\r\n],\r\n\"userSiteAttributes\":[\r\n{\r\n\"locationName\": \"ATL1\",\r\n\"floorAccess\": \"Escorted by Customer\",\r\n\"officeAccess\": false,\r\n\"equipmentRemoval\": false,\r\n\"accessStartDate\": \"2017-08-08 11:42:00 +0000\",\r\n\"routine\": true,\r\n\"comprehensive\": true,\r\n\"emergency\": true,\r\n\"routineNotifications\": true,\r\n\"routineNotificationsReminderHours\": 24,\r\n\"comprehensiveNotificationsReminderHours\": 48\r\n}\r\n]\r\n}"
                },
                "url": "{{url}}/sdp/api/roster/v1/users",
                "description": "Method allows privileged API Users to provision a new Customer User with CUSTOMER_STANDARD type."
              },
              "response": [
                {
                  "id": "2f33f35f-7318-43b9-b151-a9505e04cd2f",
                  "name": "Create new Roster User",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n\"username\":\"test_user\", \r\n\"userType\":\"CUSTOMER_STANDARD\",\r\n\"authType\": \"Basic\",\r\n\"userStatus\":\"Active\",\r\n\"firstName\":\"Test\",\r\n\"lastName\":\"User\",\r\n\"middleName\":\"Jr\",\r\n\"title\":\"mr\",\r\n\"email\":\"test@noreplyqts.com\",\r\n\"homePhone\":\"2223032512\",\r\n\"mobilePhone\":\"79203455566\",\r\n\"businessPhone\":\"4445566954\",\r\n\"notifications\":\"true\",\r\n\"ticketRequester\":\"false\",\r\n\"notifierOnly\":\"false\",\r\n\"linkedEnvironments\": [\r\n\"qts-sales-sam-training\"\r\n],\r\n\"associatedRoles\": [\r\n\"Roster User\"\r\n],\r\n\"userSiteAttributes\":[\r\n{\r\n\"locationName\": \"ATL1\",\r\n\"floorAccess\": \"Escorted by Customer\",\r\n\"officeAccess\": false,\r\n\"equipmentRemoval\": false,\r\n\"accessStartDate\": \"2017-08-08 11:42:00 +0000\",\r\n\"routine\": true,\r\n\"comprehensive\": true,\r\n\"emergency\": true,\r\n\"routineNotifications\": true,\r\n\"routineNotificationsReminderHours\": 24,\r\n\"comprehensiveNotificationsReminderHours\": 48\r\n}\r\n]\r\n}"
                    },
                    "url": "{{url}}/sdp/api/roster/v1/users"
                  },
                  "_postman_previewlanguage": null,
                  "header": null,
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\n    \"message\": \"Successfully created a new Roster User test_user \"\r\n}\r\n"
                }
              ]
            },
            {
              "name": "Assign Environment to User",
              "_postman_id": "6f4bdb82-924a-4cc1-9988-cf5a2ae381f3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\r\n\"test_environment_name_1\", \"test_environment_name_2\"\r\n]"
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/environments",
                "description": "Method allows privileged API Customer User to assign one or several permitted Environments for existing Customer Users.  The API user account must have access to environment that is being assigned."
              },
              "response": [
                {
                  "id": "38bc4956-fea6-48e3-9b0c-df59489fdf33",
                  "name": "Assign Environment to Customer User",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\r\n\"test_environment_name_1, test_environment_name_2\r\n]"
                    },
                    "url": "{{url}}/sdp/api/roster/v1/users/{username}/environments"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Wed, 20 Mar 2019 18:21:03 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"message\": \"Successfully assigned test_environment_name_1 Environment for User test.user\"\n}"
                }
              ]
            },
            {
              "name": "Assign Role to User",
              "_postman_id": "aa802097-9e2d-4bb3-9a80-52b84ff7aca9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\r\n\"Roster User\", \"Roster Admin\"\r\n]"
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/roles",
                "description": "Method allows privileged API Customer User to assign one or several Roles for existing Customer Users.\nUsername must be specified in URL."
              },
              "response": [
                {
                  "id": "d9ff3f5b-6b29-444f-9e1e-ad7836553327",
                  "name": "Assign Role to Customer User",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\r\n\"Roster User\", \"Roster Admin\"\r\n]"
                    },
                    "url": "{{url}}/sdp/api/roster/v1/users/{username}/roles"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Wed, 20 Mar 2019 18:41:29 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"message\": \"Successfully assigned Roster User, Roster Admin Roles for User username\"\n}"
                }
              ]
            },
            {
              "name": "Assign New Site Attribute to User",
              "_postman_id": "1e9f032e-39d7-4824-9df3-18188cb6c8a4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\r\n[\r\n{\r\n\"locationName\": \"DFW2\",\r\n\"floorAccess\": \"Escorted by Customer\",\r\n\"officeAccess\": false,\r\n\"equipmentRemoval\": false,\r\n\"accessStartDate\": \"2017-08-08 11:42:00 +0000\",\r\n\"routine\": true,\r\n\"comprehensive\": true,\r\n\"emergency\": true,\r\n\"routineNotifications\": true,\r\n\"routineNotificationsReminderHours\": 24,\r\n\"comprehensiveNotificationsReminderHours\": 24\r\n}\r\n]"
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/site_attributes",
                "description": "Method allows privileged API Customer Users to assign Roster Site attributes on existing Customer Users"
              },
              "response": [
                {
                  "id": "605d902c-6189-451b-a668-de89951d6ba8",
                  "name": "Assign new Site attribute to a Roster user",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer {{ACCESS_TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "\r\n[\r\n{\r\n\"locationName\": \"ATL1\",\r\n\"floorAccess\": \"Escorted by Customer\",\r\n\"officeAccess\": false,\r\n\"equipmentRemoval\": false,\r\n\"accessStartDate\": \"2017-08-08 11:42:00 +0000\",\r\n\"routine\": true,\r\n\"comprehensive\": true,\r\n\"emergency\": true,\r\n\"routineNotifications\": true,\r\n\"routineNotificationsReminderHours\": 24,\r\n\"comprehensiveNotificationsReminderHours\": 24\r\n}\r\n]"
                    },
                    "url": "{{url}}/sdp/api/roster/v1/users/{username}/site_attributes"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Date",
                      "value": "Wed, 20 Mar 2019 18:43:26 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Server",
                      "value": "Jetty(9.2.14.v20151106)"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "sameorigin"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\n    \"message\": \"Successfully assigned a Roster Attributes for ATL1 Location(s) for User username\"\n}"
                }
              ]
            },
            {
              "name": "Update Roster User Details",
              "_postman_id": "87965e88-f086-4e8e-b615-76ec7b6672e4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n\"userStatus\":\"Active\",\r\n\"firstName\":\"Alex\",\r\n\"lastName\":\"Li\",\r\n\"middleName\":\"J_updates\",\r\n\"title\":\"mr\",\r\n\"email\":\"alex.li@noreplyqts.com\",\r\n\"homePhone\":\"2223300022\",\r\n\"mobilePhone\":\"7920455566\",\r\n\"businessPhone\":\"4445560006\",\r\n\"notifications\":\"true\",\r\n\"ticketRequester\":\"false\"\r\n}"
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}",
                "description": "Method allows privileged API Customer User to update User details for existing Customer User"
              },
              "response": []
            },
            {
              "name": "Update Existing Site Attribute of User",
              "_postman_id": "a002daa1-4012-4911-bdbb-5abd8bee7985",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\r\n{\r\n\"siteAttributeID\": \"1246b0101310b6c0d1047e276144b09f\",\r\n\"locationName\": \"ATL1\",\r\n\"floorAccess\": \"Escorted by Customer\",\r\n\"officeAccess\": false,\r\n\"equipmentRemoval\": false,\r\n\"accessStartDate\": \"2016-08-08 11:42:00 +0000\",\r\n\"accessEndDate\": \"2017-08-08 11:42:00 +0000\",\r\n\"routine\": true,\r\n\"comprehensive\": true,\r\n\"emergency\": true,\r\n\"routineNotifications\": false,\r\n\"routineNotificationsReminderHours\": 24,\r\n\"comprehensiveNotificationsReminderHours\": 24\r\n}\r\n]"
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/site_attributes",
                "description": "Method allows privileged API User to update User Site attributes for existing Customer User."
              },
              "response": []
            },
            {
              "name": "Unlock User",
              "_postman_id": "eb99c32e-9457-42fb-b391-024e07ab35d7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\r\n[\r\n{\r\n\"locationName\": \"DFW2\",\r\n\"floorAccess\": \"Escorted by Customer\",\r\n\"officeAccess\": false,\r\n\"equipmentRemoval\": false,\r\n\"accessStartDate\": \"2017-08-08 11:42:00 +0000\",\r\n\"routine\": true,\r\n\"comprehensive\": true,\r\n\"emergency\": true,\r\n\"routineNotifications\": true,\r\n\"routineNotificationsReminderHours\": 24,\r\n\"comprehensiveNotificationsReminderHours\": 24\r\n}\r\n]"
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/unlock",
                "description": "Roster user that was previously locked due to number of failed login attempts would be unlocked as result of request execution. Username must be specified in URL."
              },
              "response": []
            },
            {
              "name": "Remove Role from User",
              "_postman_id": "faaa2cf4-bf2b-4776-9291-210fb495a8d5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/roles/{role_name}",
                "description": "Method allows privileged API Customer User to remove specified  Role for existing Customer User"
              },
              "response": []
            },
            {
              "name": "Remove Environment from User",
              "_postman_id": "47511064-11d6-4e73-9366-289e1ed140e5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/environments/{environment_name}",
                "description": "Method allows privileged API User to remove specified Environment from existing Customer User.  Priveleged API user can not remove an environment from itself."
              },
              "response": []
            },
            {
              "name": "Remove Site Attribute from User",
              "_postman_id": "610d66cc-d1cf-4e41-b286-7822e2f947e4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{url}}/sdp/api/roster/v1/users/{username}/site_attributes/{siteAttributeID}",
                "description": "Method allows privileged API Customer User to remove specified site attribute from existing Customer User"
              },
              "response": []
            }
          ],
          "_postman_id": "ff635a50-2e1c-43a9-8afe-4c22769df6ba",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "2bd671f1-3c30-4df4-ad32-6bebe920bb38",
      "description": "### Overview\r\n\r\nRoster API methods enable API user to manage Roster Records in terms of create, read, update, delete user's attributes, environments, role assignments and site access.  \r\n\r\nAdditionally, the Roster API is an enabler for utilizing other operations. In order to use the Power API, you will need to learn your Environment, which is provided by the List Environment or List Roster User attributes API.\r\n\r\nAvailable Roster API methods are mentioned under following URL: /sdp/api/roster/v1?_wadl\r\n\r\nThe API user must have the Roster Admin role assigned to execute Roster API methods.\r\n\r\n### Filtering and Paging\r\n\r\nv1 of the Roster APIs use the following search parameter format:  \r\n**?_s=field==value**\r\n\r\n#### Examples:\r\n\r\n/sdp/api/roster/v1/users?_s=username==test  Search for users with username that contains 'test'  \r\n\r\n/sdp/api/roster/v1/users?_s=username==john.test Search for users that have \u2018john.test\u2019 as username  \r\n\r\n/sdp/api/roster/v1/users?pageNumber=2&pageSize=10 Return only second page, 10 results per page  \r\n\r\n/sdp/api/roster/v1/users?_s=firstName==john;lastName==lee Return Roster users with first name as \u2018john\u2019 AND last name as \u2018lee\u2019  \r\n\r\n/sdp/api/roster/v1/users?_s=firstName==john,lastName==lee Return Roster users with first name as \u2018john\u2019 OR last name as \u2018lee\u2019  \r\n\r\n/sdp/api/roster/v1/users?_s=dateCreation=lt=2018-09-01 Returns only records created before September 1, 2018  \r\n\r\n/sdp/api/roster/v1/users?_s=dateCreation=gt=2018-09-01 Return only records created after September 1, 2018  \r\n\r\n/sdp/api/roster/v1/users?orderBy=username Results will be sorted by username, ascending order by default",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "2df4c08e-8763-4a95-ad33-3ffe880373a6",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "ccee6304-0a02-4d11-9f9b-9504717d8806",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "oauth2",
    "oauth2": {
      "addTokenTo": "header"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "192d798e-e7e8-47c2-87ab-da23536bc4f5",
        "type": "text/javascript",
        "exec": [
          "eval(pm.environment.get(\"GET_CUSTOMER_COMPLIANT_TOKEN\"));"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "d7d07989-a125-45c7-8df4-77980bc7a358",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}